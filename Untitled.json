{
  "buildConfigurationName": "Debug",
  "diagnostics": [
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 102,
          "byteOffset": 275,
          "line": 13,
          "utf16Column": 102,
          "utf16Offset": 275
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 173,
          "line": 13,
          "utf16Column": 0,
          "utf16Offset": 173
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/ArticlesViewController/ArticleDetailsViewController.h",
      "fileSnippet": "@interface ArticleDetailsViewController : BaseViewController <UIWebViewDelegate, UIScrollViewDelegate>",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "ArticleDetailsViewController",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initWithCoder:",
      "extent": {
        "end": {
          "byteColumn": 72,
          "byteOffset": 3187,
          "line": 78,
          "utf16Column": 71,
          "utf16Offset": 3186
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 3120,
          "line": 78,
          "utf16Column": 4,
          "utf16Offset": 3119
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/UserModel.m",
      "fileSnippet": "self.lastName           = [aDecoder decodeObjectForKey:@\"lastName\"]",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "lastName",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "RegistrationSurveyController",
      "extent": {
        "end": {
          "byteColumn": 59,
          "byteOffset": 10351,
          "line": 293,
          "utf16Column": 58,
          "utf16Offset": 10350
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 10293,
          "line": 293,
          "utf16Column": 0,
          "utf16Offset": 10292
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SurveysController/RegistrationSurveyController.m",
      "fileSnippet": "- (void)czpickerViewWillDisplay:(CZPickerView *)pickerView",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">czpicker</code> in the symbol name <code class=\"fauxpas-codesymbol\">czpickerViewWillDisplay:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "czpicker",
      "impact": "Style",
      "info": "The word czpicker in the symbol name czpickerViewWillDisplay: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> <code class=\"fauxpas-string\">2100</code> (id <code class=\"fauxpas-string\">5wX-tn-4N6</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel 2100 (id 5wX-tn-4N6)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel 2100 (id 5wX-tn-4N6) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> <code class=\"fauxpas-string\">2100</code> (id <code class=\"fauxpas-string\">Xar-zS-Tvf</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel 2100 (id Xar-zS-Tvf)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel 2100 (id Xar-zS-Tvf) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> <code class=\"fauxpas-string\">2100</code> (id <code class=\"fauxpas-string\">4dB-ng-kUD</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel 2100 (id 4dB-ng-kUD)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel 2100 (id 4dB-ng-kUD) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> <code class=\"fauxpas-string\">2100</code> (id <code class=\"fauxpas-string\">5O1-Rr-VPg</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel 2100 (id 5O1-Rr-VPg)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel 2100 (id 5O1-Rr-VPg) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> <code class=\"fauxpas-string\">2100</code> (id <code class=\"fauxpas-string\">HnT-rU-RK0</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel 2100 (id HnT-rU-RK0)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel 2100 (id HnT-rU-RK0) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> <code class=\"fauxpas-string\">2100</code> (id <code class=\"fauxpas-string\">2YR-Ab-XZf</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel 2100 (id 2YR-Ab-XZf)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel 2100 (id 2YR-Ab-XZf) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> <code class=\"fauxpas-string\">2100</code> (id <code class=\"fauxpas-string\">MUk-Iu-jwn</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel 2100 (id MUk-Iu-jwn)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel 2100 (id MUk-Iu-jwn) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> <code class=\"fauxpas-string\">2100</code> (id <code class=\"fauxpas-string\">hMC-b8-3yL</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel 2100 (id hMC-b8-3yL)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel 2100 (id hMC-b8-3yL) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> <code class=\"fauxpas-string\">2100</code> (id <code class=\"fauxpas-string\">Bm7-0x-LRI</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel 2100 (id Bm7-0x-LRI)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel 2100 (id Bm7-0x-LRI) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> <code class=\"fauxpas-string\">2100</code> (id <code class=\"fauxpas-string\">VH4-Ba-rVS</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel 2100 (id VH4-Ba-rVS)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel 2100 (id VH4-Ba-rVS) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> <code class=\"fauxpas-string\">2100</code> (id <code class=\"fauxpas-string\">wlJ-Ut-2R4</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel 2100 (id wlJ-Ut-2R4)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel 2100 (id wlJ-Ut-2R4) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> <code class=\"fauxpas-string\">50mg</code> (id <code class=\"fauxpas-string\">Le4-Eb-wHC</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel 50mg (id Le4-Eb-wHC)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel 50mg (id Le4-Eb-wHC) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> <code class=\"fauxpas-string\">Time</code> (id <code class=\"fauxpas-string\">LIk-8m-kNe</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel Time (id LIk-8m-kNe)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel Time (id LIk-8m-kNe) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> <code class=\"fauxpas-string\">Dose</code> (id <code class=\"fauxpas-string\">4ul-TX-oJC</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel Dose (id 4ul-TX-oJC)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel Dose (id 4ul-TX-oJC) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> <code class=\"fauxpas-string\">On :</code> (id <code class=\"fauxpas-string\">5LX-dl-2zV</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel On : (id 5LX-dl-2zV)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel On : (id 5LX-dl-2zV) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> <code class=\"fauxpas-string\">Unit</code> (id <code class=\"fauxpas-string\">2bW-E9-FZE</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel Unit (id 2bW-E9-FZE)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel Unit (id 2bW-E9-FZE) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> <code class=\"fauxpas-string\">2100</code> (id <code class=\"fauxpas-string\">NsJ-4s-hYP</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel 2100 (id NsJ-4s-hYP)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel 2100 (id NsJ-4s-hYP) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> <code class=\"fauxpas-string\">2100</code> (id <code class=\"fauxpas-string\">tCT-UB-IXp</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel 2100 (id tCT-UB-IXp)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel 2100 (id tCT-UB-IXp) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/Categories/IQUIWindow+Hierarchy.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCSurveyScreen/CHCChildDetailsController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCHealthLogScreen/CHCHealthLogController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "InstructionsViewController",
      "extent": {
        "end": {
          "byteColumn": 49,
          "byteOffset": 296,
          "line": 13,
          "utf16Column": 48,
          "utf16Offset": 295
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 248,
          "line": 13,
          "utf16Column": 0,
          "utf16Offset": 247
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/InstructionsViewController/InstructionsViewController.h",
      "fileSnippet": "@property (nonatomic, retain) NSString* helpText",
      "html": {
        "info": "The <code>helpText</code> property is declared with <code>retain</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The helpText property is declared with retain semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 73,
          "byteOffset": 1695,
          "line": 40,
          "utf16Column": 72,
          "utf16Offset": 1695
        },
        "start": {
          "byteColumn": 52,
          "byteOffset": 1674,
          "line": 40,
          "utf16Column": 51,
          "utf16Offset": 1674
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCRequestAppointmentNewController.m",
      "fileSnippet": "getDoctorsRequestDict",
      "html": {
        "info": "In Cocoa, it is idiomatic for accessor methods to be named in the form <code>something</code> instead of e.g. <code>getSomething</code>.",
        "ruleDescription": "Warns if getter methods are named in the form <code>getSomething</code> instead of <code>something</code>.",
        "ruleName": "Unidiomatic accessor naming",
        "ruleShortName": "UnidiomaticAccessorNaming",
        "ruleWarning": null
      },
      "identifier": "-[CHCRequestAppointmentNewController getDoctorsRequestDict]",
      "impact": "Style",
      "info": "In Cocoa, it is idiomatic for accessor methods to be named in the form something instead of e.g. getSomething.",
      "ruleDescription": "Warns if getter methods are named in the form getSomething instead of something.",
      "ruleName": "Unidiomatic accessor naming",
      "ruleShortName": "UnidiomaticAccessorNaming",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "SearchDoctorController",
      "extent": {
        "end": {
          "byteColumn": 87,
          "byteOffset": 9241,
          "line": 271,
          "utf16Column": 86,
          "utf16Offset": 9240
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 9155,
          "line": 271,
          "utf16Column": 0,
          "utf16Offset": 9154
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/SearchDoctorController.m",
      "fileSnippet": "- (void)czpickerView:(CZPickerView *)pickerView didConfirmWithItemAtRow:(NSInteger)row",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">czpicker</code> in the symbol name <code class=\"fauxpas-codesymbol\">czpickerView:didConfirmWithItemAtRow:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "czpicker",
      "impact": "Style",
      "info": "The word czpicker in the symbol name czpickerView:didConfirmWithItemAtRow: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "setBadgeValue:",
      "extent": {
        "end": {
          "byteColumn": 23,
          "byteOffset": 3538,
          "line": 142,
          "utf16Column": 22,
          "utf16Offset": 3538
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 3524,
          "line": 142,
          "utf16Column": 8,
          "utf16Offset": 3524
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/../GIBadgeView.m",
      "fileSnippet": "badgeValue = 0",
      "html": {
        "info": null,
        "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
        "ruleName": "Modifying the value of an argument variable",
        "ruleShortName": "ArgumentModification",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
      "ruleName": "Modifying the value of an argument variable",
      "ruleShortName": "ArgumentModification",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "DoctorSearchResultsController",
      "extent": {
        "end": {
          "byteColumn": 53,
          "byteOffset": 737,
          "line": 22,
          "utf16Column": 52,
          "utf16Offset": 736
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 685,
          "line": 22,
          "utf16Column": 0,
          "utf16Offset": 684
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/DoctorSearchResultsController.h",
      "fileSnippet": "@property (strong, nonatomic) NSString *locationName",
      "html": {
        "info": "The <code>locationName</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The locationName property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/APIModel/APIClass.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Images.xcassets/Dashboard/articles-icon.imageset/book-with-white-bookmark-2.png",
      "fileSnippet": null,
      "html": {
        "info": "Asset catalog ‘Images’, set ‘articles-icon’: <div class=\"fauxpas-filename\">book-with-white-bookmark-2.png</div> (x3 scale) resolution (256 x 256) should be 768 x 768.",
        "ruleDescription": "The retina (‘@2x’ or ‘@3x’) version of an image resource must be exactly double or triple the size of the corresponding low-resolution image (assuming the point size of the presentation context remains the same regardless of screen resolution). Otherwise the effective resolution of the image will not match the effective resolution of its presentation context, which will lead to a blurry image, empty space at the edges, or overflow.",
        "ruleName": "Unexpected retina image resolution",
        "ruleShortName": "RetinaImagesResolution",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "Asset catalog ‘Images’, set ‘articles-icon’: book-with-white-bookmark-2.png (x3 scale) resolution (256 x 256) should be 768 x 768.",
      "ruleDescription": "The retina (‘@2x’ or ‘@3x’) version of an image resource must be exactly double or triple the size of the corresponding low-resolution image (assuming the point size of the presentation context remains the same regardless of screen resolution). Otherwise the effective resolution of the image will not match the effective resolution of its presentation context, which will lead to a blurry image, empty space at the edges, or overflow.",
      "ruleName": "Unexpected retina image resolution",
      "ruleShortName": "RetinaImagesResolution",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 60,
          "byteOffset": 744,
          "line": 35,
          "utf16Column": 59,
          "utf16Offset": 743
        },
        "start": {
          "byteColumn": 42,
          "byteOffset": 726,
          "line": 35,
          "utf16Column": 41,
          "utf16Offset": 725
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/BaseUIController/CustomNavigationBar.m",
      "fileSnippet": "@\"profileImageURL\"",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns when literal strings are used to specify key paths.</p> <p>Something like <code>NSStringFromSelector(@selector(foo))</code> is safer because it makes the compiler aware of the selector being specified — this helps find typos at compile time and allows automatic refactoring tools to make appropriate changes.</p>",
        "ruleName": "Literal string for key path",
        "ruleShortName": "LiteralStringKeyPath",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when literal strings are used to specify key paths. Something like NSStringFromSelector(@selector(foo)) is safer because it makes the compiler aware of the selector being specified — this helps find typos at compile time and allows automatic refactoring tools to make appropriate changes.",
      "ruleName": "Literal string for key path",
      "ruleShortName": "LiteralStringKeyPath",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 50,
          "byteOffset": 2261,
          "line": 58,
          "utf16Column": 49,
          "utf16Offset": 2261
        },
        "start": {
          "byteColumn": 41,
          "byteOffset": 2252,
          "line": 58,
          "utf16Column": 40,
          "utf16Offset": 2252
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCAppointmentDetailsController.m",
      "fileSnippet": "dayofweek",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">Dayofweek</code> in the symbol name <code class=\"fauxpas-codesymbol\">setDayofweek:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "Dayofweek",
      "impact": "Style",
      "info": "The word Dayofweek in the symbol name setDayofweek: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "IQ_UIView_Hierarchy",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 2604,
          "line": 66,
          "utf16Column": 80,
          "utf16Offset": 2604
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 2524,
          "line": 65,
          "utf16Column": 0,
          "utf16Offset": 2524
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/Categories/IQUIView+Hierarchy.m",
      "fileSnippet": "-(void)_setIsAskingCanBecomeFirstResponder:(BOOL)isAskingCanBecomeFirstResponder",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "-[UIView _setIsAskingCanBecomeFirstResponder:]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 93,
          "byteOffset": 1144,
          "line": 27,
          "utf16Column": 92,
          "utf16Offset": 1144
        },
        "start": {
          "byteColumn": 58,
          "byteOffset": 1109,
          "line": 27,
          "utf16Column": 57,
          "utf16Offset": 1109
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCRewardsCatalogController.m",
      "fileSnippet": "choicePointRewardVerticleConstraint",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">Verticle</code> in the symbol name <code class=\"fauxpas-codesymbol\">choicePointRewardVerticleConstraint</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "Verticle",
      "impact": "Style",
      "info": "The word Verticle in the symbol name choicePointRewardVerticleConstraint may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "locationManager:didUpdateLocations:",
      "extent": {
        "end": {
          "byteColumn": 35,
          "byteOffset": 7194,
          "line": 193,
          "utf16Column": 34,
          "utf16Offset": 7194
        },
        "start": {
          "byteColumn": 17,
          "byteOffset": 7176,
          "line": 193,
          "utf16Column": 16,
          "utf16Offset": 7176
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/LocationManager.m",
      "fileSnippet": "notification = nil",
      "html": {
        "info": null,
        "ruleDescription": "<p>Writing to static variables (which is essentially global state) in instance methods is generally considered bad practice, because it easily leads to undesireable behavior when multiple instances are being manipulated.</p> <p>Warnings are suppressed for assignments occurring inside <code class=\"fauxpas-cfunction\">dispatch_once()</code> blocks.</p>",
        "ruleName": "Instance method writes to static variable",
        "ruleShortName": "InstanceMethodWritesToStaticVariable",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Writing to static variables (which is essentially global state) in instance methods is generally considered bad practice, because it easily leads to undesireable behavior when multiple instances are being manipulated. Warnings are suppressed for assignments occurring inside dispatch_once() blocks.",
      "ruleName": "Instance method writes to static variable",
      "ruleShortName": "InstanceMethodWritesToStaticVariable",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/../GIBadgeView.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "DoctorModel",
      "extent": {
        "end": {
          "byteColumn": 48,
          "byteOffset": 500,
          "line": 17,
          "utf16Column": 47,
          "utf16Offset": 499
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 453,
          "line": 17,
          "utf16Column": 0,
          "utf16Offset": 452
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/DoctorModel.h",
      "fileSnippet": "@property (nonatomic, strong) NSString *address",
      "html": {
        "info": "The <code>address</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The address property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "CHCAppointRequestSentController",
      "extent": {
        "end": {
          "byteColumn": 61,
          "byteOffset": 357,
          "line": 13,
          "utf16Column": 60,
          "utf16Offset": 357
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 297,
          "line": 13,
          "utf16Column": 0,
          "utf16Offset": 297
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCAppointRequestSentController.h",
      "fileSnippet": "@property (strong, nonatomic) NSDictionary *outputDictionary",
      "html": {
        "info": "The <code>outputDictionary</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The outputDictionary property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "UserModel",
      "extent": {
        "end": {
          "byteColumn": 56,
          "byteOffset": 756,
          "line": 24,
          "utf16Column": 55,
          "utf16Offset": 755
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 701,
          "line": 24,
          "utf16Column": 0,
          "utf16Offset": 700
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/UserModel.h",
      "fileSnippet": "@property (nonatomic, strong) NSString* register_survey",
      "html": {
        "info": "The <code>register_survey</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The register_survey property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 34,
          "byteOffset": 220,
          "line": 13,
          "utf16Column": 34,
          "utf16Offset": 219
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 186,
          "line": 13,
          "utf16Column": 0,
          "utf16Offset": 185
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/CustomViews/CustomButton.h",
      "fileSnippet": "@interface CustomButton : UIButton",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "CustomButton",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initWithHeaderTitle:cancelButtonTitle:confirmButtonTitle:",
      "extent": {
        "end": {
          "byteColumn": 64,
          "byteOffset": 2019,
          "line": 59,
          "utf16Column": 63,
          "utf16Offset": 2019
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 1964,
          "line": 59,
          "utf16Column": 8,
          "utf16Offset": 1964
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/CZPickerView.m",
      "fileSnippet": "self.cancelButtonHighlightedColor = [UIColor grayColor]",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "cancelButtonHighlightedColor",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SignUpController/NSString+TextDirectionality.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": "HorizontalTableViewCell",
      "extent": {
        "end": {
          "byteColumn": 102,
          "byteOffset": 1281,
          "line": 51,
          "utf16Column": 101,
          "utf16Offset": 1281
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 1180,
          "line": 51,
          "utf16Column": 0,
          "utf16Offset": 1180
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCHealthLogScreen/HorizontalTableViewCell.m",
      "fileSnippet": "-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns about Objective-C methods to which no references are found.</p> <p>This rule will not warn about <code class=\"fauxpas-codesymbol\">IBAction</code> methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form <code class=\"fauxpas-string\">*+Private.h</code>). It also won’t warn about unused getter methods whose setter is used, and vice versa.</p>",
        "ruleName": "Possibly unused Objective-C method",
        "ruleShortName": "UnusedMethod",
        "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool)."
      },
      "identifier": "-[HorizontalTableViewCell tableView:cellForRowAtIndexPath:]",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns about Objective-C methods to which no references are found. This rule will not warn about IBAction methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form *+Private.h). It also won’t warn about unused getter methods whose setter is used, and vice versa.",
      "ruleName": "Possibly unused Objective-C method",
      "ruleShortName": "UnusedMethod",
      "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool).",
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 34,
          "byteOffset": 1341,
          "line": 31,
          "utf16Column": 34,
          "utf16Offset": 1341
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 1307,
          "line": 31,
          "utf16Column": 0,
          "utf16Offset": 1307
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/IQTextView/IQTextView.h",
      "fileSnippet": "@interface IQTextView : UITextView",
      "html": {
        "info": "The <code class=\"fauxpas-string\">IQ</code> prefix is used. Two-character prefixes are reserved for Apple’s system frameworks. The prefixes in your own (or third-party) code should be at least three characters long.",
        "ruleDescription": "Two-character prefixes (such as <code>NS</code>) are reserved for Apple’s system frameworks. Your own code should use prefixes that are three characters long.",
        "ruleName": "Reserved symbol prefix",
        "ruleShortName": "ReservedPrefix",
        "ruleWarning": null
      },
      "identifier": "IQ",
      "impact": "Maintainability",
      "info": "The IQ prefix is used. Two-character prefixes are reserved for Apple’s system frameworks. The prefixes in your own (or third-party) code should be at least three characters long.",
      "ruleDescription": "Two-character prefixes (such as NS) are reserved for Apple’s system frameworks. Your own code should use prefixes that are three characters long.",
      "ruleName": "Reserved symbol prefix",
      "ruleShortName": "ReservedPrefix",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "RegistrationSurveyController",
      "extent": {
        "end": {
          "byteColumn": 51,
          "byteOffset": 7470,
          "line": 224,
          "utf16Column": 50,
          "utf16Offset": 7469
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 7356,
          "line": 223,
          "utf16Column": 0,
          "utf16Offset": 7355
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SurveysController/RegistrationSurveyController.m",
      "fileSnippet": "- (NSAttributedString *)czpickerView:(CZPickerView *)pickerView\n               attributedTitleForRow:(NSInteger)ro",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">czpicker</code> in the symbol name <code class=\"fauxpas-codesymbol\">czpickerView:attributedTitleForRow:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "czpicker",
      "impact": "Style",
      "info": "The word czpicker in the symbol name czpickerView:attributedTitleForRow: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/ScheduleAppointmentView.xib",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">CustomButton</code> (id <code class=\"fauxpas-string\">Wqd-99-OAg</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "CustomButton (id Wqd-99-OAg)",
      "impact": "Maintainability",
      "info": "Misplaced view: CustomButton (id Wqd-99-OAg) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/ScheduleAppointmentView.xib",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">CustomButton</code> (id <code class=\"fauxpas-string\">Mv9-e8-Ne9</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "CustomButton (id Mv9-e8-Ne9)",
      "impact": "Maintainability",
      "info": "Misplaced view: CustomButton (id Mv9-e8-Ne9) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/ScheduleAppointmentView.xib",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">CustomButton</code> (id <code class=\"fauxpas-string\">xYu-ji-ji6</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "CustomButton (id xYu-ji-ji6)",
      "impact": "Maintainability",
      "info": "Misplaced view: CustomButton (id xYu-ji-ji6) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/ScheduleAppointmentView.xib",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">CustomButton</code> (id <code class=\"fauxpas-string\">cy0-O4-4MM</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "CustomButton (id cy0-O4-4MM)",
      "impact": "Maintainability",
      "info": "Misplaced view: CustomButton (id cy0-O4-4MM) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/Doctor Smiling.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/Doctor Smiling.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/drawable/ic_launcher_web.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/drawable/ic_launcher_web.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/ScheduleAppointmentView.xib",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">CustomButton</code> (id <code class=\"fauxpas-string\">7VN-k0-dLU</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "CustomButton (id 7VN-k0-dLU)",
      "impact": "Maintainability",
      "info": "Misplaced view: CustomButton (id 7VN-k0-dLU) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/ScheduleAppointmentView.xib",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">CustomButton</code> (id <code class=\"fauxpas-string\">m04-Bp-RG6</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "CustomButton (id m04-Bp-RG6)",
      "impact": "Maintainability",
      "info": "Misplaced view: CustomButton (id m04-Bp-RG6) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/ScheduleAppointmentView.xib",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">CustomButton</code> (id <code class=\"fauxpas-string\">qvh-f1-rvQ</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "CustomButton (id qvh-f1-rvQ)",
      "impact": "Maintainability",
      "info": "Misplaced view: CustomButton (id qvh-f1-rvQ) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/ScheduleAppointmentView.xib",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">CustomButton</code> (id <code class=\"fauxpas-string\">ID5-QT-1RP</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "CustomButton (id ID5-QT-1RP)",
      "impact": "Maintainability",
      "info": "Misplaced view: CustomButton (id ID5-QT-1RP) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/ScheduleAppointmentView.xib",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">CustomButton</code> (id <code class=\"fauxpas-string\">67i-Qn-6uq</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "CustomButton (id 67i-Qn-6uq)",
      "impact": "Maintainability",
      "info": "Misplaced view: CustomButton (id 67i-Qn-6uq) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/ScheduleAppointmentView.xib",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">CustomButton</code> (id <code class=\"fauxpas-string\">R7P-y6-2dA</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "CustomButton (id R7P-y6-2dA)",
      "impact": "Maintainability",
      "info": "Misplaced view: CustomButton (id R7P-y6-2dA) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/ScheduleAppointmentView.xib",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">CustomButton</code> (id <code class=\"fauxpas-string\">sKY-in-HGK</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "CustomButton (id sKY-in-HGK)",
      "impact": "Maintainability",
      "info": "Misplaced view: CustomButton (id sKY-in-HGK) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/ScheduleAppointmentView.xib",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">CustomButton</code> (id <code class=\"fauxpas-string\">4HO-Lb-aY1</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "CustomButton (id 4HO-Lb-aY1)",
      "impact": "Maintainability",
      "info": "Misplaced view: CustomButton (id 4HO-Lb-aY1) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/ScheduleAppointmentView.xib",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">CustomButton</code> (id <code class=\"fauxpas-string\">cKR-Ra-l4z</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "CustomButton (id cKR-Ra-l4z)",
      "impact": "Maintainability",
      "info": "Misplaced view: CustomButton (id cKR-Ra-l4z) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/ScheduleAppointmentView.xib",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">CustomButton</code> (id <code class=\"fauxpas-string\">FZ1-IO-PEf</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "CustomButton (id FZ1-IO-PEf)",
      "impact": "Maintainability",
      "info": "Misplaced view: CustomButton (id FZ1-IO-PEf) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "load",
      "extent": {
        "end": {
          "byteColumn": 39,
          "byteOffset": 7787,
          "line": 207,
          "utf16Column": 38,
          "utf16Offset": 7787
        },
        "start": {
          "byteColumn": 6,
          "byteOffset": 7754,
          "line": 207,
          "utf16Column": 5,
          "utf16Offset": 7754
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/IQKeyboardManager.m",
      "fileSnippet": "[IQKeyboardManager sharedManager]",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. <code>[FOOThing alloc]</code>.</p> <p>It is recommended to use <code class=\"fauxpas-codesymbol\">self</code> instead (e.g. <code>[self alloc]</code> or <code>[[self class] alloc]</code>) so that the concrete class would receive the message, and subclassing behavior would not be impeded.</p>",
        "ruleName": "Hardcoded self class reference",
        "ruleShortName": "HardcodedSelfClass",
        "ruleWarning": null
      },
      "identifier": "IQKeyboardManager",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. [FOOThing alloc]. It is recommended to use self instead (e.g. [self alloc] or [[self class] alloc]) so that the concrete class would receive the message, and subclassing behavior would not be impeded.",
      "ruleName": "Hardcoded self class reference",
      "ruleShortName": "HardcodedSelfClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/ScheduleAppointmentView.xib",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">CustomButton</code> (id <code class=\"fauxpas-string\">Q7O-wO-3b9</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "CustomButton (id Q7O-wO-3b9)",
      "impact": "Maintainability",
      "info": "Misplaced view: CustomButton (id Q7O-wO-3b9) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "SearchDoctorController",
      "extent": {
        "end": {
          "byteColumn": 59,
          "byteOffset": 9930,
          "line": 291,
          "utf16Column": 58,
          "utf16Offset": 9929
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 9872,
          "line": 291,
          "utf16Column": 0,
          "utf16Offset": 9871
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/SearchDoctorController.m",
      "fileSnippet": "- (void)czpickerViewWillDisplay:(CZPickerView *)pickerView",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">czpicker</code> in the symbol name <code class=\"fauxpas-codesymbol\">czpickerViewWillDisplay:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "czpicker",
      "impact": "Style",
      "info": "The word czpicker in the symbol name czpickerViewWillDisplay: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "formatNumber:",
      "extent": {
        "end": {
          "byteColumn": 91,
          "byteOffset": 14732,
          "line": 404,
          "utf16Column": 90,
          "utf16Offset": 14731
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 14646,
          "line": 404,
          "utf16Column": 4,
          "utf16Offset": 14645
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SignUpController/CHCRegisterController.m",
      "fileSnippet": "mobileNumber = [mobileNumber stringByReplacingOccurrencesOfString:@\")\" withString:@\"\"]",
      "html": {
        "info": null,
        "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
        "ruleName": "Modifying the value of an argument variable",
        "ruleShortName": "ArgumentModification",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
      "ruleName": "Modifying the value of an argument variable",
      "ruleShortName": "ArgumentModification",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 76,
          "byteOffset": 282,
          "line": 12,
          "utf16Column": 76,
          "utf16Offset": 281
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 206,
          "line": 12,
          "utf16Column": 0,
          "utf16Offset": 205
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SurveysController/SurveysViewController.h",
      "fileSnippet": "@interface SurveysViewController : BaseViewController <UIAlertViewDelegate>{",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "SurveysViewController",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "IQToolbarAddition",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 14554,
          "line": 341,
          "utf16Column": 153,
          "utf16Offset": 14554
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 14401,
          "line": 340,
          "utf16Column": 0,
          "utf16Offset": 14401
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/IQToolbar/IQUIView+IQKeyboardToolbar.m",
      "fileSnippet": "-(void)addCancelDoneOnKeyboardWithTarget:(id)target cancelAction:(SEL)cancelAction doneAction:(SEL)doneAction shouldShowPlaceholder:(BOOL)showPlaceholder",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "-[UIView addCancelDoneOnKeyboardWithTarget:cancelAction:doneAction:shouldShowPlaceholder:]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 39,
          "byteOffset": 213,
          "line": 11,
          "utf16Column": 39,
          "utf16Offset": 212
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 174,
          "line": 11,
          "utf16Column": 0,
          "utf16Offset": 173
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/RequestCompleteView.h",
      "fileSnippet": "@interface RequestCompleteView : UIView",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "RequestCompleteView",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "CHCArticleDetails",
      "extent": {
        "end": {
          "byteColumn": 55,
          "byteOffset": 486,
          "line": 17,
          "utf16Column": 54,
          "utf16Offset": 486
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 432,
          "line": 17,
          "utf16Column": 0,
          "utf16Offset": 432
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCArticleDetails.h",
      "fileSnippet": "@property (nonatomic, strong) NSString *articleSnippet",
      "html": {
        "info": "The <code>articleSnippet</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The articleSnippet property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 61,
          "byteOffset": 375,
          "line": 18,
          "utf16Column": 60,
          "utf16Offset": 374
        },
        "start": {
          "byteColumn": 48,
          "byteOffset": 362,
          "line": 18,
          "utf16Column": 47,
          "utf16Offset": 361
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/BaseUIController/BottomBarView.m",
      "fileSnippet": "getHelpButton",
      "html": {
        "info": "In Cocoa, it is idiomatic for accessor methods to be named in the form <code>something</code> instead of e.g. <code>getSomething</code>.",
        "ruleDescription": "Warns if getter methods are named in the form <code>getSomething</code> instead of <code>something</code>.",
        "ruleName": "Unidiomatic accessor naming",
        "ruleShortName": "UnidiomaticAccessorNaming",
        "ruleWarning": null
      },
      "identifier": "-[BottomBarView getHelpButton]",
      "impact": "Style",
      "info": "In Cocoa, it is idiomatic for accessor methods to be named in the form something instead of e.g. getSomething.",
      "ruleDescription": "Warns if getter methods are named in the form getSomething instead of something.",
      "ruleName": "Unidiomatic accessor naming",
      "ruleShortName": "UnidiomaticAccessorNaming",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/button1.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/button1.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "IQ_NSArray_Sort",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 1872,
          "line": 49,
          "utf16Column": 33,
          "utf16Offset": 1872
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 1839,
          "line": 48,
          "utf16Column": 0,
          "utf16Offset": 1839
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/Categories/IQNSArray+Sort.m",
      "fileSnippet": "- (NSArray*)sortedArrayByPosition",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "-[NSArray sortedArrayByPosition]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCReminderController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "IQ_UIWindow_Hierarchy",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 1363,
          "line": 30,
          "utf16Column": 38,
          "utf16Offset": 1363
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 1325,
          "line": 29,
          "utf16Column": 0,
          "utf16Offset": 1325
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/Categories/IQUIWindow+Hierarchy.m",
      "fileSnippet": "- (UIViewController*)topMostController",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "-[UIWindow topMostController]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/Subtract-logo@2x.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Images.xcassets/warning.imageset",
      "fileSnippet": null,
      "html": {
        "info": "Asset catalog ‘Images’, set ‘warning’: The ‘x3 scale, Universal’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "Asset catalog ‘Images’, set ‘warning’: The ‘x3 scale, Universal’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Images.xcassets/warning.imageset",
      "fileSnippet": null,
      "html": {
        "info": "Asset catalog ‘Images’, set ‘warning’: The ‘x2 scale, Universal’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "Asset catalog ‘Images’, set ‘warning’: The ‘x2 scale, Universal’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Category/UIView+Animation.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 39,
          "byteOffset": 204,
          "line": 11,
          "utf16Column": 39,
          "utf16Offset": 203
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 165,
          "line": 11,
          "utf16Column": 0,
          "utf16Offset": 164
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyToDoController/MyToDoCell.h",
      "fileSnippet": "@interface MyToDoCell : UITableViewCell",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "MyToDoCell",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "dealloc",
      "extent": {
        "end": {
          "byteColumn": 21,
          "byteOffset": 11904,
          "line": 291,
          "utf16Column": 20,
          "utf16Offset": 11904
        },
        "start": {
          "byteColumn": 2,
          "byteOffset": 11885,
          "line": 291,
          "utf16Column": 1,
          "utf16Offset": 11885
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/IQKeyboardManager.m",
      "fileSnippet": "[self setEnable:NO]",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "setEnable:",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initWithDictionary:",
      "extent": {
        "end": {
          "byteColumn": 61,
          "byteOffset": 389,
          "line": 19,
          "utf16Column": 60,
          "utf16Offset": 389
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 337,
          "line": 19,
          "utf16Column": 8,
          "utf16Offset": 337
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCArticleDetails.m",
      "fileSnippet": "self.articleId      =[dict valueForKey:@\"articleid\"]",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "articleId",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "showDatePicker",
      "extent": {
        "end": {
          "byteColumn": 42,
          "byteOffset": 3592,
          "line": 110,
          "utf16Column": 41,
          "utf16Offset": 3591
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 3555,
          "line": 110,
          "utf16Column": 4,
          "utf16Offset": 3554
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyProfileViewController/MyProfileController.m",
      "fileSnippet": "dateFormat.dateFormat = @\"yyyy-MM-dd\"",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns when an <code class=\"fauxpas-objcclass\">NSDateFormatter</code> is used with fixed-format dates without using the invariant <code class=\"fauxpas-string\">en_US_POSIX</code> locale. If any other locale is used, the date format string may be overwritten, depending on system date and time settings.</p> <p>When working with user-visible dates, date and time styles should be used instead of setting a date format.</p>",
        "ruleName": "Fixed-format <code class=\"fauxpas-objcclass\">NSDateFormatter</code> not using invariant (POSIX) locale",
        "ruleShortName": "FixedFormatDateFormatter",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Warns when an NSDateFormatter is used with fixed-format dates without using the invariant en_US_POSIX locale. If any other locale is used, the date format string may be overwritten, depending on system date and time settings. When working with user-visible dates, date and time styles should be used instead of setting a date format.",
      "ruleName": "Fixed-format NSDateFormatter not using invariant (POSIX) locale",
      "ruleShortName": "FixedFormatDateFormatter",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/Categories/IQUIScrollView+Additions.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": "CHCDoctorsListController",
      "extent": {
        "end": {
          "byteColumn": 72,
          "byteOffset": 306,
          "line": 12,
          "utf16Column": 71,
          "utf16Offset": 306
        },
        "start": {
          "byteColumn": 51,
          "byteOffset": 285,
          "line": 12,
          "utf16Column": 50,
          "utf16Offset": 285
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCDoctorsListController.h",
      "fileSnippet": "getDoctorsRequestDict",
      "html": {
        "info": "In Cocoa, it is idiomatic for accessor methods to be named in the form <code>something</code> instead of e.g. <code>getSomething</code>.",
        "ruleDescription": "Warns if getter methods are named in the form <code>getSomething</code> instead of <code>something</code>.",
        "ruleName": "Unidiomatic accessor naming",
        "ruleShortName": "UnidiomaticAccessorNaming",
        "ruleWarning": null
      },
      "identifier": "-[CHCDoctorsListController getDoctorsRequestDict]",
      "impact": "Style",
      "info": "In Cocoa, it is idiomatic for accessor methods to be named in the form something instead of e.g. getSomething.",
      "ruleDescription": "Warns if getter methods are named in the form getSomething instead of something.",
      "ruleName": "Unidiomatic accessor naming",
      "ruleShortName": "UnidiomaticAccessorNaming",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "pickerDoneClicked:",
      "extent": {
        "end": {
          "byteColumn": 18,
          "byteOffset": 13376,
          "line": 331,
          "utf16Column": 17,
          "utf16Offset": 13374
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 13349,
          "line": 330,
          "utf16Column": 8,
          "utf16Offset": 13347
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/IQActionSheetPickerView.m",
      "fileSnippet": "default:\r\n            break",
      "html": {
        "info": null,
        "ruleDescription": "<p>If a switch statement explicitly handles all possible values, then the default case is unnecessary dead code, and might even be misleading to people reading the code.</p> <p>If the intended purpose of the default case is to safeguard against enum fields that are added in the future but accidentally left unhandled in the switch, the compiler warning <code>-Wswitch-enum</code> is recommended for that purpose instead.</p>",
        "ruleName": "Unnecessary default case in exhaustive switch statement",
        "ruleShortName": "DefaultInExhaustiveSwitch",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "If a switch statement explicitly handles all possible values, then the default case is unnecessary dead code, and might even be misleading to people reading the code. If the intended purpose of the default case is to safeguard against enum fields that are added in the future but accidentally left unhandled in the switch, the compiler warning -Wswitch-enum is recommended for that purpose instead.",
      "ruleName": "Unnecessary default case in exhaustive switch statement",
      "ruleShortName": "DefaultInExhaustiveSwitch",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "IQ_UIView_Hierarchy",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 4786,
          "line": 143,
          "utf16Column": 33,
          "utf16Offset": 4786
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 4753,
          "line": 142,
          "utf16Column": 0,
          "utf16Offset": 4753
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/Categories/IQUIView+Hierarchy.m",
      "fileSnippet": "-(BOOL)_IQcanBecomeFirstResponder",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "-[UIView _IQcanBecomeFirstResponder]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 55,
          "byteOffset": 10640,
          "line": 236,
          "utf16Column": 54,
          "utf16Offset": 10640
        },
        "start": {
          "byteColumn": 42,
          "byteOffset": 10627,
          "line": 236,
          "utf16Column": 41,
          "utf16Offset": 10627
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCAppointmentDetailsController.m",
      "fileSnippet": "@\"inputImage\"",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns when literal strings are used to specify key paths.</p> <p>Something like <code>NSStringFromSelector(@selector(foo))</code> is safer because it makes the compiler aware of the selector being specified — this helps find typos at compile time and allows automatic refactoring tools to make appropriate changes.</p>",
        "ruleName": "Literal string for key path",
        "ruleShortName": "LiteralStringKeyPath",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when literal strings are used to specify key paths. Something like NSStringFromSelector(@selector(foo)) is safer because it makes the compiler aware of the selector being specified — this helps find typos at compile time and allows automatic refactoring tools to make appropriate changes.",
      "ruleName": "Literal string for key path",
      "ruleShortName": "LiteralStringKeyPath",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> <code class=\"fauxpas-string\">Health Information Log</code> (id <code class=\"fauxpas-string\">lbj-5V-8nD</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel Health Information Log (id lbj-5V-8nD)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel Health Information Log (id lbj-5V-8nD) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/checkbox-checked.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/checkbox-checked.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "RegistrationSurveyController",
      "extent": {
        "end": {
          "byteColumn": 58,
          "byteOffset": 10648,
          "line": 305,
          "utf16Column": 57,
          "utf16Offset": 10647
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 10591,
          "line": 305,
          "utf16Column": 0,
          "utf16Offset": 10590
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SurveysController/RegistrationSurveyController.m",
      "fileSnippet": "- (void)czpickerViewDidDismiss:(CZPickerView *)pickerView",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">czpicker</code> in the symbol name <code class=\"fauxpas-codesymbol\">czpickerViewDidDismiss:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "czpicker",
      "impact": "Style",
      "info": "The word czpicker in the symbol name czpickerViewDidDismiss: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "UserModel",
      "extent": {
        "end": {
          "byteColumn": 47,
          "byteOffset": 301,
          "line": 15,
          "utf16Column": 46,
          "utf16Offset": 300
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 255,
          "line": 15,
          "utf16Column": 0,
          "utf16Offset": 254
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/UserModel.h",
      "fileSnippet": "@property (nonatomic, strong) NSString* userId",
      "html": {
        "info": "The <code>userId</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The userId property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": "setUpCellWithDictionary:tapHandler:",
      "extent": {
        "end": {
          "byteColumn": 100,
          "byteOffset": 495,
          "line": 20,
          "utf16Column": 99,
          "utf16Offset": 494
        },
        "start": {
          "byteColumn": 71,
          "byteOffset": 466,
          "line": 20,
          "utf16Column": 70,
          "utf16Offset": 465
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyMedicationsController/MedicationsCell.m",
      "fileSnippet": "void (^)(BOOL selected))block",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended that typedef be used for all block-typed declarations, for readability.",
        "ruleName": "Block-typed declaration without typedef",
        "ruleShortName": "NonTypedefBlockDeclaration",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": null,
      "ruleDescription": "It is recommended that typedef be used for all block-typed declarations, for readability.",
      "ruleName": "Block-typed declaration without typedef",
      "ruleShortName": "NonTypedefBlockDeclaration",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": "SurveysViewController",
      "extent": {
        "end": {
          "byteColumn": 89,
          "byteOffset": 1889,
          "line": 56,
          "utf16Column": 88,
          "utf16Offset": 1888
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 1801,
          "line": 56,
          "utf16Column": 0,
          "utf16Offset": 1800
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SurveysController/SurveysViewController.m",
      "fileSnippet": "- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns about Objective-C methods to which no references are found.</p> <p>This rule will not warn about <code class=\"fauxpas-codesymbol\">IBAction</code> methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form <code class=\"fauxpas-string\">*+Private.h</code>). It also won’t warn about unused getter methods whose setter is used, and vice versa.</p>",
        "ruleName": "Possibly unused Objective-C method",
        "ruleShortName": "UnusedMethod",
        "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool)."
      },
      "identifier": "-[SurveysViewController tableView:numberOfRowsInSection:]",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns about Objective-C methods to which no references are found. This rule will not warn about IBAction methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form *+Private.h). It also won’t warn about unused getter methods whose setter is used, and vice versa.",
      "ruleName": "Possibly unused Objective-C method",
      "ruleShortName": "UnusedMethod",
      "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool).",
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": "SurveysViewController",
      "extent": {
        "end": {
          "byteColumn": 95,
          "byteOffset": 3383,
          "line": 101,
          "utf16Column": 94,
          "utf16Offset": 3382
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 3289,
          "line": 101,
          "utf16Column": 0,
          "utf16Offset": 3288
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SurveysController/SurveysViewController.m",
      "fileSnippet": "- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns about Objective-C methods to which no references are found.</p> <p>This rule will not warn about <code class=\"fauxpas-codesymbol\">IBAction</code> methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form <code class=\"fauxpas-string\">*+Private.h</code>). It also won’t warn about unused getter methods whose setter is used, and vice versa.</p>",
        "ruleName": "Possibly unused Objective-C method",
        "ruleShortName": "UnusedMethod",
        "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool)."
      },
      "identifier": "-[SurveysViewController tableView:heightForRowAtIndexPath:]",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns about Objective-C methods to which no references are found. This rule will not warn about IBAction methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form *+Private.h). It also won’t warn about unused getter methods whose setter is used, and vice versa.",
      "ruleName": "Possibly unused Objective-C method",
      "ruleShortName": "UnusedMethod",
      "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool).",
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 80,
          "byteOffset": 2246,
          "line": 54,
          "utf16Column": 79,
          "utf16Offset": 2246
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 2034,
          "line": 52,
          "utf16Column": 4,
          "utf16Offset": 2034
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCHomeController.m",
      "fileSnippet": "[[NSNotificationCenter defaultCenter] addObserver:self\n                                             selector:@selector(doTheReload:)\n                                                 name:@\"enterUserID\"object:nil]",
      "html": {
        "info": null,
        "ruleDescription": "<p>You must invoke <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:]</code> or <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:name:object:]</code> before the observer object is deallocated.</p> <p>This rule only considers cases where the observer reference is <code>self</code>, or an instance variable or an Objective-C property in <code>self</code>.</p> <p>This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).</p>",
        "ruleName": "Missing <code class=\"fauxpas-objcclass\">NSNotificationCenter</code> observer detachment",
        "ruleShortName": "MissingNotificationCenterDetachment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "You must invoke -[NSNotificationCenter removeObserver:] or -[NSNotificationCenter removeObserver:name:object:] before the observer object is deallocated. This rule only considers cases where the observer reference is self, or an instance variable or an Objective-C property in self. This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).",
      "ruleName": "Missing NSNotificationCenter observer detachment",
      "ruleShortName": "MissingNotificationCenterDetachment",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/PointsHistoryController/PointsHistoryCell.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "CHCArticleCell",
      "extent": {
        "end": {
          "byteColumn": 56,
          "byteOffset": 393,
          "line": 16,
          "utf16Column": 55,
          "utf16Offset": 393
        },
        "start": {
          "byteColumn": 49,
          "byteOffset": 386,
          "line": 16,
          "utf16Column": 48,
          "utf16Offset": 386
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/HomeScreenContentViews/CHCArticleCell.h",
      "fileSnippet": "snipset",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">Snipset</code> in the symbol name <code class=\"fauxpas-codesymbol\">setSnipset:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "Snipset",
      "impact": "Style",
      "info": "The word Snipset in the symbol name setSnipset: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> <code class=\"fauxpas-string\">LOG IN</code> (id <code class=\"fauxpas-string\">gzv-qc-jeo</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel LOG IN (id gzv-qc-jeo)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel LOG IN (id gzv-qc-jeo) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 67,
          "byteOffset": 1619,
          "line": 40,
          "utf16Column": 67,
          "utf16Offset": 1619
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 1552,
          "line": 40,
          "utf16Column": 0,
          "utf16Offset": 1552
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/SWRevealViewController.m",
      "fileSnippet": "@interface SWDirectionPanGestureRecognizer : UIPanGestureRecognizer",
      "html": {
        "info": "The <code class=\"fauxpas-string\">SW</code> prefix is used. Two-character prefixes are reserved for Apple’s system frameworks. The prefixes in your own (or third-party) code should be at least three characters long.",
        "ruleDescription": "Two-character prefixes (such as <code>NS</code>) are reserved for Apple’s system frameworks. Your own code should use prefixes that are three characters long.",
        "ruleName": "Reserved symbol prefix",
        "ruleShortName": "ReservedPrefix",
        "ruleWarning": null
      },
      "identifier": "SW",
      "impact": "Maintainability",
      "info": "The SW prefix is used. Two-character prefixes are reserved for Apple’s system frameworks. The prefixes in your own (or third-party) code should be at least three characters long.",
      "ruleDescription": "Two-character prefixes (such as NS) are reserved for Apple’s system frameworks. Your own code should use prefixes that are three characters long.",
      "ruleName": "Reserved symbol prefix",
      "ruleShortName": "ReservedPrefix",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "UserModel",
      "extent": {
        "end": {
          "byteColumn": 46,
          "byteOffset": 499,
          "line": 19,
          "utf16Column": 45,
          "utf16Offset": 498
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 454,
          "line": 19,
          "utf16Column": 0,
          "utf16Offset": 453
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/UserModel.h",
      "fileSnippet": "@property (nonatomic, strong) NSString* email",
      "html": {
        "info": "The <code>email</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The email property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "DoctorSearchResultsController",
      "extent": {
        "end": {
          "byteColumn": 51,
          "byteOffset": 628,
          "line": 20,
          "utf16Column": 50,
          "utf16Offset": 627
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 578,
          "line": 20,
          "utf16Column": 0,
          "utf16Offset": 577
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/DoctorSearchResultsController.h",
      "fileSnippet": "@property (strong, nonatomic) NSString *searchName",
      "html": {
        "info": "The <code>searchName</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The searchName property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 29,
          "byteOffset": 572,
          "line": 27,
          "utf16Column": 28,
          "utf16Offset": 572
        },
        "start": {
          "byteColumn": 19,
          "byteOffset": 562,
          "line": 27,
          "utf16Column": 18,
          "utf16Offset": 562
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/CZPickerView.m",
      "fileSnippet": "footerview",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">Footerview</code> in the symbol name <code class=\"fauxpas-codesymbol\">setFooterview:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "Footerview",
      "impact": "Style",
      "info": "The word Footerview in the symbol name setFooterview: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/BaseUIController/CustomNavigationBar.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "CHCHealthLogNewController",
      "extent": {
        "end": {
          "byteColumn": 27,
          "byteOffset": 15248,
          "line": 321,
          "utf16Column": 26,
          "utf16Offset": 15248
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 15222,
          "line": 321,
          "utf16Column": 0,
          "utf16Offset": 15222
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCHealthLogScreen/CHCHealthLogNewController.m",
      "fileSnippet": "-(BOOL)checkDetailstoBeSen",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">Detailsto</code> in the symbol name <code class=\"fauxpas-codesymbol\">checkDetailstoBeSent</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "Detailsto",
      "impact": "Style",
      "info": "The word Detailsto in the symbol name checkDetailstoBeSent may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "IQToolbarAddition",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 11495,
          "line": 280,
          "utf16Column": 239,
          "utf16Offset": 11495
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 11256,
          "line": 279,
          "utf16Column": 0,
          "utf16Offset": 11256
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/IQToolbar/IQUIView+IQKeyboardToolbar.m",
      "fileSnippet": "- (void)addLeftRightOnKeyboardWithTarget:(id)target leftButtonTitle:(NSString*)leftTitle rightButtonTitle:(NSString*)rightTitle leftButtonAction:(SEL)leftAction rightButtonAction:(SEL)rightAction shouldShowPlaceholder:(BOOL)showPlaceholder",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "-[UIView addLeftRightOnKeyboardWithTarget:leftButtonTitle:rightButtonTitle:leftButtonAction:rightButtonAction:shouldShowPlaceholder:]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCEditProfileController/CHCEditProfileController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "ProgressView",
      "extent": {
        "end": {
          "byteColumn": 49,
          "byteOffset": 2860,
          "line": 107,
          "utf16Column": 48,
          "utf16Offset": 2860
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 2812,
          "line": 107,
          "utf16Column": 0,
          "utf16Offset": 2812
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/ProgressView/ProgressView.m",
      "fileSnippet": "- (UIBezierPath *)createSemiCirlce:(CGPoint)poin",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">Cirlce</code> in the symbol name <code class=\"fauxpas-codesymbol\">createSemiCirlce:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "Cirlce",
      "impact": "Style",
      "info": "The word Cirlce in the symbol name createSemiCirlce: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "doneButtonClick:",
      "extent": {
        "end": {
          "byteColumn": 41,
          "byteOffset": 25557,
          "line": 541,
          "utf16Column": 40,
          "utf16Offset": 25557
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 25521,
          "line": 541,
          "utf16Column": 4,
          "utf16Offset": 25521
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCSurveyScreen/CHCSurveyController.m",
      "fileSnippet": "formatter.dateFormat = @\"MM/dd/yyyy\"",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns when an <code class=\"fauxpas-objcclass\">NSDateFormatter</code> is used with fixed-format dates without using the invariant <code class=\"fauxpas-string\">en_US_POSIX</code> locale. If any other locale is used, the date format string may be overwritten, depending on system date and time settings.</p> <p>When working with user-visible dates, date and time styles should be used instead of setting a date format.</p>",
        "ruleName": "Fixed-format <code class=\"fauxpas-objcclass\">NSDateFormatter</code> not using invariant (POSIX) locale",
        "ruleShortName": "FixedFormatDateFormatter",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Warns when an NSDateFormatter is used with fixed-format dates without using the invariant en_US_POSIX locale. If any other locale is used, the date format string may be overwritten, depending on system date and time settings. When working with user-visible dates, date and time styles should be used instead of setting a date format.",
      "ruleName": "Fixed-format NSDateFormatter not using invariant (POSIX) locale",
      "ruleShortName": "FixedFormatDateFormatter",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">CustomTextField</code> (id <code class=\"fauxpas-string\">Dft-ag-pqT</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "CustomTextField (id Dft-ag-pqT)",
      "impact": "Maintainability",
      "info": "Misplaced view: CustomTextField (id Dft-ag-pqT) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">CustomTextField</code> (id <code class=\"fauxpas-string\">aFv-bd-cu6</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "CustomTextField (id aFv-bd-cu6)",
      "impact": "Maintainability",
      "info": "Misplaced view: CustomTextField (id aFv-bd-cu6) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">CustomTextField</code> (id <code class=\"fauxpas-string\">Krc-5t-uCe</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "CustomTextField (id Krc-5t-uCe)",
      "impact": "Maintainability",
      "info": "Misplaced view: CustomTextField (id Krc-5t-uCe) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">CustomTextField</code> (id <code class=\"fauxpas-string\">1qR-1q-ceg</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "CustomTextField (id 1qR-1q-ceg)",
      "impact": "Maintainability",
      "info": "Misplaced view: CustomTextField (id 1qR-1q-ceg) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">CustomTextField</code> (id <code class=\"fauxpas-string\">9Jq-6W-Tpn</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "CustomTextField (id 9Jq-6W-Tpn)",
      "impact": "Maintainability",
      "info": "Misplaced view: CustomTextField (id 9Jq-6W-Tpn) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "IQToolbarAddition",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 20507,
          "line": 466,
          "utf16Column": 146,
          "utf16Offset": 20507
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 20361,
          "line": 465,
          "utf16Column": 0,
          "utf16Offset": 20361
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/IQToolbar/IQUIView+IQKeyboardToolbar.m",
      "fileSnippet": "-(void)addPreviousNextDoneOnKeyboardWithTarget:(id)target previousAction:(SEL)previousAction nextAction:(SEL)nextAction doneAction:(SEL)doneAction",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "-[UIView addPreviousNextDoneOnKeyboardWithTarget:previousAction:nextAction:doneAction:]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">CustomTextField</code> (id <code class=\"fauxpas-string\">lVQ-v9-A3f</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "CustomTextField (id lVQ-v9-A3f)",
      "impact": "Maintainability",
      "info": "Misplaced view: CustomTextField (id lVQ-v9-A3f) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">CustomTextField</code> (id <code class=\"fauxpas-string\">g4y-2G-E6I</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "CustomTextField (id g4y-2G-E6I)",
      "impact": "Maintainability",
      "info": "Misplaced view: CustomTextField (id g4y-2G-E6I) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/ArticleModel.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCHome.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> <code class=\"fauxpas-string\">Recomended health visits</code> (id <code class=\"fauxpas-string\">iOh-DL-2dl</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel Recomended health visits (id iOh-DL-2dl)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel Recomended health visits (id iOh-DL-2dl) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initWithCoder:",
      "extent": {
        "end": {
          "byteColumn": 89,
          "byteOffset": 3501,
          "line": 83,
          "utf16Column": 88,
          "utf16Offset": 3500
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 3417,
          "line": 83,
          "utf16Column": 4,
          "utf16Offset": 3416
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/UserModel.m",
      "fileSnippet": "self.badgeAppointmentCount  = [aDecoder decodeObjectForKey:@\"badgeAppointmentCount\"]",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "badgeAppointmentCount",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "IQ_UIView_Hierarchy",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 9401,
          "line": 306,
          "utf16Column": 27,
          "utf16Offset": 9401
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 9374,
          "line": 305,
          "utf16Column": 0,
          "utf16Offset": 9374
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/Categories/IQUIView+Hierarchy.m",
      "fileSnippet": "-(BOOL)isSearchBarTextField",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "-[UIView isSearchBarTextField]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "CHCRewardsCatalogCell",
      "extent": {
        "end": {
          "byteColumn": 68,
          "byteOffset": 295,
          "line": 12,
          "utf16Column": 67,
          "utf16Offset": 295
        },
        "start": {
          "byteColumn": 53,
          "byteOffset": 280,
          "line": 12,
          "utf16Column": 52,
          "utf16Offset": 280
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCRewardsCatalogCell.h",
      "fileSnippet": "rewardimageView",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">rewardimage</code> in the symbol name <code class=\"fauxpas-codesymbol\">rewardimageView</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "rewardimage",
      "impact": "Style",
      "info": "The word rewardimage in the symbol name rewardimageView may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 45,
          "byteOffset": 1305,
          "line": 25,
          "utf16Column": 44,
          "utf16Offset": 1305
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 1269,
          "line": 25,
          "utf16Column": 8,
          "utf16Offset": 1269
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/Constants/IQKeyboardManagerConstantsInternal.h",
      "fileSnippet": "IQKeyboardManagerConstantsInternal_h",
      "html": {
        "info": null,
        "ruleDescription": "Simplify the header by replacing the macro definition check -based include guard with the ‘once’ pragma.",
        "ruleName": "Macro-based include guard",
        "ruleShortName": "MacroBasedIncludeGuard",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": null,
      "ruleDescription": "Simplify the header by replacing the macro definition check -based include guard with the ‘once’ pragma.",
      "ruleName": "Macro-based include guard",
      "ruleShortName": "MacroBasedIncludeGuard",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": "RegistrationSurveyController",
      "extent": {
        "end": {
          "byteColumn": 22,
          "byteOffset": 11196,
          "line": 332,
          "utf16Column": 21,
          "utf16Offset": 11195
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 11175,
          "line": 332,
          "utf16Column": 0,
          "utf16Offset": 11174
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SurveysController/RegistrationSurveyController.m",
      "fileSnippet": "-(void) answerQuestio",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns about Objective-C methods to which no references are found.</p> <p>This rule will not warn about <code class=\"fauxpas-codesymbol\">IBAction</code> methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form <code class=\"fauxpas-string\">*+Private.h</code>). It also won’t warn about unused getter methods whose setter is used, and vice versa.</p>",
        "ruleName": "Possibly unused Objective-C method",
        "ruleShortName": "UnusedMethod",
        "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool)."
      },
      "identifier": "-[RegistrationSurveyController answerQuestion]",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns about Objective-C methods to which no references are found. This rule will not warn about IBAction methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form *+Private.h). It also won’t warn about unused getter methods whose setter is used, and vice versa.",
      "ruleName": "Possibly unused Objective-C method",
      "ruleShortName": "UnusedMethod",
      "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool).",
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": "LocationManager",
      "extent": {
        "end": {
          "byteColumn": 26,
          "byteOffset": 3559,
          "line": 114,
          "utf16Column": 25,
          "utf16Offset": 3559
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 3534,
          "line": 114,
          "utf16Column": 0,
          "utf16Offset": 3534
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/LocationManager.m",
      "fileSnippet": "- (void)researchLocations",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns about Objective-C methods to which no references are found.</p> <p>This rule will not warn about <code class=\"fauxpas-codesymbol\">IBAction</code> methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form <code class=\"fauxpas-string\">*+Private.h</code>). It also won’t warn about unused getter methods whose setter is used, and vice versa.</p>",
        "ruleName": "Possibly unused Objective-C method",
        "ruleShortName": "UnusedMethod",
        "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool)."
      },
      "identifier": "-[LocationManager researchLocations]",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns about Objective-C methods to which no references are found. This rule will not warn about IBAction methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form *+Private.h). It also won’t warn about unused getter methods whose setter is used, and vice versa.",
      "ruleName": "Possibly unused Objective-C method",
      "ruleShortName": "UnusedMethod",
      "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool).",
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCHealthScorecardTableViewCell.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "fullName",
      "extent": {
        "end": {
          "byteColumn": 60,
          "byteOffset": 7250,
          "line": 186,
          "utf16Column": 59,
          "utf16Offset": 7249
        },
        "start": {
          "byteColumn": 23,
          "byteOffset": 7213,
          "line": 186,
          "utf16Column": 22,
          "utf16Offset": 7212
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/UserModel.m",
      "fileSnippet": "self.firstName ? self.firstName : @\"\"",
      "html": {
        "info": null,
        "ruleDescription": "Expressions of the form <code>(obj ? obj : other)</code> should be written as <code>obj ?: other</code>.",
        "ruleName": "Null coalescing operator usage",
        "ruleShortName": "NullCoalescingOp",
        "ruleWarning": "Please note that in the form <code>(obj ? obj : other)</code> the <code>obj</code> expression is evaluated twice, while in the <code>obj ?: other</code> form it is evaluated only once."
      },
      "identifier": null,
      "impact": "Style",
      "info": null,
      "ruleDescription": "Expressions of the form (obj ? obj : other) should be written as obj ?: other.",
      "ruleName": "Null coalescing operator usage",
      "ruleShortName": "NullCoalescingOp",
      "ruleWarning": "Please note that in the form (obj ? obj : other) the obj expression is evaluated twice, while in the obj ?: other form it is evaluated only once.",
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCSurveyScreen/CHCChildDetailsCell.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initWithHeaderTitle:cancelButtonTitle:confirmButtonTitle:",
      "extent": {
        "end": {
          "byteColumn": 41,
          "byteOffset": 1446,
          "line": 48,
          "utf16Column": 40,
          "utf16Offset": 1446
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 1414,
          "line": 48,
          "utf16Column": 8,
          "utf16Offset": 1414
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/CZPickerView.m",
      "fileSnippet": "self.allowMultipleSelection = NO",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "allowMultipleSelection",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCRewardsCatalogCell.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/IQToolbar/IQTitleBarButtonItem.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> (id <code class=\"fauxpas-string\">AYN-qE-ePK</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel (id AYN-qE-ePK)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel (id AYN-qE-ePK) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> (id <code class=\"fauxpas-string\">9tg-5V-yAP</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel (id 9tg-5V-yAP)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel (id 9tg-5V-yAP) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "CHCArticleController",
      "extent": {
        "end": {
          "byteColumn": 53,
          "byteOffset": 280,
          "line": 12,
          "utf16Column": 52,
          "utf16Offset": 280
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 228,
          "line": 12,
          "utf16Column": 0,
          "utf16Offset": 228
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCArticleScreen/CHCArticleController.h",
      "fileSnippet": "@property (strong, nonatomic) NSString *webUrlString",
      "html": {
        "info": "The <code>webUrlString</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The webUrlString property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initWithDictionary:",
      "extent": {
        "end": {
          "byteColumn": 60,
          "byteOffset": 450,
          "line": 20,
          "utf16Column": 59,
          "utf16Offset": 450
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 399,
          "line": 20,
          "utf16Column": 8,
          "utf16Offset": 399
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCArticleDetails.m",
      "fileSnippet": "self.answerId       =[dict valueForKey:@\"answerid\"]",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "answerId",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "locationManager:didUpdateLocations:",
      "extent": {
        "end": {
          "byteColumn": 30,
          "byteOffset": 7260,
          "line": 198,
          "utf16Column": 29,
          "utf16Offset": 7260
        },
        "start": {
          "byteColumn": 17,
          "byteOffset": 7247,
          "line": 198,
          "utf16Column": 16,
          "utf16Offset": 7247
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/LocationManager.m",
      "fileSnippet": "notified = NO",
      "html": {
        "info": null,
        "ruleDescription": "<p>Writing to static variables (which is essentially global state) in instance methods is generally considered bad practice, because it easily leads to undesireable behavior when multiple instances are being manipulated.</p> <p>Warnings are suppressed for assignments occurring inside <code class=\"fauxpas-cfunction\">dispatch_once()</code> blocks.</p>",
        "ruleName": "Instance method writes to static variable",
        "ruleShortName": "InstanceMethodWritesToStaticVariable",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Writing to static variables (which is essentially global state) in instance methods is generally considered bad practice, because it easily leads to undesireable behavior when multiple instances are being manipulated. Warnings are suppressed for assignments occurring inside dispatch_once() blocks.",
      "ruleName": "Instance method writes to static variable",
      "ruleShortName": "InstanceMethodWritesToStaticVariable",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/ScheduleAppointmentView.xib",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> <code class=\"fauxpas-string\">Select Day(s) You'r Available</code> (id <code class=\"fauxpas-string\">gKe-Lt-ZGz</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel Select Day(s) You'r Available (id gKe-Lt-ZGz)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel Select Day(s) You'r Available (id gKe-Lt-ZGz) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCDoctorsListController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "CHCHealthLogController",
      "extent": {
        "end": {
          "byteColumn": 27,
          "byteOffset": 10600,
          "line": 220,
          "utf16Column": 26,
          "utf16Offset": 10600
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 10574,
          "line": 220,
          "utf16Column": 0,
          "utf16Offset": 10574
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCHealthLogScreen/CHCHealthLogController.m",
      "fileSnippet": "-(BOOL)checkDetailstoBeSen",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">Detailsto</code> in the symbol name <code class=\"fauxpas-codesymbol\">checkDetailstoBeSent</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "Detailsto",
      "impact": "Style",
      "info": "The word Detailsto in the symbol name checkDetailstoBeSent may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": "setUpCellWithDictionary:tapHandler:",
      "extent": {
        "end": {
          "byteColumn": 100,
          "byteOffset": 654,
          "line": 22,
          "utf16Column": 99,
          "utf16Offset": 653
        },
        "start": {
          "byteColumn": 71,
          "byteOffset": 625,
          "line": 22,
          "utf16Column": 70,
          "utf16Offset": 624
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyMedicationsController/MedicationsCell.h",
      "fileSnippet": "void (^)(BOOL selected))block",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended that typedef be used for all block-typed declarations, for readability.",
        "ruleName": "Block-typed declaration without typedef",
        "ruleShortName": "NonTypedefBlockDeclaration",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": null,
      "ruleDescription": "It is recommended that typedef be used for all block-typed declarations, for readability.",
      "ruleName": "Block-typed declaration without typedef",
      "ruleShortName": "NonTypedefBlockDeclaration",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "getLength:",
      "extent": {
        "end": {
          "byteColumn": 91,
          "byteOffset": 15592,
          "line": 426,
          "utf16Column": 90,
          "utf16Offset": 15591
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 15506,
          "line": 426,
          "utf16Column": 4,
          "utf16Offset": 15505
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SignUpController/CHCRegisterController.m",
      "fileSnippet": "mobileNumber = [mobileNumber stringByReplacingOccurrencesOfString:@\" \" withString:@\"\"]",
      "html": {
        "info": null,
        "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
        "ruleName": "Modifying the value of an argument variable",
        "ruleShortName": "ArgumentModification",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
      "ruleName": "Modifying the value of an argument variable",
      "ruleShortName": "ArgumentModification",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/NSString+MD5.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 123,
          "byteOffset": 3356,
          "line": 86,
          "utf16Column": 122,
          "utf16Offset": 3356
        },
        "start": {
          "byteColumn": 106,
          "byteOffset": 3339,
          "line": 86,
          "utf16Column": 105,
          "utf16Offset": 3339
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCHomeController.m",
      "fileSnippet": "@\"inputTransform\"",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns when literal strings are used to specify key paths.</p> <p>Something like <code>NSStringFromSelector(@selector(foo))</code> is safer because it makes the compiler aware of the selector being specified — this helps find typos at compile time and allows automatic refactoring tools to make appropriate changes.</p>",
        "ruleName": "Literal string for key path",
        "ruleShortName": "LiteralStringKeyPath",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when literal strings are used to specify key paths. Something like NSStringFromSelector(@selector(foo)) is safer because it makes the compiler aware of the selector being specified — this helps find typos at compile time and allows automatic refactoring tools to make appropriate changes.",
      "ruleName": "Literal string for key path",
      "ruleShortName": "LiteralStringKeyPath",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 66,
          "byteOffset": 567,
          "line": 24,
          "utf16Column": 65,
          "utf16Offset": 567
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 438,
          "line": 23,
          "utf16Column": 0,
          "utf16Offset": 438
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/CZPickerView.h",
      "fileSnippet": "- (NSAttributedString *)czpickerView:(CZPickerView *)pickerView\n                            attributedTitleForRow:(NSInteger)row;",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">czpicker</code> in the symbol name <code class=\"fauxpas-codesymbol\">czpickerView:attributedTitleForRow:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "czpicker",
      "impact": "Style",
      "info": "The word czpicker in the symbol name czpickerView:attributedTitleForRow: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/AppIcon/87x87.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/AppIcon/87x87.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "CHCHealthLogSurveyDetails",
      "extent": {
        "end": {
          "byteColumn": 53,
          "byteOffset": 293,
          "line": 13,
          "utf16Column": 52,
          "utf16Offset": 293
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 241,
          "line": 13,
          "utf16Column": 0,
          "utf16Offset": 241
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCHealthLogSurveyDetails.h",
      "fileSnippet": "@property (nonatomic, strong) NSString *titleHeading",
      "html": {
        "info": "The <code>titleHeading</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The titleHeading property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 61,
          "byteOffset": 3450,
          "line": 98,
          "utf16Column": 60,
          "utf16Offset": 3450
        },
        "start": {
          "byteColumn": 47,
          "byteOffset": 3436,
          "line": 98,
          "utf16Column": 46,
          "utf16Offset": 3436
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreenNew/CHCHomeNewController.m",
      "fileSnippet": "@\"inputRadius\"",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns when literal strings are used to specify key paths.</p> <p>Something like <code>NSStringFromSelector(@selector(foo))</code> is safer because it makes the compiler aware of the selector being specified — this helps find typos at compile time and allows automatic refactoring tools to make appropriate changes.</p>",
        "ruleName": "Literal string for key path",
        "ruleShortName": "LiteralStringKeyPath",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when literal strings are used to specify key paths. Something like NSStringFromSelector(@selector(foo)) is safer because it makes the compiler aware of the selector being specified — this helps find typos at compile time and allows automatic refactoring tools to make appropriate changes.",
      "ruleName": "Literal string for key path",
      "ruleShortName": "LiteralStringKeyPath",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/AppUserData/AppUserData.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 22,
          "byteOffset": 25,
          "line": 2,
          "utf16Column": 22,
          "utf16Offset": 25
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 3,
          "line": 2,
          "utf16Column": 0,
          "utf16Offset": 3
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/IQToolbar/IQUIView+IQKeyboardToolbar.m",
      "fileSnippet": "//  UIView+IQToolbar.m",
      "html": {
        "info": "The file name in the source file header comment (<code class=\"fauxpas-string\">UIView+IQToolbar.m</code>) does not match the actual file name (<code class=\"fauxpas-string\">IQUIView+IQKeyboardToolbar.m</code>).",
        "ruleDescription": "Warns about errors in source file header comments (that are formatted using the default Xcode template), for example if the file name in the comment does not match the actual file name, or if the placeholder <code class=\"fauxpas-string\">__MyCompanyName__</code> is present.",
        "ruleName": "Source file header comment format",
        "ruleShortName": "SourceFileHeaderComment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": "The file name in the source file header comment (UIView+IQToolbar.m) does not match the actual file name (IQUIView+IQKeyboardToolbar.m).",
      "ruleDescription": "Warns about errors in source file header comments (that are formatted using the default Xcode template), for example if the file name in the comment does not match the actual file name, or if the placeholder __MyCompanyName__ is present.",
      "ruleName": "Source file header comment format",
      "ruleShortName": "SourceFileHeaderComment",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/clock.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 53,
          "byteOffset": 236,
          "line": 11,
          "utf16Column": 53,
          "utf16Offset": 235
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 183,
          "line": 11,
          "utf16Column": 0,
          "utf16Offset": 182
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyInboxController/MyInboxViewController.h",
      "fileSnippet": "@interface MyInboxViewController : BaseViewController",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "MyInboxViewController",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/clock.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": "setUpCellWithDictionary:tapHandler:",
      "extent": {
        "end": {
          "byteColumn": 87,
          "byteOffset": 470,
          "line": 18,
          "utf16Column": 86,
          "utf16Offset": 469
        },
        "start": {
          "byteColumn": 71,
          "byteOffset": 454,
          "line": 18,
          "utf16Column": 70,
          "utf16Offset": 453
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyToDoController/MyToDoCell.h",
      "fileSnippet": "void (^)())block",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended that typedef be used for all block-typed declarations, for readability.",
        "ruleName": "Block-typed declaration without typedef",
        "ruleShortName": "NonTypedefBlockDeclaration",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": null,
      "ruleDescription": "It is recommended that typedef be used for all block-typed declarations, for readability.",
      "ruleName": "Block-typed declaration without typedef",
      "ruleShortName": "NonTypedefBlockDeclaration",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "IQ_UIView_Hierarchy",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 1952,
          "line": 52,
          "utf16Column": 17,
          "utf16Offset": 1952
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 1935,
          "line": 51,
          "utf16Column": 0,
          "utf16Offset": 1935
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/Categories/IQUIView+Hierarchy.m",
      "fileSnippet": "+(void)initialize",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "+[UIView initialize]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "reachabilityChanged:",
      "extent": {
        "end": {
          "byteColumn": 55,
          "byteOffset": 2360,
          "line": 79,
          "utf16Column": 54,
          "utf16Offset": 2360
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 2310,
          "line": 79,
          "utf16Column": 4,
          "utf16Offset": 2310
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/APIModel/ConnectionManager.m",
      "fileSnippet": "connectionRequired = [curReach ConnectionRequired]",
      "html": {
        "info": null,
        "ruleDescription": "<p>Writing to static variables (which is essentially global state) in instance methods is generally considered bad practice, because it easily leads to undesireable behavior when multiple instances are being manipulated.</p> <p>Warnings are suppressed for assignments occurring inside <code class=\"fauxpas-cfunction\">dispatch_once()</code> blocks.</p>",
        "ruleName": "Instance method writes to static variable",
        "ruleShortName": "InstanceMethodWritesToStaticVariable",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Writing to static variables (which is essentially global state) in instance methods is generally considered bad practice, because it easily leads to undesireable behavior when multiple instances are being manipulated. Warnings are suppressed for assignments occurring inside dispatch_once() blocks.",
      "ruleName": "Instance method writes to static variable",
      "ruleShortName": "InstanceMethodWritesToStaticVariable",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 39,
          "byteOffset": 347,
          "line": 18,
          "utf16Column": 39,
          "utf16Offset": 346
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 308,
          "line": 18,
          "utf16Column": 0,
          "utf16Offset": 307
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/BaseUIController/CustomNavigationBar.h",
      "fileSnippet": "@interface CustomNavigationBar : UIView",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "CustomNavigationBar",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": "_enqueueBlock:",
      "extent": {
        "end": {
          "byteColumn": 44,
          "byteOffset": 26788,
          "line": 827,
          "utf16Column": 43,
          "utf16Offset": 26788
        },
        "start": {
          "byteColumn": 24,
          "byteOffset": 26768,
          "line": 827,
          "utf16Column": 23,
          "utf16Offset": 26768
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/SWRevealViewController.m",
      "fileSnippet": "void (^)(void))block",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended that typedef be used for all block-typed declarations, for readability.",
        "ruleName": "Block-typed declaration without typedef",
        "ruleShortName": "NonTypedefBlockDeclaration",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": null,
      "ruleDescription": "It is recommended that typedef be used for all block-typed declarations, for readability.",
      "ruleName": "Block-typed declaration without typedef",
      "ruleShortName": "NonTypedefBlockDeclaration",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 31,
          "byteOffset": 193,
          "line": 11,
          "utf16Column": 31,
          "utf16Offset": 193
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 162,
          "line": 11,
          "utf16Column": 0,
          "utf16Offset": 162
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/../GIBadgeView.h",
      "fileSnippet": "@interface GIBadgeView : UIView",
      "html": {
        "info": "The <code class=\"fauxpas-string\">GI</code> prefix is used. Two-character prefixes are reserved for Apple’s system frameworks. The prefixes in your own (or third-party) code should be at least three characters long.",
        "ruleDescription": "Two-character prefixes (such as <code>NS</code>) are reserved for Apple’s system frameworks. Your own code should use prefixes that are three characters long.",
        "ruleName": "Reserved symbol prefix",
        "ruleShortName": "ReservedPrefix",
        "ruleWarning": null
      },
      "identifier": "GI",
      "impact": "Maintainability",
      "info": "The GI prefix is used. Two-character prefixes are reserved for Apple’s system frameworks. The prefixes in your own (or third-party) code should be at least three characters long.",
      "ruleDescription": "Two-character prefixes (such as NS) are reserved for Apple’s system frameworks. Your own code should use prefixes that are three characters long.",
      "ruleName": "Reserved symbol prefix",
      "ruleShortName": "ReservedPrefix",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "SurveysViewController",
      "extent": {
        "end": {
          "byteColumn": 51,
          "byteOffset": 545,
          "line": 19,
          "utf16Column": 50,
          "utf16Offset": 544
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 495,
          "line": 19,
          "utf16Column": 0,
          "utf16Offset": 494
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SurveysController/SurveysViewController.h",
      "fileSnippet": "@property (nonatomic, strong) NSString *questionId",
      "html": {
        "info": "The <code>questionId</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The questionId property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 61,
          "byteOffset": 461,
          "line": 14,
          "utf16Column": 60,
          "utf16Offset": 461
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 401,
          "line": 14,
          "utf16Column": 0,
          "utf16Offset": 401
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCArticleScreen/CHCArticleController.m",
      "fileSnippet": "@property (strong, nonatomic) IBOutlet UILabel *choicepoints",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">choicepoints</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "choicepoints",
      "impact": "Style",
      "info": "The word choicepoints may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "dealloc",
      "extent": {
        "end": {
          "byteColumn": 28,
          "byteOffset": 5808,
          "line": 184,
          "utf16Column": 27,
          "utf16Offset": 5808
        },
        "start": {
          "byteColumn": 2,
          "byteOffset": 5782,
          "line": 184,
          "utf16Column": 1,
          "utf16Offset": 5782
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/APIModel/Reachability.m",
      "fileSnippet": "self.reachableBlock\t\t= nil",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "reachableBlock",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "IQToolbarAddition",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 2639,
          "line": 67,
          "utf16Column": 56,
          "utf16Offset": 2639
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 2583,
          "line": 66,
          "utf16Column": 0,
          "utf16Offset": 2583
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/IQToolbar/IQUIView+IQKeyboardToolbar.m",
      "fileSnippet": "-(void)setCustomNextTarget:(id)target action:(SEL)action",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "-[UIView setCustomNextTarget:action:]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SignUpController/JVFloatLabeledTextView.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 93,
          "byteOffset": 1144,
          "line": 27,
          "utf16Column": 92,
          "utf16Offset": 1144
        },
        "start": {
          "byteColumn": 58,
          "byteOffset": 1109,
          "line": 27,
          "utf16Column": 57,
          "utf16Offset": 1109
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCRewardsCatalogController.m",
      "fileSnippet": "choicePointRewardVerticleConstraint",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">Verticle</code> in the symbol name <code class=\"fauxpas-codesymbol\">setChoicePointRewardVerticleConstraint:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "Verticle",
      "impact": "Style",
      "info": "The word Verticle in the symbol name setChoicePointRewardVerticleConstraint: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/CZPickerView.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "setKeyboardDistanceFromTextField:",
      "extent": {
        "end": {
          "byteColumn": 74,
          "byteOffset": 1513,
          "line": 32,
          "utf16Column": 73,
          "utf16Offset": 1513
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 1444,
          "line": 32,
          "utf16Column": 4,
          "utf16Offset": 1444
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/Categories/IQUITextFieldView+Additions.m",
      "fileSnippet": "keyboardDistanceFromTextField = MAX(keyboardDistanceFromTextField, 0)",
      "html": {
        "info": null,
        "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
        "ruleName": "Modifying the value of an argument variable",
        "ruleShortName": "ArgumentModification",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
      "ruleName": "Modifying the value of an argument variable",
      "ruleShortName": "ArgumentModification",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 58,
          "byteOffset": 702,
          "line": 26,
          "utf16Column": 57,
          "utf16Offset": 701
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 645,
          "line": 26,
          "utf16Column": 0,
          "utf16Offset": 644
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyProfileViewController/MyProfileController.m",
      "fileSnippet": "@property (weak, nonatomic) IBOutlet UITextField *lnameTF",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">lname</code> in the symbol name <code class=\"fauxpas-codesymbol\">lnameTF</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "lname",
      "impact": "Style",
      "info": "The word lname in the symbol name lnameTF may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Images.xcassets/Dashboard/Inbox-icon.imageset/Choice Points App_Design_02-15-16-06 envelope-2x.png",
      "fileSnippet": null,
      "html": {
        "info": "Asset catalog ‘Images’, set ‘Inbox-icon’: <div class=\"fauxpas-filename\">Choice Points App_Design_02-15-16-06 envelope-2x.png</div> (x2 scale) resolution (314 x 271) should be 314 x 272.",
        "ruleDescription": "The retina (‘@2x’ or ‘@3x’) version of an image resource must be exactly double or triple the size of the corresponding low-resolution image (assuming the point size of the presentation context remains the same regardless of screen resolution). Otherwise the effective resolution of the image will not match the effective resolution of its presentation context, which will lead to a blurry image, empty space at the edges, or overflow.",
        "ruleName": "Unexpected retina image resolution",
        "ruleShortName": "RetinaImagesResolution",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "Asset catalog ‘Images’, set ‘Inbox-icon’: Choice Points App_Design_02-15-16-06 envelope-2x.png (x2 scale) resolution (314 x 271) should be 314 x 272.",
      "ruleDescription": "The retina (‘@2x’ or ‘@3x’) version of an image resource must be exactly double or triple the size of the corresponding low-resolution image (assuming the point size of the presentation context remains the same regardless of screen resolution). Otherwise the effective resolution of the image will not match the effective resolution of its presentation context, which will lead to a blurry image, empty space at the edges, or overflow.",
      "ruleName": "Unexpected retina image resolution",
      "ruleShortName": "RetinaImagesResolution",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "CHCArticleDetails",
      "extent": {
        "end": {
          "byteColumn": 53,
          "byteOffset": 540,
          "line": 18,
          "utf16Column": 52,
          "utf16Offset": 540
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 488,
          "line": 18,
          "utf16Column": 0,
          "utf16Offset": 488
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCArticleDetails.h",
      "fileSnippet": "@property (nonatomic, strong) NSString *articlePhoto",
      "html": {
        "info": "The <code>articlePhoto</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The articlePhoto property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "formatNumber:",
      "extent": {
        "end": {
          "byteColumn": 91,
          "byteOffset": 14824,
          "line": 405,
          "utf16Column": 90,
          "utf16Offset": 14823
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 14738,
          "line": 405,
          "utf16Column": 4,
          "utf16Offset": 14737
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SignUpController/CHCRegisterController.m",
      "fileSnippet": "mobileNumber = [mobileNumber stringByReplacingOccurrencesOfString:@\" \" withString:@\"\"]",
      "html": {
        "info": null,
        "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
        "ruleName": "Modifying the value of an argument variable",
        "ruleShortName": "ArgumentModification",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
      "ruleName": "Modifying the value of an argument variable",
      "ruleShortName": "ArgumentModification",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "IQToolbarAddition",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 4008,
          "line": 107,
          "utf16Column": 31,
          "utf16Offset": 4008
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 3977,
          "line": 106,
          "utf16Column": 0,
          "utf16Offset": 3977
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/IQToolbar/IQUIView+IQKeyboardToolbar.m",
      "fileSnippet": "-(NSInvocation *)nextInvocation",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "-[UIView nextInvocation]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "formatNumber:",
      "extent": {
        "end": {
          "byteColumn": 68,
          "byteOffset": 15188,
          "line": 414,
          "utf16Column": 67,
          "utf16Offset": 15187
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 15129,
          "line": 414,
          "utf16Column": 8,
          "utf16Offset": 15128
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SignUpController/CHCRegisterController.m",
      "fileSnippet": "mobileNumber = [mobileNumber substringFromIndex: length-10]",
      "html": {
        "info": null,
        "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
        "ruleName": "Modifying the value of an argument variable",
        "ruleShortName": "ArgumentModification",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
      "ruleName": "Modifying the value of an argument variable",
      "ruleShortName": "ArgumentModification",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 147,
          "byteOffset": 1330,
          "line": 36,
          "utf16Column": 146,
          "utf16Offset": 1329
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 1188,
          "line": 36,
          "utf16Column": 4,
          "utf16Offset": 1187
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/DashboardViewController/DashboardViewController.m",
      "fileSnippet": "[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(updateBadgeCount:) name:@\"didReceiveRemoteNotification\" object:NULL]",
      "html": {
        "info": null,
        "ruleDescription": "<p>You must invoke <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:]</code> or <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:name:object:]</code> before the observer object is deallocated.</p> <p>This rule only considers cases where the observer reference is <code>self</code>, or an instance variable or an Objective-C property in <code>self</code>.</p> <p>This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).</p>",
        "ruleName": "Missing <code class=\"fauxpas-objcclass\">NSNotificationCenter</code> observer detachment",
        "ruleShortName": "MissingNotificationCenterDetachment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "You must invoke -[NSNotificationCenter removeObserver:] or -[NSNotificationCenter removeObserver:name:object:] before the observer object is deallocated. This rule only considers cases where the observer reference is self, or an instance variable or an Objective-C property in self. This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).",
      "ruleName": "Missing NSNotificationCenter observer detachment",
      "ruleShortName": "MissingNotificationCenterDetachment",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initWithHeaderTitle:cancelButtonTitle:confirmButtonTitle:",
      "extent": {
        "end": {
          "byteColumn": 38,
          "byteOffset": 1485,
          "line": 49,
          "utf16Column": 37,
          "utf16Offset": 1485
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 1456,
          "line": 49,
          "utf16Column": 8,
          "utf16Offset": 1456
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/CZPickerView.m",
      "fileSnippet": "self.animationDuration = 0.5f",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "animationDuration",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": "HorizontalTableViewCell",
      "extent": {
        "end": {
          "byteColumn": 88,
          "byteOffset": 722,
          "line": 31,
          "utf16Column": 87,
          "utf16Offset": 722
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 635,
          "line": 31,
          "utf16Column": 0,
          "utf16Offset": 635
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCHealthLogScreen/HorizontalTableViewCell.m",
      "fileSnippet": "-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns about Objective-C methods to which no references are found.</p> <p>This rule will not warn about <code class=\"fauxpas-codesymbol\">IBAction</code> methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form <code class=\"fauxpas-string\">*+Private.h</code>). It also won’t warn about unused getter methods whose setter is used, and vice versa.</p>",
        "ruleName": "Possibly unused Objective-C method",
        "ruleShortName": "UnusedMethod",
        "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool)."
      },
      "identifier": "-[HorizontalTableViewCell tableView:numberOfRowsInSection:]",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns about Objective-C methods to which no references are found. This rule will not warn about IBAction methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form *+Private.h). It also won’t warn about unused getter methods whose setter is used, and vice versa.",
      "ruleName": "Possibly unused Objective-C method",
      "ruleShortName": "UnusedMethod",
      "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool).",
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/drawable/ic_forward.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/drawable/ic_forward.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/pill.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/pill.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/Menu_bgcopy.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/Menu_bgcopy.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 50,
          "byteOffset": 225,
          "line": 11,
          "utf16Column": 50,
          "utf16Offset": 224
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 175,
          "line": 11,
          "utf16Column": 0,
          "utf16Offset": 174
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/LaunchController/LaunchViewController.h",
      "fileSnippet": "@interface LaunchViewController : UIViewController",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "LaunchViewController",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "SearchDoctorController",
      "extent": {
        "end": {
          "byteColumn": 51,
          "byteOffset": 8524,
          "line": 252,
          "utf16Column": 50,
          "utf16Offset": 8523
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 8410,
          "line": 251,
          "utf16Column": 0,
          "utf16Offset": 8409
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/SearchDoctorController.m",
      "fileSnippet": "- (NSAttributedString *)czpickerView:(CZPickerView *)pickerView\n               attributedTitleForRow:(NSInteger)ro",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">czpicker</code> in the symbol name <code class=\"fauxpas-codesymbol\">czpickerView:attributedTitleForRow:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "czpicker",
      "impact": "Style",
      "info": "The word czpicker in the symbol name czpickerView:attributedTitleForRow: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/drawable/drawer_shadow.9.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/drawable/drawer_shadow.9.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Images.xcassets/Dashboard/Appointments-icon.imageset/Choice Points App_Design_02-15-16-06 calendar-3x.png",
      "fileSnippet": null,
      "html": {
        "info": "Asset catalog ‘Images’, set ‘Appointments-icon’: <div class=\"fauxpas-filename\">Choice Points App_Design_02-15-16-06 calendar-3x.png</div> (x3 scale) resolution (471 x 467) should be 471 x 468.",
        "ruleDescription": "The retina (‘@2x’ or ‘@3x’) version of an image resource must be exactly double or triple the size of the corresponding low-resolution image (assuming the point size of the presentation context remains the same regardless of screen resolution). Otherwise the effective resolution of the image will not match the effective resolution of its presentation context, which will lead to a blurry image, empty space at the edges, or overflow.",
        "ruleName": "Unexpected retina image resolution",
        "ruleShortName": "RetinaImagesResolution",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "Asset catalog ‘Images’, set ‘Appointments-icon’: Choice Points App_Design_02-15-16-06 calendar-3x.png (x3 scale) resolution (471 x 467) should be 471 x 468.",
      "ruleDescription": "The retina (‘@2x’ or ‘@3x’) version of an image resource must be exactly double or triple the size of the corresponding low-resolution image (assuming the point size of the presentation context remains the same regardless of screen resolution). Otherwise the effective resolution of the image will not match the effective resolution of its presentation context, which will lead to a blurry image, empty space at the edges, or overflow.",
      "ruleName": "Unexpected retina image resolution",
      "ruleShortName": "RetinaImagesResolution",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "TextDirectionality",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 20566,
          "line": 47,
          "utf16Column": 35,
          "utf16Offset": 20566
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 20531,
          "line": 46,
          "utf16Column": 0,
          "utf16Offset": 20531
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SignUpController/NSString+TextDirectionality.m",
      "fileSnippet": "- (JVTextDirection)getBaseDirection",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "-[NSString getBaseDirection]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 41,
          "byteOffset": 44,
          "line": 2,
          "utf16Column": 41,
          "utf16Offset": 44
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 3,
          "line": 2,
          "utf16Column": 0,
          "utf16Offset": 3
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/DoctorSearchResultCell.m",
      "fileSnippet": "//  DoctorSearchResultCellTableViewCell.m",
      "html": {
        "info": "The file name in the source file header comment (<code class=\"fauxpas-string\">DoctorSearchResultCellTableViewCell.m</code>) does not match the actual file name (<code class=\"fauxpas-string\">DoctorSearchResultCell.m</code>).",
        "ruleDescription": "Warns about errors in source file header comments (that are formatted using the default Xcode template), for example if the file name in the comment does not match the actual file name, or if the placeholder <code class=\"fauxpas-string\">__MyCompanyName__</code> is present.",
        "ruleName": "Source file header comment format",
        "ruleShortName": "SourceFileHeaderComment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": "The file name in the source file header comment (DoctorSearchResultCellTableViewCell.m) does not match the actual file name (DoctorSearchResultCell.m).",
      "ruleDescription": "Warns about errors in source file header comments (that are formatted using the default Xcode template), for example if the file name in the comment does not match the actual file name, or if the placeholder __MyCompanyName__ is present.",
      "ruleName": "Source file header comment format",
      "ruleShortName": "SourceFileHeaderComment",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/dropdown-arrow.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/dropdown-arrow.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": "HorizontalTableViewCell",
      "extent": {
        "end": {
          "byteColumn": 94,
          "byteOffset": 939,
          "line": 40,
          "utf16Column": 93,
          "utf16Offset": 939
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 846,
          "line": 40,
          "utf16Column": 0,
          "utf16Offset": 846
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCHealthLogScreen/HorizontalTableViewCell.m",
      "fileSnippet": "-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns about Objective-C methods to which no references are found.</p> <p>This rule will not warn about <code class=\"fauxpas-codesymbol\">IBAction</code> methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form <code class=\"fauxpas-string\">*+Private.h</code>). It also won’t warn about unused getter methods whose setter is used, and vice versa.</p>",
        "ruleName": "Possibly unused Objective-C method",
        "ruleShortName": "UnusedMethod",
        "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool)."
      },
      "identifier": "-[HorizontalTableViewCell tableView:heightForRowAtIndexPath:]",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns about Objective-C methods to which no references are found. This rule will not warn about IBAction methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form *+Private.h). It also won’t warn about unused getter methods whose setter is used, and vice versa.",
      "ruleName": "Possibly unused Objective-C method",
      "ruleShortName": "UnusedMethod",
      "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool).",
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 50,
          "byteOffset": 2261,
          "line": 58,
          "utf16Column": 49,
          "utf16Offset": 2261
        },
        "start": {
          "byteColumn": 41,
          "byteOffset": 2252,
          "line": 58,
          "utf16Column": 40,
          "utf16Offset": 2252
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCAppointmentDetailsController.m",
      "fileSnippet": "dayofweek",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">dayofweek</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "dayofweek",
      "impact": "Style",
      "info": "The word dayofweek may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Images.xcassets/Registration Survey/height.imageset",
      "fileSnippet": null,
      "html": {
        "info": "Asset catalog ‘Images’, set ‘height’: The ‘x3 scale, Universal’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "Asset catalog ‘Images’, set ‘height’: The ‘x3 scale, Universal’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Images.xcassets/Registration Survey/height.imageset",
      "fileSnippet": null,
      "html": {
        "info": "Asset catalog ‘Images’, set ‘height’: The ‘x2 scale, Universal’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "Asset catalog ‘Images’, set ‘height’: The ‘x2 scale, Universal’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "IQToolbarAddition",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 12029,
          "line": 289,
          "utf16Column": 195,
          "utf16Offset": 12029
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 11834,
          "line": 288,
          "utf16Column": 0,
          "utf16Offset": 11834
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/IQToolbar/IQUIView+IQKeyboardToolbar.m",
      "fileSnippet": "- (void)addLeftRightOnKeyboardWithTarget:(id)target leftButtonTitle:(NSString*)leftTitle rightButtonTitle:(NSString*)rightTitle leftButtonAction:(SEL)leftAction rightButtonAction:(SEL)rightAction",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "-[UIView addLeftRightOnKeyboardWithTarget:leftButtonTitle:rightButtonTitle:leftButtonAction:rightButtonAction:]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 80,
          "byteOffset": 2084,
          "line": 58,
          "utf16Column": 79,
          "utf16Offset": 2084
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 1872,
          "line": 56,
          "utf16Column": 4,
          "utf16Offset": 1872
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreenNew/CHCHomeNewController.m",
      "fileSnippet": "[[NSNotificationCenter defaultCenter] addObserver:self\n                                             selector:@selector(doTheReload:)\n                                                 name:@\"enterUserID\"object:nil]",
      "html": {
        "info": null,
        "ruleDescription": "<p>You must invoke <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:]</code> or <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:name:object:]</code> before the observer object is deallocated.</p> <p>This rule only considers cases where the observer reference is <code>self</code>, or an instance variable or an Objective-C property in <code>self</code>.</p> <p>This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).</p>",
        "ruleName": "Missing <code class=\"fauxpas-objcclass\">NSNotificationCenter</code> observer detachment",
        "ruleShortName": "MissingNotificationCenterDetachment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "You must invoke -[NSNotificationCenter removeObserver:] or -[NSNotificationCenter removeObserver:name:object:] before the observer object is deallocated. This rule only considers cases where the observer reference is self, or an instance variable or an Objective-C property in self. This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).",
      "ruleName": "Missing NSNotificationCenter observer detachment",
      "ruleShortName": "MissingNotificationCenterDetachment",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "IQToolbarAddition",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 12354,
          "line": 294,
          "utf16Column": 141,
          "utf16Offset": 12354
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 12213,
          "line": 293,
          "utf16Column": 0,
          "utf16Offset": 12213
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/IQToolbar/IQUIView+IQKeyboardToolbar.m",
      "fileSnippet": "- (void)addCancelDoneOnKeyboardWithTarget:(id)target cancelAction:(SEL)cancelAction doneAction:(SEL)doneAction titleText:(NSString*)titleText",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "-[UIView addCancelDoneOnKeyboardWithTarget:cancelAction:doneAction:titleText:]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 79,
          "byteOffset": 8505,
          "line": 199,
          "utf16Column": 78,
          "utf16Offset": 8505
        },
        "start": {
          "byteColumn": 66,
          "byteOffset": 8492,
          "line": 199,
          "utf16Column": 65,
          "utf16Offset": 8492
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCMedicationReminderController.m",
      "fileSnippet": "@\"inputImage\"",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns when literal strings are used to specify key paths.</p> <p>Something like <code>NSStringFromSelector(@selector(foo))</code> is safer because it makes the compiler aware of the selector being specified — this helps find typos at compile time and allows automatic refactoring tools to make appropriate changes.</p>",
        "ruleName": "Literal string for key path",
        "ruleShortName": "LiteralStringKeyPath",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when literal strings are used to specify key paths. Something like NSStringFromSelector(@selector(foo)) is safer because it makes the compiler aware of the selector being specified — this helps find typos at compile time and allows automatic refactoring tools to make appropriate changes.",
      "ruleName": "Literal string for key path",
      "ruleShortName": "LiteralStringKeyPath",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 101,
          "byteOffset": 4281,
          "line": 135,
          "utf16Column": 100,
          "utf16Offset": 4281
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 4181,
          "line": 135,
          "utf16Column": 0,
          "utf16Offset": 4181
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/SWRevealViewController.m",
      "fileSnippet": "- (void)_getAdjustedFrontViewPosition:(FrontViewPosition*)frontViewPosition forSymetry:(int)symetry;",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">Symetry</code> in the symbol name <code class=\"fauxpas-codesymbol\">_getAdjustedFrontViewPosition:forSymetry:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "Symetry",
      "impact": "Style",
      "info": "The word Symetry in the symbol name _getAdjustedFrontViewPosition:forSymetry: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIView</code> (id <code class=\"fauxpas-string\">CKd-wy-SAf</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIView (id CKd-wy-SAf)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIView (id CKd-wy-SAf) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIView</code> (id <code class=\"fauxpas-string\">cVP-vU-7MW</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIView (id cVP-vU-7MW)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIView (id cVP-vU-7MW) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIView</code> (id <code class=\"fauxpas-string\">9Hr-Se-B8b</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIView (id 9Hr-Se-B8b)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIView (id 9Hr-Se-B8b) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIView</code> (id <code class=\"fauxpas-string\">qB8-UU-HFz</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIView (id qB8-UU-HFz)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIView (id qB8-UU-HFz) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIView</code> (id <code class=\"fauxpas-string\">aWG-Zr-oMk</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIView (id aWG-Zr-oMk)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIView (id aWG-Zr-oMk) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIView</code> (id <code class=\"fauxpas-string\">3Kr-qp-7qa</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIView (id 3Kr-qp-7qa)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIView (id 3Kr-qp-7qa) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIView</code> (id <code class=\"fauxpas-string\">x8G-A2-miB</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIView (id x8G-A2-miB)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIView (id x8G-A2-miB) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIView</code> (id <code class=\"fauxpas-string\">oBe-Au-4jK</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIView (id oBe-Au-4jK)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIView (id oBe-Au-4jK) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIView</code> (id <code class=\"fauxpas-string\">VYl-SD-3rF</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIView (id VYl-SD-3rF)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIView (id VYl-SD-3rF) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "RegistrationSurveyController",
      "extent": {
        "end": {
          "byteColumn": 68,
          "byteOffset": 10262,
          "line": 289,
          "utf16Column": 67,
          "utf16Offset": 10261
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 10195,
          "line": 289,
          "utf16Column": 0,
          "utf16Offset": 10194
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SurveysController/RegistrationSurveyController.m",
      "fileSnippet": "- (void)czpickerViewDidClickCancelButton:(CZPickerView *)pickerView",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">czpicker</code> in the symbol name <code class=\"fauxpas-codesymbol\">czpickerViewDidClickCancelButton:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "czpicker",
      "impact": "Style",
      "info": "The word czpicker in the symbol name czpickerViewDidClickCancelButton: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/HEDISViewController/HEDISHeaderCell.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": "setUpCellWithDictionary:tapHandler:",
      "extent": {
        "end": {
          "byteColumn": 87,
          "byteOffset": 497,
          "line": 23,
          "utf16Column": 86,
          "utf16Offset": 496
        },
        "start": {
          "byteColumn": 71,
          "byteOffset": 481,
          "line": 23,
          "utf16Column": 70,
          "utf16Offset": 480
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyToDoController/MyToDoCell.m",
      "fileSnippet": "void (^)())block",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended that typedef be used for all block-typed declarations, for readability.",
        "ruleName": "Block-typed declaration without typedef",
        "ruleShortName": "NonTypedefBlockDeclaration",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": null,
      "ruleDescription": "It is recommended that typedef be used for all block-typed declarations, for readability.",
      "ruleName": "Block-typed declaration without typedef",
      "ruleShortName": "NonTypedefBlockDeclaration",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "JVFloatLabeledTextView",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 13087,
          "line": 328,
          "utf16Column": 39,
          "utf16Offset": 13087
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 13048,
          "line": 327,
          "utf16Column": 0,
          "utf16Offset": 13048
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SignUpController/JVFloatLabeledTextView.m",
      "fileSnippet": "+ (UIColor *)defaultiOSPlaceholderColor",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">defaulti</code> in the symbol name <code class=\"fauxpas-codesymbol\">defaultiOSPlaceholderColor</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "defaulti",
      "impact": "Style",
      "info": "The word defaulti in the symbol name defaultiOSPlaceholderColor may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initWithCoder:",
      "extent": {
        "end": {
          "byteColumn": 35,
          "byteOffset": 4019,
          "line": 93,
          "utf16Column": 34,
          "utf16Offset": 4018
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 3993,
          "line": 93,
          "utf16Column": 8,
          "utf16Offset": 3992
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/UserModel.m",
      "fileSnippet": "self.profileImageURL = url",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "profileImageURL",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "setFloatingLabelFont:",
      "extent": {
        "end": {
          "byteColumn": 100,
          "byteOffset": 4237,
          "line": 125,
          "utf16Column": 99,
          "utf16Offset": 4237
        },
        "start": {
          "byteColumn": 27,
          "byteOffset": 4164,
          "line": 125,
          "utf16Column": 26,
          "utf16Offset": 4164
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SignUpController/JVFloatLabeledTextField.m",
      "fileSnippet": "_floatingLabelFont ? _floatingLabelFont : [self defaultFloatingLabelFont]",
      "html": {
        "info": null,
        "ruleDescription": "Expressions of the form <code>(obj ? obj : other)</code> should be written as <code>obj ?: other</code>.",
        "ruleName": "Null coalescing operator usage",
        "ruleShortName": "NullCoalescingOp",
        "ruleWarning": "Please note that in the form <code>(obj ? obj : other)</code> the <code>obj</code> expression is evaluated twice, while in the <code>obj ?: other</code> form it is evaluated only once."
      },
      "identifier": null,
      "impact": "Style",
      "info": null,
      "ruleDescription": "Expressions of the form (obj ? obj : other) should be written as obj ?: other.",
      "ruleName": "Null coalescing operator usage",
      "ruleShortName": "NullCoalescingOp",
      "ruleWarning": "Please note that in the form (obj ? obj : other) the obj expression is evaluated twice, while in the obj ?: other form it is evaluated only once.",
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "IQ_UIView_Hierarchy",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 3348,
          "line": 93,
          "utf16Column": 38,
          "utf16Offset": 3348
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 3310,
          "line": 92,
          "utf16Column": 0,
          "utf16Offset": 3310
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/Categories/IQUIView+Hierarchy.m",
      "fileSnippet": "-(UIViewController *)topMostController",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "-[UIView topMostController]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "IQ_UIView_Hierarchy",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 1952,
          "line": 52,
          "utf16Column": 17,
          "utf16Offset": 1952
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 1935,
          "line": 51,
          "utf16Column": 0,
          "utf16Offset": 1935
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/Categories/IQUIView+Hierarchy.m",
      "fileSnippet": "+(void)initialize",
      "html": {
        "info": null,
        "ruleDescription": "The <code class=\"fauxpas-objcmethod\">+[NSObject initialize]</code> method should not be overridden in categories, because this will prevent the original implementation from being executed. In many cases, <code class=\"fauxpas-objcmethod\">+[NSObject load]</code> may be used instead — it will be executed separately for classes and categories.",
        "ruleName": "Overridden <code class=\"fauxpas-objcmethod\">+[NSObject initialize]</code> method in a category",
        "ruleShortName": "InitializeMethodCategoryOverride",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "The +[NSObject initialize] method should not be overridden in categories, because this will prevent the original implementation from being executed. In many cases, +[NSObject load] may be used instead — it will be executed separately for classes and categories.",
      "ruleName": "Overridden +[NSObject initialize] method in a category",
      "ruleShortName": "InitializeMethodCategoryOverride",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/main.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "UserModel",
      "extent": {
        "end": {
          "byteColumn": 47,
          "byteOffset": 645,
          "line": 22,
          "utf16Column": 46,
          "utf16Offset": 644
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 599,
          "line": 22,
          "utf16Column": 0,
          "utf16Offset": 598
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/UserModel.h",
      "fileSnippet": "@property (nonatomic, strong) NSString* gender",
      "html": {
        "info": "The <code>gender</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The gender property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 18,
          "byteOffset": 6915,
          "line": 206,
          "utf16Column": 17,
          "utf16Offset": 6914
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 6889,
          "line": 205,
          "utf16Column": 8,
          "utf16Offset": 6888
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SurveysController/RegistrationSurveyController.m",
      "fileSnippet": "default:\n            break",
      "html": {
        "info": null,
        "ruleDescription": "<p>If a switch statement explicitly handles all possible values, then the default case is unnecessary dead code, and might even be misleading to people reading the code.</p> <p>If the intended purpose of the default case is to safeguard against enum fields that are added in the future but accidentally left unhandled in the switch, the compiler warning <code>-Wswitch-enum</code> is recommended for that purpose instead.</p>",
        "ruleName": "Unnecessary default case in exhaustive switch statement",
        "ruleShortName": "DefaultInExhaustiveSwitch",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "If a switch statement explicitly handles all possible values, then the default case is unnecessary dead code, and might even be misleading to people reading the code. If the intended purpose of the default case is to safeguard against enum fields that are added in the future but accidentally left unhandled in the switch, the compiler warning -Wswitch-enum is recommended for that purpose instead.",
      "ruleName": "Unnecessary default case in exhaustive switch statement",
      "ruleShortName": "DefaultInExhaustiveSwitch",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "CHCHealthLogSurveyDetails",
      "extent": {
        "end": {
          "byteColumn": 48,
          "byteOffset": 392,
          "line": 15,
          "utf16Column": 47,
          "utf16Offset": 392
        },
        "start": {
          "byteColumn": 41,
          "byteOffset": 385,
          "line": 15,
          "utf16Column": 40,
          "utf16Offset": 385
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCHealthLogSurveyDetails.h",
      "fileSnippet": "snipset",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">snipset</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "snipset",
      "impact": "Style",
      "info": "The word snipset may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "createModelWithDictionary:",
      "extent": {
        "end": {
          "byteColumn": 59,
          "byteOffset": 657,
          "line": 25,
          "utf16Column": 58,
          "utf16Offset": 656
        },
        "start": {
          "byteColumn": 34,
          "byteOffset": 632,
          "line": 25,
          "utf16Column": 33,
          "utf16Offset": 631
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/RewardsCatalogModel.m",
      "fileSnippet": "[RewardsCatalogModel new]",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. <code>[FOOThing alloc]</code>.</p> <p>It is recommended to use <code class=\"fauxpas-codesymbol\">self</code> instead (e.g. <code>[self alloc]</code> or <code>[[self class] alloc]</code>) so that the concrete class would receive the message, and subclassing behavior would not be impeded.</p>",
        "ruleName": "Hardcoded self class reference",
        "ruleShortName": "HardcodedSelfClass",
        "ruleWarning": null
      },
      "identifier": "RewardsCatalogModel",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. [FOOThing alloc]. It is recommended to use self instead (e.g. [self alloc] or [[self class] alloc]) so that the concrete class would receive the message, and subclassing behavior would not be impeded.",
      "ruleName": "Hardcoded self class reference",
      "ruleShortName": "HardcodedSelfClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initWithHeaderTitle:cancelButtonTitle:confirmButtonTitle:",
      "extent": {
        "end": {
          "byteColumn": 59,
          "byteOffset": 1669,
          "line": 54,
          "utf16Column": 58,
          "utf16Offset": 1669
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 1619,
          "line": 54,
          "utf16Column": 8,
          "utf16Offset": 1619
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/CZPickerView.m",
      "fileSnippet": "self.headerTitle = headerTitle ? headerTitle : @\"\"",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "headerTitle",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "keyWindow",
      "extent": {
        "end": {
          "byteColumn": 105,
          "byteOffset": 14966,
          "line": 390,
          "utf16Column": 104,
          "utf16Offset": 14966
        },
        "start": {
          "byteColumn": 75,
          "byteOffset": 14936,
          "line": 390,
          "utf16Column": 74,
          "utf16Offset": 14936
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/IQKeyboardManager.m",
      "fileSnippet": "_keyWindow = originalKeyWindow",
      "html": {
        "info": null,
        "ruleDescription": "<p>Writing to static variables (which is essentially global state) in instance methods is generally considered bad practice, because it easily leads to undesireable behavior when multiple instances are being manipulated.</p> <p>Warnings are suppressed for assignments occurring inside <code class=\"fauxpas-cfunction\">dispatch_once()</code> blocks.</p>",
        "ruleName": "Instance method writes to static variable",
        "ruleShortName": "InstanceMethodWritesToStaticVariable",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Writing to static variables (which is essentially global state) in instance methods is generally considered bad practice, because it easily leads to undesireable behavior when multiple instances are being manipulated. Warnings are suppressed for assignments occurring inside dispatch_once() blocks.",
      "ruleName": "Instance method writes to static variable",
      "ruleShortName": "InstanceMethodWritesToStaticVariable",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 147,
          "byteOffset": 1364,
          "line": 45,
          "utf16Column": 146,
          "utf16Offset": 1363
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 1222,
          "line": 45,
          "utf16Column": 4,
          "utf16Offset": 1221
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/ScheduleAppointmentController.m",
      "fileSnippet": "[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(scheduleAppointment) name: @\"scheduleAppointmentClicked\" object:nil]",
      "html": {
        "info": null,
        "ruleDescription": "<p>You must invoke <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:]</code> or <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:name:object:]</code> before the observer object is deallocated.</p> <p>This rule only considers cases where the observer reference is <code>self</code>, or an instance variable or an Objective-C property in <code>self</code>.</p> <p>This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).</p>",
        "ruleName": "Missing <code class=\"fauxpas-objcclass\">NSNotificationCenter</code> observer detachment",
        "ruleShortName": "MissingNotificationCenterDetachment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "You must invoke -[NSNotificationCenter removeObserver:] or -[NSNotificationCenter removeObserver:name:object:] before the observer object is deallocated. This rule only considers cases where the observer reference is self, or an instance variable or an Objective-C property in self. This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).",
      "ruleName": "Missing NSNotificationCenter observer detachment",
      "ruleShortName": "MissingNotificationCenterDetachment",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 46,
          "byteOffset": 221,
          "line": 11,
          "utf16Column": 46,
          "utf16Offset": 220
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 175,
          "line": 11,
          "utf16Column": 0,
          "utf16Offset": 174
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyMedicationsController/CreateMedicationView.h",
      "fileSnippet": "@interface CreateMedicationView : UIScrollView",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "CreateMedicationView",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 74,
          "byteOffset": 1438,
          "line": 60,
          "utf16Column": 73,
          "utf16Offset": 1437
        },
        "start": {
          "byteColumn": 61,
          "byteOffset": 1425,
          "line": 60,
          "utf16Column": 60,
          "utf16Offset": 1424
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/BaseUIController/BottomBarView.m",
      "fileSnippet": "@\"pointTotal\"",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns when literal strings are used to specify key paths.</p> <p>Something like <code>NSStringFromSelector(@selector(foo))</code> is safer because it makes the compiler aware of the selector being specified — this helps find typos at compile time and allows automatic refactoring tools to make appropriate changes.</p>",
        "ruleName": "Literal string for key path",
        "ruleShortName": "LiteralStringKeyPath",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when literal strings are used to specify key paths. Something like NSStringFromSelector(@selector(foo)) is safer because it makes the compiler aware of the selector being specified — this helps find typos at compile time and allows automatic refactoring tools to make appropriate changes.",
      "ruleName": "Literal string for key path",
      "ruleShortName": "LiteralStringKeyPath",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 86,
          "byteOffset": 322,
          "line": 15,
          "utf16Column": 85,
          "utf16Offset": 321
        },
        "start": {
          "byteColumn": 68,
          "byteOffset": 304,
          "line": 15,
          "utf16Column": 67,
          "utf16Offset": 303
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Utils/UIUtils.m",
      "fileSnippet": "@\"statusBarWindow\"",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns when literal strings are used to specify key paths.</p> <p>Something like <code>NSStringFromSelector(@selector(foo))</code> is safer because it makes the compiler aware of the selector being specified — this helps find typos at compile time and allows automatic refactoring tools to make appropriate changes.</p>",
        "ruleName": "Literal string for key path",
        "ruleShortName": "LiteralStringKeyPath",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when literal strings are used to specify key paths. Something like NSStringFromSelector(@selector(foo)) is safer because it makes the compiler aware of the selector being specified — this helps find typos at compile time and allows automatic refactoring tools to make appropriate changes.",
      "ruleName": "Literal string for key path",
      "ruleShortName": "LiteralStringKeyPath",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "sharedInstance",
      "extent": {
        "end": {
          "byteColumn": 46,
          "byteOffset": 396,
          "line": 18,
          "utf16Column": 45,
          "utf16Offset": 395
        },
        "start": {
          "byteColumn": 27,
          "byteOffset": 377,
          "line": 18,
          "utf16Column": 26,
          "utf16Offset": 376
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/AppUserData/AppUserData.m",
      "fileSnippet": "[AppUserData alloc]",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. <code>[FOOThing alloc]</code>.</p> <p>It is recommended to use <code class=\"fauxpas-codesymbol\">self</code> instead (e.g. <code>[self alloc]</code> or <code>[[self class] alloc]</code>) so that the concrete class would receive the message, and subclassing behavior would not be impeded.</p>",
        "ruleName": "Hardcoded self class reference",
        "ruleShortName": "HardcodedSelfClass",
        "ruleWarning": null
      },
      "identifier": "AppUserData",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. [FOOThing alloc]. It is recommended to use self instead (e.g. [self alloc] or [[self class] alloc]) so that the concrete class would receive the message, and subclassing behavior would not be impeded.",
      "ruleName": "Hardcoded self class reference",
      "ruleShortName": "HardcodedSelfClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 41,
          "byteOffset": 225,
          "line": 11,
          "utf16Column": 41,
          "utf16Offset": 224
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 184,
          "line": 11,
          "utf16Column": 0,
          "utf16Offset": 183
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/RewardsCatalogModel.h",
      "fileSnippet": "@interface RewardsCatalogModel : NSObject",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "RewardsCatalogModel",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/BaseUIController/BaseViewController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "CHCArticleController",
      "extent": {
        "end": {
          "byteColumn": 53,
          "byteOffset": 334,
          "line": 13,
          "utf16Column": 52,
          "utf16Offset": 334
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 282,
          "line": 13,
          "utf16Column": 0,
          "utf16Offset": 282
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCArticleScreen/CHCArticleController.h",
      "fileSnippet": "@property (strong, nonatomic) NSString *choicePoints",
      "html": {
        "info": "The <code>choicePoints</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The choicePoints property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 55,
          "byteOffset": 10473,
          "line": 230,
          "utf16Column": 54,
          "utf16Offset": 10473
        },
        "start": {
          "byteColumn": 42,
          "byteOffset": 10460,
          "line": 230,
          "utf16Column": 41,
          "utf16Offset": 10460
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCHealthLogScreen/CHCHealthLogNewController.m",
      "fileSnippet": "@\"inputImage\"",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns when literal strings are used to specify key paths.</p> <p>Something like <code>NSStringFromSelector(@selector(foo))</code> is safer because it makes the compiler aware of the selector being specified — this helps find typos at compile time and allows automatic refactoring tools to make appropriate changes.</p>",
        "ruleName": "Literal string for key path",
        "ruleShortName": "LiteralStringKeyPath",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when literal strings are used to specify key paths. Something like NSStringFromSelector(@selector(foo)) is safer because it makes the compiler aware of the selector being specified — this helps find typos at compile time and allows automatic refactoring tools to make appropriate changes.",
      "ruleName": "Literal string for key path",
      "ruleShortName": "LiteralStringKeyPath",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCHomeController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/LoginController/CHCLoginController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "IQActionSheetPickerView",
      "extent": {
        "end": {
          "byteColumn": 53,
          "byteOffset": 5053,
          "line": 142,
          "utf16Column": 52,
          "utf16Offset": 5053
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 5001,
          "line": 142,
          "utf16Column": 0,
          "utf16Offset": 5001
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/IQActionSheetPickerView.h",
      "fileSnippet": "@property(nonatomic, strong) NSArray *selectedTitles",
      "html": {
        "info": "The <code>selectedTitles</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The selectedTitles property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 27,
          "byteOffset": 70285,
          "line": 1554,
          "utf16Column": 26,
          "utf16Offset": 70285
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 70250,
          "line": 1553,
          "utf16Column": 12,
          "utf16Offset": 70250
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/IQKeyboardManager.m",
      "fileSnippet": "default:\n                return nil",
      "html": {
        "info": null,
        "ruleDescription": "<p>If a switch statement explicitly handles all possible values, then the default case is unnecessary dead code, and might even be misleading to people reading the code.</p> <p>If the intended purpose of the default case is to safeguard against enum fields that are added in the future but accidentally left unhandled in the switch, the compiler warning <code>-Wswitch-enum</code> is recommended for that purpose instead.</p>",
        "ruleName": "Unnecessary default case in exhaustive switch statement",
        "ruleShortName": "DefaultInExhaustiveSwitch",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "If a switch statement explicitly handles all possible values, then the default case is unnecessary dead code, and might even be misleading to people reading the code. If the intended purpose of the default case is to safeguard against enum fields that are added in the future but accidentally left unhandled in the switch, the compiler warning -Wswitch-enum is recommended for that purpose instead.",
      "ruleName": "Unnecessary default case in exhaustive switch statement",
      "ruleShortName": "DefaultInExhaustiveSwitch",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Images.xcassets/Registration Survey/kids-couple.imageset",
      "fileSnippet": null,
      "html": {
        "info": "Asset catalog ‘Images’, set ‘kids-couple’: The ‘x3 scale, Universal’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "Asset catalog ‘Images’, set ‘kids-couple’: The ‘x3 scale, Universal’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Images.xcassets/Registration Survey/kids-couple.imageset",
      "fileSnippet": null,
      "html": {
        "info": "Asset catalog ‘Images’, set ‘kids-couple’: The ‘x2 scale, Universal’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "Asset catalog ‘Images’, set ‘kids-couple’: The ‘x2 scale, Universal’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 49,
          "byteOffset": 1396,
          "line": 31,
          "utf16Column": 49,
          "utf16Offset": 1396
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 1347,
          "line": 31,
          "utf16Column": 0,
          "utf16Offset": 1347
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/IQToolbar/IQTitleBarButtonItem.h",
      "fileSnippet": "@interface IQTitleBarButtonItem : IQBarButtonItem",
      "html": {
        "info": "The <code class=\"fauxpas-string\">IQ</code> prefix is used. Two-character prefixes are reserved for Apple’s system frameworks. The prefixes in your own (or third-party) code should be at least three characters long.",
        "ruleDescription": "Two-character prefixes (such as <code>NS</code>) are reserved for Apple’s system frameworks. Your own code should use prefixes that are three characters long.",
        "ruleName": "Reserved symbol prefix",
        "ruleShortName": "ReservedPrefix",
        "ruleWarning": null
      },
      "identifier": "IQ",
      "impact": "Maintainability",
      "info": "The IQ prefix is used. Two-character prefixes are reserved for Apple’s system frameworks. The prefixes in your own (or third-party) code should be at least three characters long.",
      "ruleDescription": "Two-character prefixes (such as NS) are reserved for Apple’s system frameworks. Your own code should use prefixes that are three characters long.",
      "ruleName": "Reserved symbol prefix",
      "ruleShortName": "ReservedPrefix",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 70,
          "byteOffset": 1447,
          "line": 33,
          "utf16Column": 69,
          "utf16Offset": 1447
        },
        "start": {
          "byteColumn": 48,
          "byteOffset": 1425,
          "line": 33,
          "utf16Column": 47,
          "utf16Offset": 1425
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCRequestAppointmentController.m",
      "fileSnippet": "getDoctorsBySpeciality",
      "html": {
        "info": "In Cocoa, it is idiomatic for accessor methods to be named in the form <code>something</code> instead of e.g. <code>getSomething</code>.",
        "ruleDescription": "Warns if getter methods are named in the form <code>getSomething</code> instead of <code>something</code>.",
        "ruleName": "Unidiomatic accessor naming",
        "ruleShortName": "UnidiomaticAccessorNaming",
        "ruleWarning": null
      },
      "identifier": "-[CHCRequestAppointmentController getDoctorsBySpeciality]",
      "impact": "Style",
      "info": "In Cocoa, it is idiomatic for accessor methods to be named in the form something instead of e.g. getSomething.",
      "ruleDescription": "Warns if getter methods are named in the form getSomething instead of something.",
      "ruleName": "Unidiomatic accessor naming",
      "ruleShortName": "UnidiomaticAccessorNaming",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Images.xcassets/Registration Survey/earth.imageset",
      "fileSnippet": null,
      "html": {
        "info": "Asset catalog ‘Images’, set ‘earth’: The ‘x3 scale, Universal’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "Asset catalog ‘Images’, set ‘earth’: The ‘x3 scale, Universal’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Images.xcassets/Registration Survey/earth.imageset",
      "fileSnippet": null,
      "html": {
        "info": "Asset catalog ‘Images’, set ‘earth’: The ‘x2 scale, Universal’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "Asset catalog ‘Images’, set ‘earth’: The ‘x2 scale, Universal’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Images.xcassets/Registration Survey/scale.imageset",
      "fileSnippet": null,
      "html": {
        "info": "Asset catalog ‘Images’, set ‘scale’: The ‘x3 scale, Universal’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "Asset catalog ‘Images’, set ‘scale’: The ‘x3 scale, Universal’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 103,
          "byteOffset": 639,
          "line": 25,
          "utf16Column": 102,
          "utf16Offset": 638
        },
        "start": {
          "byteColumn": 64,
          "byteOffset": 600,
          "line": 25,
          "utf16Column": 63,
          "utf16Offset": 599
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/DashboardViewController/DashboardViewController.m",
      "fileSnippet": "(user.firstName) ? user.firstName : @\"\"",
      "html": {
        "info": null,
        "ruleDescription": "Expressions of the form <code>(obj ? obj : other)</code> should be written as <code>obj ?: other</code>.",
        "ruleName": "Null coalescing operator usage",
        "ruleShortName": "NullCoalescingOp",
        "ruleWarning": "Please note that in the form <code>(obj ? obj : other)</code> the <code>obj</code> expression is evaluated twice, while in the <code>obj ?: other</code> form it is evaluated only once."
      },
      "identifier": null,
      "impact": "Style",
      "info": null,
      "ruleDescription": "Expressions of the form (obj ? obj : other) should be written as obj ?: other.",
      "ruleName": "Null coalescing operator usage",
      "ruleShortName": "NullCoalescingOp",
      "ruleWarning": "Please note that in the form (obj ? obj : other) the obj expression is evaluated twice, while in the obj ?: other form it is evaluated only once.",
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Images.xcassets/Registration Survey/scale.imageset",
      "fileSnippet": null,
      "html": {
        "info": "Asset catalog ‘Images’, set ‘scale’: The ‘x2 scale, Universal’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "Asset catalog ‘Images’, set ‘scale’: The ‘x2 scale, Universal’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/IQTextView/IQTextView.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 46,
          "byteOffset": 250,
          "line": 12,
          "utf16Column": 46,
          "utf16Offset": 249
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 204,
          "line": 12,
          "utf16Column": 0,
          "utf16Offset": 203
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/PointsRewardsController/PointsRewardsCell.h",
      "fileSnippet": "@interface PointsRewardsCell : UITableViewCell",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "PointsRewardsCell",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/drawable/morning.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/drawable/morning.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 136,
          "byteOffset": 1148,
          "line": 33,
          "utf16Column": 135,
          "utf16Offset": 1147
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 1017,
          "line": 33,
          "utf16Column": 4,
          "utf16Offset": 1016
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/DashboardViewController/DashboardViewController.m",
      "fileSnippet": "[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(editedApponitment) name: @\"editedApponitment\" object:nil]",
      "html": {
        "info": null,
        "ruleDescription": "<p>You must invoke <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:]</code> or <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:name:object:]</code> before the observer object is deallocated.</p> <p>This rule only considers cases where the observer reference is <code>self</code>, or an instance variable or an Objective-C property in <code>self</code>.</p> <p>This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).</p>",
        "ruleName": "Missing <code class=\"fauxpas-objcclass\">NSNotificationCenter</code> observer detachment",
        "ruleShortName": "MissingNotificationCenterDetachment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "You must invoke -[NSNotificationCenter removeObserver:] or -[NSNotificationCenter removeObserver:name:object:] before the observer object is deallocated. This rule only considers cases where the observer reference is self, or an instance variable or an Objective-C property in self. This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).",
      "ruleName": "Missing NSNotificationCenter observer detachment",
      "ruleShortName": "MissingNotificationCenterDetachment",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "getLength:",
      "extent": {
        "end": {
          "byteColumn": 91,
          "byteOffset": 15408,
          "line": 424,
          "utf16Column": 90,
          "utf16Offset": 15407
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 15322,
          "line": 424,
          "utf16Column": 4,
          "utf16Offset": 15321
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SignUpController/CHCRegisterController.m",
      "fileSnippet": "mobileNumber = [mobileNumber stringByReplacingOccurrencesOfString:@\"(\" withString:@\"\"]",
      "html": {
        "info": null,
        "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
        "ruleName": "Modifying the value of an argument variable",
        "ruleShortName": "ArgumentModification",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
      "ruleName": "Modifying the value of an argument variable",
      "ruleShortName": "ArgumentModification",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "forgetPinButtonClicked:",
      "extent": {
        "end": {
          "byteColumn": 127,
          "byteOffset": 2298,
          "line": 95,
          "utf16Column": 126,
          "utf16Offset": 2297
        },
        "start": {
          "byteColumn": 48,
          "byteOffset": 2219,
          "line": 95,
          "utf16Column": 47,
          "utf16Offset": 2218
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/SecurityPinController/SecurityPinController.m",
      "fileSnippet": "[[ForgetPinController alloc] initWithNibName:@\"ForgetPinController\" bundle:nil]",
      "html": {
        "info": "Instantiating <code class=\"fauxpas-objcclass\">ForgetPinController</code> outside its implementation with literal NIB name <code class=\"fauxpas-string\">ForgetPinController</code>",
        "ruleDescription": "It is not advisable to use <code class=\"fauxpas-objcmethod\">-[UIViewController initWithNibName:bundle:]</code> to instantiate <code class=\"fauxpas-objcclass\">UIViewController</code> subclasses outside of the subclass implementation itself. This breaks encapsulation (the subclass should be the one to decide which NIB to use) and makes it more likely that a typo in the NIB name string will crash the app during runtime.",
        "ruleName": "Using <code class=\"fauxpas-objcmethod\">-[UIViewController initWithNibName:bundle:]</code> outside the <code class=\"fauxpas-objcclass\">UIViewController</code> implementation",
        "ruleShortName": "ViewControllerInitWithNibName",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": "Instantiating ForgetPinController outside its implementation with literal NIB name ForgetPinController",
      "ruleDescription": "It is not advisable to use -[UIViewController initWithNibName:bundle:] to instantiate UIViewController subclasses outside of the subclass implementation itself. This breaks encapsulation (the subclass should be the one to decide which NIB to use) and makes it more likely that a typo in the NIB name string will crash the app during runtime.",
      "ruleName": "Using -[UIViewController initWithNibName:bundle:] outside the UIViewController implementation",
      "ruleShortName": "ViewControllerInitWithNibName",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/HomeScreenContentViews/CHCHealthSurveyCell.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 61,
          "byteOffset": 8568,
          "line": 200,
          "utf16Column": 60,
          "utf16Offset": 8568
        },
        "start": {
          "byteColumn": 47,
          "byteOffset": 8554,
          "line": 200,
          "utf16Column": 46,
          "utf16Offset": 8554
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCMedicationReminderController.m",
      "fileSnippet": "@\"inputRadius\"",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns when literal strings are used to specify key paths.</p> <p>Something like <code>NSStringFromSelector(@selector(foo))</code> is safer because it makes the compiler aware of the selector being specified — this helps find typos at compile time and allows automatic refactoring tools to make appropriate changes.</p>",
        "ruleName": "Literal string for key path",
        "ruleShortName": "LiteralStringKeyPath",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when literal strings are used to specify key paths. Something like NSStringFromSelector(@selector(foo)) is safer because it makes the compiler aware of the selector being specified — this helps find typos at compile time and allows automatic refactoring tools to make appropriate changes.",
      "ruleName": "Literal string for key path",
      "ruleShortName": "LiteralStringKeyPath",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 22,
          "byteOffset": 25,
          "line": 2,
          "utf16Column": 22,
          "utf16Offset": 25
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 3,
          "line": 2,
          "utf16Column": 0,
          "utf16Offset": 3
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/Categories/IQUIView+Hierarchy.m",
      "fileSnippet": "//  UIView+Hierarchy.m",
      "html": {
        "info": "The file name in the source file header comment (<code class=\"fauxpas-string\">UIView+Hierarchy.m</code>) does not match the actual file name (<code class=\"fauxpas-string\">IQUIView+Hierarchy.m</code>).",
        "ruleDescription": "Warns about errors in source file header comments (that are formatted using the default Xcode template), for example if the file name in the comment does not match the actual file name, or if the placeholder <code class=\"fauxpas-string\">__MyCompanyName__</code> is present.",
        "ruleName": "Source file header comment format",
        "ruleShortName": "SourceFileHeaderComment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": "The file name in the source file header comment (UIView+Hierarchy.m) does not match the actual file name (IQUIView+Hierarchy.m).",
      "ruleDescription": "Warns about errors in source file header comments (that are formatted using the default Xcode template), for example if the file name in the comment does not match the actual file name, or if the placeholder __MyCompanyName__ is present.",
      "ruleName": "Source file header comment format",
      "ruleShortName": "SourceFileHeaderComment",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCHome.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIButton</code> (id <code class=\"fauxpas-string\">yOh-xn-EgW</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIButton (id yOh-xn-EgW)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIButton (id yOh-xn-EgW) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCHome.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIButton</code> (id <code class=\"fauxpas-string\">1HM-cS-FEN</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIButton (id 1HM-cS-FEN)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIButton (id 1HM-cS-FEN) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCHome.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIButton</code> (id <code class=\"fauxpas-string\">mZm-Xb-kig</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIButton (id mZm-Xb-kig)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIButton (id mZm-Xb-kig) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCHome.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIButton</code> (id <code class=\"fauxpas-string\">qHX-Zo-d3g</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIButton (id qHX-Zo-d3g)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIButton (id qHX-Zo-d3g) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ApplicationSupport/AppDelegate.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCHome.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIButton</code> (id <code class=\"fauxpas-string\">FrI-Or-07u</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIButton (id FrI-Or-07u)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIButton (id FrI-Or-07u) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 62,
          "byteOffset": 963,
          "line": 24,
          "utf16Column": 61,
          "utf16Offset": 963
        },
        "start": {
          "byteColumn": 54,
          "byteOffset": 955,
          "line": 24,
          "utf16Column": 53,
          "utf16Offset": 955
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCHealthLogScreen/CHCHealthLogController.m",
      "fileSnippet": "unittype",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">Unittype</code> in the symbol name <code class=\"fauxpas-codesymbol\">setUnittype:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "Unittype",
      "impact": "Style",
      "info": "The word Unittype in the symbol name setUnittype: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 48,
          "byteOffset": 220,
          "line": 11,
          "utf16Column": 48,
          "utf16Offset": 219
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 172,
          "line": 11,
          "utf16Column": 0,
          "utf16Offset": 171
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/PointsHistoryController/PointsHistoryCell.h",
      "fileSnippet": "@interface PointsHistoryCell : UITableViewCell {",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "PointsHistoryCell",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 78,
          "byteOffset": 3135,
          "line": 88,
          "utf16Column": 77,
          "utf16Offset": 3134
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 3066,
          "line": 88,
          "utf16Column": 8,
          "utf16Offset": 3065
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/BaseUIController/BaseViewController.m",
      "fileSnippet": "default:                                                        break",
      "html": {
        "info": null,
        "ruleDescription": "<p>If a switch statement explicitly handles all possible values, then the default case is unnecessary dead code, and might even be misleading to people reading the code.</p> <p>If the intended purpose of the default case is to safeguard against enum fields that are added in the future but accidentally left unhandled in the switch, the compiler warning <code>-Wswitch-enum</code> is recommended for that purpose instead.</p>",
        "ruleName": "Unnecessary default case in exhaustive switch statement",
        "ruleShortName": "DefaultInExhaustiveSwitch",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "If a switch statement explicitly handles all possible values, then the default case is unnecessary dead code, and might even be misleading to people reading the code. If the intended purpose of the default case is to safeguard against enum fields that are added in the future but accidentally left unhandled in the switch, the compiler warning -Wswitch-enum is recommended for that purpose instead.",
      "ruleName": "Unnecessary default case in exhaustive switch statement",
      "ruleShortName": "DefaultInExhaustiveSwitch",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 62,
          "byteOffset": 963,
          "line": 24,
          "utf16Column": 61,
          "utf16Offset": 963
        },
        "start": {
          "byteColumn": 54,
          "byteOffset": 955,
          "line": 24,
          "utf16Column": 53,
          "utf16Offset": 955
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCHealthLogScreen/CHCHealthLogController.m",
      "fileSnippet": "unittype",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">unittype</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "unittype",
      "impact": "Style",
      "info": "The word unittype may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "addToolbarIfRequired",
      "extent": {
        "end": {
          "byteColumn": 59,
          "byteOffset": 72044,
          "line": 1594,
          "utf16Column": 58,
          "utf16Offset": 72044
        },
        "start": {
          "byteColumn": 17,
          "byteOffset": 72002,
          "line": 1594,
          "utf16Column": 16,
          "utf16Offset": 72002
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/IQKeyboardManager.m",
      "fileSnippet": "doneToolbar = textField.inputAccessoryView",
      "html": {
        "info": null,
        "ruleDescription": "<p>Writing to static variables (which is essentially global state) in instance methods is generally considered bad practice, because it easily leads to undesireable behavior when multiple instances are being manipulated.</p> <p>Warnings are suppressed for assignments occurring inside <code class=\"fauxpas-cfunction\">dispatch_once()</code> blocks.</p>",
        "ruleName": "Instance method writes to static variable",
        "ruleShortName": "InstanceMethodWritesToStaticVariable",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Writing to static variables (which is essentially global state) in instance methods is generally considered bad practice, because it easily leads to undesireable behavior when multiple instances are being manipulated. Warnings are suppressed for assignments occurring inside dispatch_once() blocks.",
      "ruleName": "Instance method writes to static variable",
      "ruleShortName": "InstanceMethodWritesToStaticVariable",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "SearchDoctorController",
      "extent": {
        "end": {
          "byteColumn": 90,
          "byteOffset": 9559,
          "line": 279,
          "utf16Column": 89,
          "utf16Offset": 9558
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 9470,
          "line": 279,
          "utf16Column": 0,
          "utf16Offset": 9469
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/SearchDoctorController.m",
      "fileSnippet": "- (void)czpickerView:(CZPickerView *)pickerView didConfirmWithItemsAtRows:(NSArray *)rows",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">czpicker</code> in the symbol name <code class=\"fauxpas-codesymbol\">czpickerView:didConfirmWithItemsAtRows:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "czpicker",
      "impact": "Style",
      "info": "The word czpicker in the symbol name czpickerView:didConfirmWithItemsAtRows: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "AppDelegate",
      "extent": {
        "end": {
          "byteColumn": 49,
          "byteOffset": 10502,
          "line": 253,
          "utf16Column": 48,
          "utf16Offset": 10502
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 10454,
          "line": 253,
          "utf16Column": 0,
          "utf16Offset": 10454
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ApplicationSupport/AppDelegate.m",
      "fileSnippet": "- (void)initalizeRootControllerAs:(RootType)type",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">initalize</code> in the symbol name <code class=\"fauxpas-codesymbol\">initalizeRootControllerAs:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "initalize",
      "impact": "Style",
      "info": "The word initalize in the symbol name initalizeRootControllerAs: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 55,
          "byteOffset": 239,
          "line": 10,
          "utf16Column": 55,
          "utf16Offset": 238
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 184,
          "line": 10,
          "utf16Column": 0,
          "utf16Offset": 183
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/PointsRewardsController/PointsRewardsController.h",
      "fileSnippet": "@interface PointsRewardsController : BaseViewController",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "PointsRewardsController",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 55,
          "byteOffset": 240,
          "line": 11,
          "utf16Column": 55,
          "utf16Offset": 239
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 185,
          "line": 11,
          "utf16Column": 0,
          "utf16Offset": 184
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/PointsHistoryController/PointsHistoryController.h",
      "fileSnippet": "@interface PointsHistoryController : BaseViewController",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "PointsHistoryController",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initWithHeaderTitle:cancelButtonTitle:confirmButtonTitle:",
      "extent": {
        "end": {
          "byteColumn": 113,
          "byteOffset": 1837,
          "line": 56,
          "utf16Column": 112,
          "utf16Offset": 1837
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 1733,
          "line": 56,
          "utf16Column": 8,
          "utf16Offset": 1733
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/CZPickerView.m",
      "fileSnippet": "self.headerBackgroundColor = [UIColor colorWithRed:0/255.0 green:118.0/255.0 blue:182.0/255.0 alpha:1.0]",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "headerBackgroundColor",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "DoctorModel",
      "extent": {
        "end": {
          "byteColumn": 47,
          "byteOffset": 599,
          "line": 19,
          "utf16Column": 46,
          "utf16Offset": 598
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 553,
          "line": 19,
          "utf16Column": 0,
          "utf16Offset": 552
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/DoctorModel.h",
      "fileSnippet": "@property (nonatomic, strong) NSString *avatar",
      "html": {
        "info": "The <code>avatar</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The avatar property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "_rearViewDeploymentForNewFrontViewPosition:",
      "extent": {
        "end": {
          "byteColumn": 45,
          "byteOffset": 42790,
          "line": 1263,
          "utf16Column": 44,
          "utf16Offset": 42790
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 42754,
          "line": 1263,
          "utf16Column": 8,
          "utf16Offset": 42754
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/SWRevealViewController.m",
      "fileSnippet": "newPosition = FrontViewPositionRight",
      "html": {
        "info": null,
        "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
        "ruleName": "Modifying the value of an argument variable",
        "ruleShortName": "ArgumentModification",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
      "ruleName": "Modifying the value of an argument variable",
      "ruleShortName": "ArgumentModification",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "showAlertForString:",
      "extent": {
        "end": {
          "byteColumn": 107,
          "byteOffset": 1793,
          "line": 57,
          "utf16Column": 106,
          "utf16Offset": 1792
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 1691,
          "line": 57,
          "utf16Column": 4,
          "utf16Offset": 1690
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Utils/Utils.m",
      "fileSnippet": "message = (message == nil || message.length <= 0) ? @\"Something went wrong please try again\" : message",
      "html": {
        "info": null,
        "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
        "ruleName": "Modifying the value of an argument variable",
        "ruleShortName": "ArgumentModification",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
      "ruleName": "Modifying the value of an argument variable",
      "ruleShortName": "ArgumentModification",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "IQToolbarAddition",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 4354,
          "line": 120,
          "utf16Column": 124,
          "utf16Offset": 4354
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 4230,
          "line": 119,
          "utf16Column": 0,
          "utf16Offset": 4230
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/IQToolbar/IQUIView+IQKeyboardToolbar.m",
      "fileSnippet": "- (void)addRightButtonOnKeyboardWithText:(NSString*)text target:(id)target action:(SEL)action titleText:(NSString*)titleText",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "-[UIView addRightButtonOnKeyboardWithText:target:action:titleText:]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "SearchDoctorController",
      "extent": {
        "end": {
          "byteColumn": 41,
          "byteOffset": 8991,
          "line": 263,
          "utf16Column": 40,
          "utf16Offset": 8990
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 8897,
          "line": 262,
          "utf16Column": 0,
          "utf16Offset": 8896
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/SearchDoctorController.m",
      "fileSnippet": "- (NSString *)czpickerView:(CZPickerView *)pickerView\n               titleForRow:(NSInteger)ro",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">czpicker</code> in the symbol name <code class=\"fauxpas-codesymbol\">czpickerView:titleForRow:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "czpicker",
      "impact": "Style",
      "info": "The word czpicker in the symbol name czpickerView:titleForRow: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ArticleModel",
      "extent": {
        "end": {
          "byteColumn": 53,
          "byteOffset": 418,
          "line": 16,
          "utf16Column": 52,
          "utf16Offset": 417
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 366,
          "line": 16,
          "utf16Column": 0,
          "utf16Offset": 365
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/ArticleModel.h",
      "fileSnippet": "@property (nonatomic, strong) NSString *articleTitle",
      "html": {
        "info": "The <code>articleTitle</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The articleTitle property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": "ProgressView",
      "extent": {
        "end": {
          "byteColumn": 20,
          "byteOffset": 6849,
          "line": 226,
          "utf16Column": 19,
          "utf16Offset": 6849
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 6830,
          "line": 226,
          "utf16Column": 0,
          "utf16Offset": 6830
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/ProgressView/ProgressView.m",
      "fileSnippet": "- (CGFloat)getYPoin",
      "html": {
        "info": "In Cocoa, it is idiomatic for accessor methods to be named in the form <code>something</code> instead of e.g. <code>getSomething</code>.",
        "ruleDescription": "Warns if getter methods are named in the form <code>getSomething</code> instead of <code>something</code>.",
        "ruleName": "Unidiomatic accessor naming",
        "ruleShortName": "UnidiomaticAccessorNaming",
        "ruleWarning": null
      },
      "identifier": "-[ProgressView getYPoint]",
      "impact": "Style",
      "info": "In Cocoa, it is idiomatic for accessor methods to be named in the form something instead of e.g. getSomething.",
      "ruleDescription": "Warns if getter methods are named in the form getSomething instead of something.",
      "ruleName": "Unidiomatic accessor naming",
      "ruleShortName": "UnidiomaticAccessorNaming",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Ambiguous view: <code class=\"fauxpas-objcclass\">UIScrollView</code> (id <code class=\"fauxpas-string\">Qyn-Le-Dxy</code>) — the position and size of this view are ambiguous.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIScrollView (id Qyn-Le-Dxy)",
      "impact": "Maintainability",
      "info": "Ambiguous view: UIScrollView (id Qyn-Le-Dxy) — the position and size of this view are ambiguous.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "IQToolbarAddition",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 3008,
          "line": 77,
          "utf16Column": 56,
          "utf16Offset": 3008
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 2952,
          "line": 76,
          "utf16Column": 0,
          "utf16Offset": 2952
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/IQToolbar/IQUIView+IQKeyboardToolbar.m",
      "fileSnippet": "-(void)setCustomDoneTarget:(id)target action:(SEL)action",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "-[UIView setCustomDoneTarget:action:]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/IQKeyboardManager.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> <code class=\"fauxpas-string\">0</code> (id <code class=\"fauxpas-string\">mjd-p5-Nrv</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel 0 (id mjd-p5-Nrv)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel 0 (id mjd-p5-Nrv) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "SWRevealViewController",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 25877,
          "line": 802,
          "utf16Column": 99,
          "utf16Offset": 25877
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 25778,
          "line": 801,
          "utf16Column": 0,
          "utf16Offset": 25778
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/SWRevealViewController.m",
      "fileSnippet": "- (void)_getAdjustedFrontViewPosition:(FrontViewPosition*)frontViewPosition forSymetry:(int)symetry",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">Symetry</code> in the symbol name <code class=\"fauxpas-codesymbol\">_getAdjustedFrontViewPosition:forSymetry:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "Symetry",
      "impact": "Style",
      "info": "The word Symetry in the symbol name _getAdjustedFrontViewPosition:forSymetry: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 39,
          "byteOffset": 215,
          "line": 11,
          "utf16Column": 39,
          "utf16Offset": 214
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 176,
          "line": 11,
          "utf16Column": 0,
          "utf16Offset": 175
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SurveysController/SurveyCell.h",
      "fileSnippet": "@interface SurveyCell : UITableViewCell",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "SurveyCell",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initWithCoder:",
      "extent": {
        "end": {
          "byteColumn": 69,
          "byteOffset": 2812,
          "line": 71,
          "utf16Column": 68,
          "utf16Offset": 2811
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 2748,
          "line": 71,
          "utf16Column": 4,
          "utf16Offset": 2747
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/UserModel.m",
      "fileSnippet": "self.email              = [aDecoder decodeObjectForKey:@\"email\"]",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "email",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": "APIClass",
      "extent": {
        "end": {
          "byteColumn": 51,
          "byteOffset": 10672,
          "line": 302,
          "utf16Column": 50,
          "utf16Offset": 10672
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 10622,
          "line": 302,
          "utf16Column": 0,
          "utf16Offset": 10622
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/APIModel/APIClass.m",
      "fileSnippet": "- (NSDictionary*)getDict:(NSString*)strChangetoJSO",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns about Objective-C methods to which no references are found.</p> <p>This rule will not warn about <code class=\"fauxpas-codesymbol\">IBAction</code> methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form <code class=\"fauxpas-string\">*+Private.h</code>). It also won’t warn about unused getter methods whose setter is used, and vice versa.</p>",
        "ruleName": "Possibly unused Objective-C method",
        "ruleShortName": "UnusedMethod",
        "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool)."
      },
      "identifier": "-[APIClass getDict:]",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns about Objective-C methods to which no references are found. This rule will not warn about IBAction methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form *+Private.h). It also won’t warn about unused getter methods whose setter is used, and vice versa.",
      "ruleName": "Possibly unused Objective-C method",
      "ruleShortName": "UnusedMethod",
      "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool).",
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "SWRevealViewController",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 25580,
          "line": 796,
          "utf16Column": 96,
          "utf16Offset": 25580
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 25484,
          "line": 795,
          "utf16Column": 0,
          "utf16Offset": 25484
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/SWRevealViewController.m",
      "fileSnippet": "- (void)_getBounceBack:(BOOL*)pBounceBack pStableDrag:(BOOL*)pStableDrag forSymetry:(int)symetry",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">Symetry</code> in the symbol name <code class=\"fauxpas-codesymbol\">_getBounceBack:pStableDrag:forSymetry:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "Symetry",
      "impact": "Style",
      "info": "The word Symetry in the symbol name _getBounceBack:pStableDrag:forSymetry: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "IQ_UIView_Hierarchy",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 6556,
          "line": 202,
          "utf16Column": 58,
          "utf16Offset": 6556
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 6498,
          "line": 201,
          "utf16Column": 0,
          "utf16Offset": 6498
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/Categories/IQUIView+Hierarchy.m",
      "fileSnippet": "-(CGAffineTransform)convertTransformToView:(UIView*)toView",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "-[UIView convertTransformToView:]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": "dismissWithCompletion:",
      "extent": {
        "end": {
          "byteColumn": 56,
          "byteOffset": 1563,
          "line": 34,
          "utf16Column": 55,
          "utf16Offset": 1563
        },
        "start": {
          "byteColumn": 31,
          "byteOffset": 1538,
          "line": 34,
          "utf16Column": 30,
          "utf16Offset": 1538
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/IQActionSheetViewController.h",
      "fileSnippet": "void (^)(void))completion",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended that typedef be used for all block-typed declarations, for readability.",
        "ruleName": "Block-typed declaration without typedef",
        "ruleShortName": "NonTypedefBlockDeclaration",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": null,
      "ruleDescription": "It is recommended that typedef be used for all block-typed declarations, for readability.",
      "ruleName": "Block-typed declaration without typedef",
      "ruleShortName": "NonTypedefBlockDeclaration",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "AppDelegate",
      "extent": {
        "end": {
          "byteColumn": 50,
          "byteOffset": 845,
          "line": 31,
          "utf16Column": 49,
          "utf16Offset": 845
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 796,
          "line": 31,
          "utf16Column": 0,
          "utf16Offset": 796
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ApplicationSupport/AppDelegate.h",
      "fileSnippet": "- (void)initalizeRootControllerAs:(RootType)type;",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">initalize</code> in the symbol name <code class=\"fauxpas-codesymbol\">initalizeRootControllerAs:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "initalize",
      "impact": "Style",
      "info": "The word initalize in the symbol name initalizeRootControllerAs: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> <code class=\"fauxpas-string\">Steps Walked</code> (id <code class=\"fauxpas-string\">hfD-aV-yBt</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel Steps Walked (id hfD-aV-yBt)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel Steps Walked (id hfD-aV-yBt) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> <code class=\"fauxpas-string\">Hospital of Smyrna, GA</code> (id <code class=\"fauxpas-string\">MDw-ne-tLO</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel Hospital of Smyrna, GA (id MDw-ne-tLO)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel Hospital of Smyrna, GA (id MDw-ne-tLO) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCSurveyScreen/AnswerCell.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/CustomViews/CustomTextField.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIView</code> (id <code class=\"fauxpas-string\">fWK-UK-1XF</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIView (id fWK-UK-1XF)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIView (id fWK-UK-1XF) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIView</code> (id <code class=\"fauxpas-string\">qTa-3L-tYg</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIView (id qTa-3L-tYg)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIView (id qTa-3L-tYg) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIView</code> (id <code class=\"fauxpas-string\">leC-zu-vvl</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIView (id leC-zu-vvl)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIView (id leC-zu-vvl) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIView</code> (id <code class=\"fauxpas-string\">lDe-wm-pdD</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIView (id lDe-wm-pdD)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIView (id lDe-wm-pdD) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIView</code> (id <code class=\"fauxpas-string\">mcY-8o-GrA</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIView (id mcY-8o-GrA)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIView (id mcY-8o-GrA) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIView</code> (id <code class=\"fauxpas-string\">JN1-Ro-48b</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIView (id JN1-Ro-48b)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIView (id JN1-Ro-48b) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIView</code> (id <code class=\"fauxpas-string\">1kx-yp-eev</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIView (id 1kx-yp-eev)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIView (id 1kx-yp-eev) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIView</code> (id <code class=\"fauxpas-string\">C73-5v-ScF</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIView (id C73-5v-ScF)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIView (id C73-5v-ScF) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIView</code> (id <code class=\"fauxpas-string\">R4g-af-RkK</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIView (id R4g-af-RkK)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIView (id R4g-af-RkK) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIView</code> (id <code class=\"fauxpas-string\">qKe-dU-M2i</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIView (id qKe-dU-M2i)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIView (id qKe-dU-M2i) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIView</code> (id <code class=\"fauxpas-string\">r3d-Je-VDo</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIView (id r3d-Je-VDo)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIView (id r3d-Je-VDo) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIView</code> (id <code class=\"fauxpas-string\">YRk-WO-cjo</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIView (id YRk-WO-cjo)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIView (id YRk-WO-cjo) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIView</code> (id <code class=\"fauxpas-string\">hrp-jh-LPT</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIView (id hrp-jh-LPT)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIView (id hrp-jh-LPT) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIView</code> (id <code class=\"fauxpas-string\">mbU-Cd-jwc</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIView (id mbU-Cd-jwc)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIView (id mbU-Cd-jwc) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIView</code> (id <code class=\"fauxpas-string\">PAO-1m-YhX</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIView (id PAO-1m-YhX)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIView (id PAO-1m-YhX) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIView</code> (id <code class=\"fauxpas-string\">ibr-oE-a2f</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIView (id ibr-oE-a2f)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIView (id ibr-oE-a2f) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 39,
          "byteOffset": 2148,
          "line": 55,
          "utf16Column": 39,
          "utf16Offset": 2148
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 2109,
          "line": 55,
          "utf16Column": 0,
          "utf16Offset": 2109
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/IQKeyboardManager.h",
      "fileSnippet": "@interface IQKeyboardManager : NSObject",
      "html": {
        "info": "The <code class=\"fauxpas-string\">IQ</code> prefix is used. Two-character prefixes are reserved for Apple’s system frameworks. The prefixes in your own (or third-party) code should be at least three characters long.",
        "ruleDescription": "Two-character prefixes (such as <code>NS</code>) are reserved for Apple’s system frameworks. Your own code should use prefixes that are three characters long.",
        "ruleName": "Reserved symbol prefix",
        "ruleShortName": "ReservedPrefix",
        "ruleWarning": null
      },
      "identifier": "IQ",
      "impact": "Maintainability",
      "info": "The IQ prefix is used. Two-character prefixes are reserved for Apple’s system frameworks. The prefixes in your own (or third-party) code should be at least three characters long.",
      "ruleDescription": "Two-character prefixes (such as NS) are reserved for Apple’s system frameworks. Your own code should use prefixes that are three characters long.",
      "ruleName": "Reserved symbol prefix",
      "ruleShortName": "ReservedPrefix",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "IQToolbarAddition",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 6762,
          "line": 177,
          "utf16Column": 96,
          "utf16Offset": 6762
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 6666,
          "line": 176,
          "utf16Column": 0,
          "utf16Offset": 6666
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/IQToolbar/IQUIView+IQKeyboardToolbar.m",
      "fileSnippet": "- (void)addDoneOnKeyboardWithTarget:(id)target action:(SEL)action titleText:(NSString*)titleText",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "-[UIView addDoneOnKeyboardWithTarget:action:titleText:]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "locationManager:didUpdateLocations:",
      "extent": {
        "end": {
          "byteColumn": 66,
          "byteOffset": 6478,
          "line": 177,
          "utf16Column": 65,
          "utf16Offset": 6478
        },
        "start": {
          "byteColumn": 17,
          "byteOffset": 6429,
          "line": 177,
          "utf16Column": 16,
          "utf16Offset": 6429
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/LocationManager.m",
      "fileSnippet": "notification = [[UILocalNotification alloc] init]",
      "html": {
        "info": null,
        "ruleDescription": "<p>Writing to static variables (which is essentially global state) in instance methods is generally considered bad practice, because it easily leads to undesireable behavior when multiple instances are being manipulated.</p> <p>Warnings are suppressed for assignments occurring inside <code class=\"fauxpas-cfunction\">dispatch_once()</code> blocks.</p>",
        "ruleName": "Instance method writes to static variable",
        "ruleShortName": "InstanceMethodWritesToStaticVariable",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Writing to static variables (which is essentially global state) in instance methods is generally considered bad practice, because it easily leads to undesireable behavior when multiple instances are being manipulated. Warnings are suppressed for assignments occurring inside dispatch_once() blocks.",
      "ruleName": "Instance method writes to static variable",
      "ruleShortName": "InstanceMethodWritesToStaticVariable",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 40,
          "byteOffset": 229,
          "line": 13,
          "utf16Column": 40,
          "utf16Offset": 228
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 189,
          "line": 13,
          "utf16Column": 0,
          "utf16Offset": 188
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/CustomViews/CustomTextField.h",
      "fileSnippet": "@interface CustomTextField : UITextField",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "CustomTextField",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/IQActionSheetViewController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 46,
          "byteOffset": 218,
          "line": 11,
          "utf16Column": 46,
          "utf16Offset": 217
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 172,
          "line": 11,
          "utf16Column": 0,
          "utf16Offset": 171
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/MyAppointmentCell.h",
      "fileSnippet": "@interface MyAppointmentCell : UITableViewCell",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "MyAppointmentCell",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 55,
          "byteOffset": 8213,
          "line": 195,
          "utf16Column": 54,
          "utf16Offset": 8213
        },
        "start": {
          "byteColumn": 42,
          "byteOffset": 8200,
          "line": 195,
          "utf16Column": 41,
          "utf16Offset": 8200
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCMedicationReminderController.m",
      "fileSnippet": "@\"inputImage\"",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns when literal strings are used to specify key paths.</p> <p>Something like <code>NSStringFromSelector(@selector(foo))</code> is safer because it makes the compiler aware of the selector being specified — this helps find typos at compile time and allows automatic refactoring tools to make appropriate changes.</p>",
        "ruleName": "Literal string for key path",
        "ruleShortName": "LiteralStringKeyPath",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when literal strings are used to specify key paths. Something like NSStringFromSelector(@selector(foo)) is safer because it makes the compiler aware of the selector being specified — this helps find typos at compile time and allows automatic refactoring tools to make appropriate changes.",
      "ruleName": "Literal string for key path",
      "ruleShortName": "LiteralStringKeyPath",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "SWRevealView",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 5542,
          "line": 178,
          "utf16Column": 51,
          "utf16Offset": 5542
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 5491,
          "line": 177,
          "utf16Column": 0,
          "utf16Offset": 5491
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/SWRevealViewController.m",
      "fileSnippet": "- (CGRect)hierarchycalFrameAdjustment:(CGRect)frame",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">hierarchycal</code> in the symbol name <code class=\"fauxpas-codesymbol\">hierarchycalFrameAdjustment:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "hierarchycal",
      "impact": "Style",
      "info": "The word hierarchycal in the symbol name hierarchycalFrameAdjustment: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": "CHCRegisterController",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 11238,
          "line": 321,
          "utf16Column": 22,
          "utf16Offset": 11237
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 11216,
          "line": 320,
          "utf16Column": 0,
          "utf16Offset": 11215
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SignUpController/CHCRegisterController.m",
      "fileSnippet": "-(void)addPhotoPressed",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns about Objective-C methods to which no references are found.</p> <p>This rule will not warn about <code class=\"fauxpas-codesymbol\">IBAction</code> methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form <code class=\"fauxpas-string\">*+Private.h</code>). It also won’t warn about unused getter methods whose setter is used, and vice versa.</p>",
        "ruleName": "Possibly unused Objective-C method",
        "ruleShortName": "UnusedMethod",
        "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool)."
      },
      "identifier": "-[CHCRegisterController addPhotoPressed]",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns about Objective-C methods to which no references are found. This rule will not warn about IBAction methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form *+Private.h). It also won’t warn about unused getter methods whose setter is used, and vice versa.",
      "ruleName": "Possibly unused Objective-C method",
      "ruleShortName": "UnusedMethod",
      "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool).",
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "RegistrationSurveyController",
      "extent": {
        "end": {
          "byteColumn": 58,
          "byteOffset": 10450,
          "line": 297,
          "utf16Column": 57,
          "utf16Offset": 10449
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 10393,
          "line": 297,
          "utf16Column": 0,
          "utf16Offset": 10392
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SurveysController/RegistrationSurveyController.m",
      "fileSnippet": "- (void)czpickerViewDidDisplay:(CZPickerView *)pickerView",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">czpicker</code> in the symbol name <code class=\"fauxpas-codesymbol\">czpickerViewDidDisplay:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "czpicker",
      "impact": "Style",
      "info": "The word czpicker in the symbol name czpickerViewDidDisplay: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "getLength:",
      "extent": {
        "end": {
          "byteColumn": 91,
          "byteOffset": 15500,
          "line": 425,
          "utf16Column": 90,
          "utf16Offset": 15499
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 15414,
          "line": 425,
          "utf16Column": 4,
          "utf16Offset": 15413
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SignUpController/CHCRegisterController.m",
      "fileSnippet": "mobileNumber = [mobileNumber stringByReplacingOccurrencesOfString:@\")\" withString:@\"\"]",
      "html": {
        "info": null,
        "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
        "ruleName": "Modifying the value of an argument variable",
        "ruleShortName": "ArgumentModification",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
      "ruleName": "Modifying the value of an argument variable",
      "ruleShortName": "ArgumentModification",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 58,
          "byteOffset": 699,
          "line": 22,
          "utf16Column": 57,
          "utf16Offset": 699
        },
        "start": {
          "byteColumn": 47,
          "byteOffset": 688,
          "line": 22,
          "utf16Column": 46,
          "utf16Offset": 688
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCArticleArchiveController.m",
      "fileSnippet": "articlelist",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">articlelist</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "articlelist",
      "impact": "Style",
      "info": "The word articlelist may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "ProgressView",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 3525,
          "line": 125,
          "utf16Column": 45,
          "utf16Offset": 3525
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 3292,
          "line": 120,
          "utf16Column": 0,
          "utf16Offset": 3292
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/ProgressView/ProgressView.m",
      "fileSnippet": "- (UIBezierPath *)drawStarBezierAt:(CGFloat)x\n                            yPoint:(CGFloat)y\n                            radius:(CGFloat)rad\n                             sides:(NSInteger)s\n                        pointyness:(CGFloat)p",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">pointyness</code> in the symbol name <code class=\"fauxpas-codesymbol\">drawStarBezierAt:yPoint:radius:sides:pointyness:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "pointyness",
      "impact": "Style",
      "info": "The word pointyness in the symbol name drawStarBezierAt:yPoint:radius:sides:pointyness: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "UserModel",
      "extent": {
        "end": {
          "byteColumn": 50,
          "byteOffset": 402,
          "line": 17,
          "utf16Column": 49,
          "utf16Offset": 401
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 353,
          "line": 17,
          "utf16Column": 0,
          "utf16Offset": 352
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/UserModel.h",
      "fileSnippet": "@property (nonatomic, strong) NSString* firstName",
      "html": {
        "info": "The <code>firstName</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The firstName property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 61,
          "byteOffset": 461,
          "line": 14,
          "utf16Column": 60,
          "utf16Offset": 461
        },
        "start": {
          "byteColumn": 49,
          "byteOffset": 449,
          "line": 14,
          "utf16Column": 48,
          "utf16Offset": 449
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCArticleScreen/CHCArticleController.m",
      "fileSnippet": "choicepoints",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">Choicepoints</code> in the symbol name <code class=\"fauxpas-codesymbol\">setChoicepoints:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "Choicepoints",
      "impact": "Style",
      "info": "The word Choicepoints in the symbol name setChoicepoints: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 18,
          "byteOffset": 21,
          "line": 2,
          "utf16Column": 18,
          "utf16Offset": 21
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 3,
          "line": 2,
          "utf16Column": 0,
          "utf16Offset": 3
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/Categories/IQNSArray+Sort.m",
      "fileSnippet": "//  NSArray+Sort.m",
      "html": {
        "info": "The file name in the source file header comment (<code class=\"fauxpas-string\">NSArray+Sort.m</code>) does not match the actual file name (<code class=\"fauxpas-string\">IQNSArray+Sort.m</code>).",
        "ruleDescription": "Warns about errors in source file header comments (that are formatted using the default Xcode template), for example if the file name in the comment does not match the actual file name, or if the placeholder <code class=\"fauxpas-string\">__MyCompanyName__</code> is present.",
        "ruleName": "Source file header comment format",
        "ruleShortName": "SourceFileHeaderComment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": "The file name in the source file header comment (NSArray+Sort.m) does not match the actual file name (IQNSArray+Sort.m).",
      "ruleDescription": "Warns about errors in source file header comments (that are formatted using the default Xcode template), for example if the file name in the comment does not match the actual file name, or if the placeholder __MyCompanyName__ is present.",
      "ruleName": "Source file header comment format",
      "ruleShortName": "SourceFileHeaderComment",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIButton</code> (id <code class=\"fauxpas-string\">GJC-lG-Ovp</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIButton (id GJC-lG-Ovp)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIButton (id GJC-lG-Ovp) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIButton</code> (id <code class=\"fauxpas-string\">QLt-X7-aW2</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIButton (id QLt-X7-aW2)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIButton (id QLt-X7-aW2) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/PointsRewardsController/PointsRewardsCell.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initWithCoder:",
      "extent": {
        "end": {
          "byteColumn": 75,
          "byteOffset": 2657,
          "line": 68,
          "utf16Column": 74,
          "utf16Offset": 2656
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 2587,
          "line": 68,
          "utf16Column": 4,
          "utf16Offset": 2586
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/UserModel.m",
      "fileSnippet": "self.phoneNumber        = [aDecoder decodeObjectForKey:@\"phoneNumber\"]",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "phoneNumber",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "CHCHealthLogSurveyDetails",
      "extent": {
        "end": {
          "byteColumn": 49,
          "byteOffset": 343,
          "line": 14,
          "utf16Column": 48,
          "utf16Offset": 343
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 295,
          "line": 14,
          "utf16Column": 0,
          "utf16Offset": 295
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCHealthLogSurveyDetails.h",
      "fileSnippet": "@property (nonatomic, strong) NSString *subTitle",
      "html": {
        "info": "The <code>subTitle</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The subTitle property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIButton</code> (id <code class=\"fauxpas-string\">JOu-aM-OJZ</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIButton (id JOu-aM-OJZ)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIButton (id JOu-aM-OJZ) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIButton</code> (id <code class=\"fauxpas-string\">GEO-ag-TaE</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIButton (id GEO-ag-TaE)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIButton (id GEO-ag-TaE) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCWeekDayCell.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "IQ_UIView_Hierarchy",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 3017,
          "line": 77,
          "utf16Column": 34,
          "utf16Offset": 3017
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 2983,
          "line": 76,
          "utf16Column": 0,
          "utf16Offset": 2983
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/Categories/IQUIView+Hierarchy.m",
      "fileSnippet": "-(UIViewController*)viewController",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "-[UIView viewController]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIButton</code> (id <code class=\"fauxpas-string\">MDl-yJ-kdf</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIButton (id MDl-yJ-kdf)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIButton (id MDl-yJ-kdf) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/SWRevealViewController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 50,
          "byteOffset": 2261,
          "line": 58,
          "utf16Column": 49,
          "utf16Offset": 2261
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 2212,
          "line": 58,
          "utf16Column": 0,
          "utf16Offset": 2212
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCAppointmentDetailsController.m",
      "fileSnippet": "@property (strong, nonatomic) NSString *dayofweek",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">dayofweek</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "dayofweek",
      "impact": "Style",
      "info": "The word dayofweek may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIButton</code> (id <code class=\"fauxpas-string\">oBg-Ju-UDp</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIButton (id oBg-Ju-UDp)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIButton (id oBg-Ju-UDp) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "DashboardViewController",
      "extent": {
        "end": {
          "byteColumn": 27,
          "byteOffset": 2333,
          "line": 75,
          "utf16Column": 26,
          "utf16Offset": 2332
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 2307,
          "line": 75,
          "utf16Column": 0,
          "utf16Offset": 2306
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/DashboardViewController/DashboardViewController.m",
      "fileSnippet": "-(void)scheduledApponitmen",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">Apponitment</code> in the symbol name <code class=\"fauxpas-codesymbol\">scheduledApponitment</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "Apponitment",
      "impact": "Style",
      "info": "The word Apponitment in the symbol name scheduledApponitment may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 79,
          "byteOffset": 10932,
          "line": 240,
          "utf16Column": 78,
          "utf16Offset": 10932
        },
        "start": {
          "byteColumn": 66,
          "byteOffset": 10919,
          "line": 240,
          "utf16Column": 65,
          "utf16Offset": 10919
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCAppointmentDetailsController.m",
      "fileSnippet": "@\"inputImage\"",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns when literal strings are used to specify key paths.</p> <p>Something like <code>NSStringFromSelector(@selector(foo))</code> is safer because it makes the compiler aware of the selector being specified — this helps find typos at compile time and allows automatic refactoring tools to make appropriate changes.</p>",
        "ruleName": "Literal string for key path",
        "ruleShortName": "LiteralStringKeyPath",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when literal strings are used to specify key paths. Something like NSStringFromSelector(@selector(foo)) is safer because it makes the compiler aware of the selector being specified — this helps find typos at compile time and allows automatic refactoring tools to make appropriate changes.",
      "ruleName": "Literal string for key path",
      "ruleShortName": "LiteralStringKeyPath",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/checkmark@2x.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 56,
          "byteOffset": 715,
          "line": 28,
          "utf16Column": 55,
          "utf16Offset": 715
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 606,
          "line": 27,
          "utf16Column": 0,
          "utf16Offset": 606
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/CZPickerView.h",
      "fileSnippet": "- (NSString *)czpickerView:(CZPickerView *)pickerView\n                            titleForRow:(NSInteger)row;",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">czpicker</code> in the symbol name <code class=\"fauxpas-codesymbol\">czpickerView:titleForRow:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "czpicker",
      "impact": "Style",
      "info": "The word czpicker in the symbol name czpickerView:titleForRow: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initWithDictionary:",
      "extent": {
        "end": {
          "byteColumn": 59,
          "byteOffset": 624,
          "line": 23,
          "utf16Column": 58,
          "utf16Offset": 624
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 574,
          "line": 23,
          "utf16Column": 8,
          "utf16Offset": 574
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCArticleDetails.m",
      "fileSnippet": "self.articleSnippet =[dict valueForKey:@\"snippet\"]",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "articleSnippet",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "RegistrationSurveyController",
      "extent": {
        "end": {
          "byteColumn": 59,
          "byteOffset": 10549,
          "line": 301,
          "utf16Column": 58,
          "utf16Offset": 10548
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 10491,
          "line": 301,
          "utf16Column": 0,
          "utf16Offset": 10490
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SurveysController/RegistrationSurveyController.m",
      "fileSnippet": "- (void)czpickerViewWillDismiss:(CZPickerView *)pickerView",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">czpicker</code> in the symbol name <code class=\"fauxpas-codesymbol\">czpickerViewWillDismiss:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "czpicker",
      "impact": "Style",
      "info": "The word czpicker in the symbol name czpickerViewWillDismiss: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/ScheduleAppointmentView.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/drawable-large/addressMarker@2x.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 58,
          "byteOffset": 643,
          "line": 25,
          "utf16Column": 57,
          "utf16Offset": 642
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 586,
          "line": 25,
          "utf16Column": 0,
          "utf16Offset": 585
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyProfileViewController/MyProfileController.m",
      "fileSnippet": "@property (weak, nonatomic) IBOutlet UITextField *fnameTF",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">fname</code> in the symbol name <code class=\"fauxpas-codesymbol\">fnameTF</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "fname",
      "impact": "Style",
      "info": "The word fname in the symbol name fnameTF may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initWithCoder:",
      "extent": {
        "end": {
          "byteColumn": 35,
          "byteOffset": 4068,
          "line": 95,
          "utf16Column": 34,
          "utf16Offset": 4067
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 4042,
          "line": 95,
          "utf16Column": 8,
          "utf16Offset": 4041
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/UserModel.m",
      "fileSnippet": "self.profileImageURL = nil",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "profileImageURL",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 51,
          "byteOffset": 240,
          "line": 11,
          "utf16Column": 51,
          "utf16Offset": 239
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 189,
          "line": 11,
          "utf16Column": 0,
          "utf16Offset": 188
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/DoctorSearchResultCell.h",
      "fileSnippet": "@interface DoctorSearchResultCell : UITableViewCell",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "DoctorSearchResultCell",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCHealthLogScreen/CHCHealthLogNewController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": "SurveysViewController",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 2134,
          "line": 67,
          "utf16Column": 109,
          "utf16Offset": 2133
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 2025,
          "line": 66,
          "utf16Column": 0,
          "utf16Offset": 2024
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SurveysController/SurveysViewController.m",
      "fileSnippet": "- (void)tableView:(UITableView *)tableView willDisplayHeaderView:(UIView *)view forSection:(NSInteger)section",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns about Objective-C methods to which no references are found.</p> <p>This rule will not warn about <code class=\"fauxpas-codesymbol\">IBAction</code> methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form <code class=\"fauxpas-string\">*+Private.h</code>). It also won’t warn about unused getter methods whose setter is used, and vice versa.</p>",
        "ruleName": "Possibly unused Objective-C method",
        "ruleShortName": "UnusedMethod",
        "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool)."
      },
      "identifier": "-[SurveysViewController tableView:willDisplayHeaderView:forSection:]",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns about Objective-C methods to which no references are found. This rule will not warn about IBAction methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form *+Private.h). It also won’t warn about unused getter methods whose setter is used, and vice versa.",
      "ruleName": "Possibly unused Objective-C method",
      "ruleShortName": "UnusedMethod",
      "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool).",
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": "CHCAppointmentDetailsController",
      "extent": {
        "end": {
          "byteColumn": 42,
          "byteOffset": 6918,
          "line": 163,
          "utf16Column": 41,
          "utf16Offset": 6918
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 6877,
          "line": 163,
          "utf16Column": 0,
          "utf16Offset": 6877
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCAppointmentDetailsController.m",
      "fileSnippet": "- (void)updateButtonView:(UIButton*)butto",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns about Objective-C methods to which no references are found.</p> <p>This rule will not warn about <code class=\"fauxpas-codesymbol\">IBAction</code> methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form <code class=\"fauxpas-string\">*+Private.h</code>). It also won’t warn about unused getter methods whose setter is used, and vice versa.</p>",
        "ruleName": "Possibly unused Objective-C method",
        "ruleShortName": "UnusedMethod",
        "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool)."
      },
      "identifier": "-[CHCAppointmentDetailsController updateButtonView:]",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns about Objective-C methods to which no references are found. This rule will not warn about IBAction methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form *+Private.h). It also won’t warn about unused getter methods whose setter is used, and vice versa.",
      "ruleName": "Possibly unused Objective-C method",
      "ruleShortName": "UnusedMethod",
      "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool).",
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/DoctorSearchResultCell.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/AppIcon/80x80.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/AppIcon/80x80.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/menu-icon2.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/menu-icon2.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": "TextDirectionality",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 20566,
          "line": 47,
          "utf16Column": 35,
          "utf16Offset": 20566
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 20531,
          "line": 46,
          "utf16Column": 0,
          "utf16Offset": 20531
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SignUpController/NSString+TextDirectionality.m",
      "fileSnippet": "- (JVTextDirection)getBaseDirection",
      "html": {
        "info": "In Cocoa, it is idiomatic for accessor methods to be named in the form <code>something</code> instead of e.g. <code>getSomething</code>.",
        "ruleDescription": "Warns if getter methods are named in the form <code>getSomething</code> instead of <code>something</code>.",
        "ruleName": "Unidiomatic accessor naming",
        "ruleShortName": "UnidiomaticAccessorNaming",
        "ruleWarning": null
      },
      "identifier": "-[NSString getBaseDirection]",
      "impact": "Style",
      "info": "In Cocoa, it is idiomatic for accessor methods to be named in the form something instead of e.g. getSomething.",
      "ruleDescription": "Warns if getter methods are named in the form getSomething instead of something.",
      "ruleName": "Unidiomatic accessor naming",
      "ruleShortName": "UnidiomaticAccessorNaming",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 41,
          "byteOffset": 1957,
          "line": 56,
          "utf16Column": 40,
          "utf16Offset": 1957
        },
        "start": {
          "byteColumn": 33,
          "byteOffset": 1949,
          "line": 56,
          "utf16Column": 32,
          "utf16Offset": 1949
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCSurveyScreen/CHCSurveyController.m",
      "fileSnippet": "answerid",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">answerid</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "answerid",
      "impact": "Style",
      "info": "The word answerid may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 55,
          "byteOffset": 3231,
          "line": 85,
          "utf16Column": 54,
          "utf16Offset": 3231
        },
        "start": {
          "byteColumn": 42,
          "byteOffset": 3218,
          "line": 85,
          "utf16Column": 41,
          "utf16Offset": 3218
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCHomeController.m",
      "fileSnippet": "@\"inputImage\"",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns when literal strings are used to specify key paths.</p> <p>Something like <code>NSStringFromSelector(@selector(foo))</code> is safer because it makes the compiler aware of the selector being specified — this helps find typos at compile time and allows automatic refactoring tools to make appropriate changes.</p>",
        "ruleName": "Literal string for key path",
        "ruleShortName": "LiteralStringKeyPath",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when literal strings are used to specify key paths. Something like NSStringFromSelector(@selector(foo)) is safer because it makes the compiler aware of the selector being specified — this helps find typos at compile time and allows automatic refactoring tools to make appropriate changes.",
      "ruleName": "Literal string for key path",
      "ruleShortName": "LiteralStringKeyPath",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> <code class=\"fauxpas-string\">Thank you for registering</code> (id <code class=\"fauxpas-string\">eQO-Yj-LEO</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel Thank you for registering (id eQO-Yj-LEO)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel Thank you for registering (id eQO-Yj-LEO) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 58,
          "byteOffset": 14605,
          "line": 269,
          "utf16Column": 58,
          "utf16Offset": 14605
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 14547,
          "line": 269,
          "utf16Column": 0,
          "utf16Offset": 14547
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/SWRevealViewController.h",
      "fileSnippet": "@interface SWRevealViewControllerSegue : UIStoryboardSegue",
      "html": {
        "info": "The <code class=\"fauxpas-string\">SW</code> prefix is used. Two-character prefixes are reserved for Apple’s system frameworks. The prefixes in your own (or third-party) code should be at least three characters long.",
        "ruleDescription": "Two-character prefixes (such as <code>NS</code>) are reserved for Apple’s system frameworks. Your own code should use prefixes that are three characters long.",
        "ruleName": "Reserved symbol prefix",
        "ruleShortName": "ReservedPrefix",
        "ruleWarning": null
      },
      "identifier": "SW",
      "impact": "Maintainability",
      "info": "The SW prefix is used. Two-character prefixes are reserved for Apple’s system frameworks. The prefixes in your own (or third-party) code should be at least three characters long.",
      "ruleDescription": "Two-character prefixes (such as NS) are reserved for Apple’s system frameworks. Your own code should use prefixes that are three characters long.",
      "ruleName": "Reserved symbol prefix",
      "ruleShortName": "ReservedPrefix",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Images.xcassets/Dashboard/articles-icon.imageset/book-with-white-bookmark-1.png",
      "fileSnippet": null,
      "html": {
        "info": "Asset catalog ‘Images’, set ‘articles-icon’: <div class=\"fauxpas-filename\">book-with-white-bookmark-1.png</div> (x2 scale) resolution (256 x 256) should be 512 x 512.",
        "ruleDescription": "The retina (‘@2x’ or ‘@3x’) version of an image resource must be exactly double or triple the size of the corresponding low-resolution image (assuming the point size of the presentation context remains the same regardless of screen resolution). Otherwise the effective resolution of the image will not match the effective resolution of its presentation context, which will lead to a blurry image, empty space at the edges, or overflow.",
        "ruleName": "Unexpected retina image resolution",
        "ruleShortName": "RetinaImagesResolution",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "Asset catalog ‘Images’, set ‘articles-icon’: book-with-white-bookmark-1.png (x2 scale) resolution (256 x 256) should be 512 x 512.",
      "ruleDescription": "The retina (‘@2x’ or ‘@3x’) version of an image resource must be exactly double or triple the size of the corresponding low-resolution image (assuming the point size of the presentation context remains the same regardless of screen resolution). Otherwise the effective resolution of the image will not match the effective resolution of its presentation context, which will lead to a blurry image, empty space at the edges, or overflow.",
      "ruleName": "Unexpected retina image resolution",
      "ruleShortName": "RetinaImagesResolution",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCHome.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> <code class=\"fauxpas-string\">Wellness Milestones</code> (id <code class=\"fauxpas-string\">haY-on-dlT</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel Wellness Milestones (id haY-on-dlT)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel Wellness Milestones (id haY-on-dlT) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "CHCArticleDetails",
      "extent": {
        "end": {
          "byteColumn": 49,
          "byteOffset": 324,
          "line": 14,
          "utf16Column": 48,
          "utf16Offset": 324
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 276,
          "line": 14,
          "utf16Column": 0,
          "utf16Offset": 276
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCArticleDetails.h",
      "fileSnippet": "@property (nonatomic, strong) NSString *answerId",
      "html": {
        "info": "The <code>answerId</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The answerId property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 40,
          "byteOffset": 1998,
          "line": 57,
          "utf16Column": 39,
          "utf16Offset": 1998
        },
        "start": {
          "byteColumn": 33,
          "byteOffset": 1991,
          "line": 57,
          "utf16Column": 32,
          "utf16Offset": 1991
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCSurveyScreen/CHCSurveyController.m",
      "fileSnippet": "orderid",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">Orderid</code> in the symbol name <code class=\"fauxpas-codesymbol\">setOrderid:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "Orderid",
      "impact": "Style",
      "info": "The word Orderid in the symbol name setOrderid: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "RegistrationSurveyController",
      "extent": {
        "end": {
          "byteColumn": 51,
          "byteOffset": 1096,
          "line": 29,
          "utf16Column": 50,
          "utf16Offset": 1095
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 1046,
          "line": 29,
          "utf16Column": 0,
          "utf16Offset": 1045
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SurveysController/RegistrationSurveyController.h",
      "fileSnippet": "@property (strong, nonatomic) NSString *userHeight",
      "html": {
        "info": "The <code>userHeight</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The userHeight property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreenNew/HomeScreenNewContentViews/CHCAdditionalInfoNewCell.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "currentUser",
      "extent": {
        "end": {
          "byteColumn": 43,
          "byteOffset": 6047,
          "line": 143,
          "utf16Column": 42,
          "utf16Offset": 6046
        },
        "start": {
          "byteColumn": 26,
          "byteOffset": 6030,
          "line": 143,
          "utf16Column": 25,
          "utf16Offset": 6029
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/UserModel.m",
      "fileSnippet": "[UserModel alloc]",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. <code>[FOOThing alloc]</code>.</p> <p>It is recommended to use <code class=\"fauxpas-codesymbol\">self</code> instead (e.g. <code>[self alloc]</code> or <code>[[self class] alloc]</code>) so that the concrete class would receive the message, and subclassing behavior would not be impeded.</p>",
        "ruleName": "Hardcoded self class reference",
        "ruleShortName": "HardcodedSelfClass",
        "ruleWarning": null
      },
      "identifier": "UserModel",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. [FOOThing alloc]. It is recommended to use self instead (e.g. [self alloc] or [[self class] alloc]) so that the concrete class would receive the message, and subclassing behavior would not be impeded.",
      "ruleName": "Hardcoded self class reference",
      "ruleShortName": "HardcodedSelfClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/drawable/evening.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/drawable/evening.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": "dismissWithCompletion:",
      "extent": {
        "end": {
          "byteColumn": 56,
          "byteOffset": 3930,
          "line": 98,
          "utf16Column": 55,
          "utf16Offset": 3930
        },
        "start": {
          "byteColumn": 31,
          "byteOffset": 3905,
          "line": 98,
          "utf16Column": 30,
          "utf16Offset": 3905
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/IQActionSheetViewController.m",
      "fileSnippet": "void (^)(void))completion",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended that typedef be used for all block-typed declarations, for readability.",
        "ruleName": "Block-typed declaration without typedef",
        "ruleShortName": "NonTypedefBlockDeclaration",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": null,
      "ruleDescription": "It is recommended that typedef be used for all block-typed declarations, for readability.",
      "ruleName": "Block-typed declaration without typedef",
      "ruleShortName": "NonTypedefBlockDeclaration",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "RegistrationSurveyController",
      "extent": {
        "end": {
          "byteColumn": 55,
          "byteOffset": 1152,
          "line": 30,
          "utf16Column": 54,
          "utf16Offset": 1151
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 1098,
          "line": 30,
          "utf16Column": 0,
          "utf16Offset": 1097
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SurveysController/RegistrationSurveyController.h",
      "fileSnippet": "@property (strong, nonatomic) NSString *nationalityQId",
      "html": {
        "info": "The <code>nationalityQId</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The nationalityQId property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 58,
          "byteOffset": 643,
          "line": 25,
          "utf16Column": 57,
          "utf16Offset": 642
        },
        "start": {
          "byteColumn": 51,
          "byteOffset": 636,
          "line": 25,
          "utf16Column": 50,
          "utf16Offset": 635
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyProfileViewController/MyProfileController.m",
      "fileSnippet": "fnameTF",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">Fname</code> in the symbol name <code class=\"fauxpas-codesymbol\">setFnameTF:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "Fname",
      "impact": "Style",
      "info": "The word Fname in the symbol name setFnameTF: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "instructionButtonClicked:",
      "extent": {
        "end": {
          "byteColumn": 157,
          "byteOffset": 1701,
          "line": 59,
          "utf16Column": 156,
          "utf16Offset": 1700
        },
        "start": {
          "byteColumn": 46,
          "byteOffset": 1590,
          "line": 59,
          "utf16Column": 45,
          "utf16Offset": 1589
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/HEDISViewController/HEDISViewController.m",
      "fileSnippet": "[[InstructionsViewController alloc] initWithNibName:@\"InstructionsViewController\" bundle:[NSBundle mainBundle]]",
      "html": {
        "info": "Instantiating <code class=\"fauxpas-objcclass\">InstructionsViewController</code> outside its implementation with literal NIB name <code class=\"fauxpas-string\">InstructionsViewController</code>",
        "ruleDescription": "It is not advisable to use <code class=\"fauxpas-objcmethod\">-[UIViewController initWithNibName:bundle:]</code> to instantiate <code class=\"fauxpas-objcclass\">UIViewController</code> subclasses outside of the subclass implementation itself. This breaks encapsulation (the subclass should be the one to decide which NIB to use) and makes it more likely that a typo in the NIB name string will crash the app during runtime.",
        "ruleName": "Using <code class=\"fauxpas-objcmethod\">-[UIViewController initWithNibName:bundle:]</code> outside the <code class=\"fauxpas-objcclass\">UIViewController</code> implementation",
        "ruleShortName": "ViewControllerInitWithNibName",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": "Instantiating InstructionsViewController outside its implementation with literal NIB name InstructionsViewController",
      "ruleDescription": "It is not advisable to use -[UIViewController initWithNibName:bundle:] to instantiate UIViewController subclasses outside of the subclass implementation itself. This breaks encapsulation (the subclass should be the one to decide which NIB to use) and makes it more likely that a typo in the NIB name string will crash the app during runtime.",
      "ruleName": "Using -[UIViewController initWithNibName:bundle:] outside the UIViewController implementation",
      "ruleShortName": "ViewControllerInitWithNibName",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "tableView:cellForRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 34,
          "byteOffset": 3929,
          "line": 126,
          "utf16Column": 33,
          "utf16Offset": 3928
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 3900,
          "line": 126,
          "utf16Column": 4,
          "utf16Offset": 3899
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/MyAppointmentsController.m",
      "fileSnippet": "df.dateFormat = @\"MM/dd/yyyy\"",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns when an <code class=\"fauxpas-objcclass\">NSDateFormatter</code> is used with fixed-format dates without using the invariant <code class=\"fauxpas-string\">en_US_POSIX</code> locale. If any other locale is used, the date format string may be overwritten, depending on system date and time settings.</p> <p>When working with user-visible dates, date and time styles should be used instead of setting a date format.</p>",
        "ruleName": "Fixed-format <code class=\"fauxpas-objcclass\">NSDateFormatter</code> not using invariant (POSIX) locale",
        "ruleShortName": "FixedFormatDateFormatter",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Warns when an NSDateFormatter is used with fixed-format dates without using the invariant en_US_POSIX locale. If any other locale is used, the date format string may be overwritten, depending on system date and time settings. When working with user-visible dates, date and time styles should be used instead of setting a date format.",
      "ruleName": "Fixed-format NSDateFormatter not using invariant (POSIX) locale",
      "ruleShortName": "FixedFormatDateFormatter",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/AppIcon/120x120.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/AppIcon/120x120.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initWithHeaderTitle:cancelButtonTitle:confirmButtonTitle:",
      "extent": {
        "end": {
          "byteColumn": 117,
          "byteOffset": 2324,
          "line": 63,
          "utf16Column": 116,
          "utf16Offset": 2324
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 2216,
          "line": 63,
          "utf16Column": 8,
          "utf16Offset": 2216
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/CZPickerView.m",
      "fileSnippet": "self.confirmButtonHighlightedColor = [UIColor colorWithRed:236.0/255 green:240/255.0 blue:241.0/255 alpha:1]",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "confirmButtonHighlightedColor",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 58,
          "byteOffset": 699,
          "line": 22,
          "utf16Column": 57,
          "utf16Offset": 699
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 642,
          "line": 22,
          "utf16Column": 0,
          "utf16Offset": 642
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCArticleArchiveController.m",
      "fileSnippet": "@property (strong, nonatomic) NSMutableArray *articlelist",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">articlelist</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "articlelist",
      "impact": "Style",
      "info": "The word articlelist may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initWithReachabilityRef:",
      "extent": {
        "end": {
          "byteColumn": 35,
          "byteOffset": 5546,
          "line": 167,
          "utf16Column": 34,
          "utf16Offset": 5546
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 5520,
          "line": 167,
          "utf16Column": 8,
          "utf16Offset": 5520
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/APIModel/Reachability.m",
      "fileSnippet": "self.reachableOnWWAN = YES",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "reachableOnWWAN",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/star.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/star.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyMedicationsController/CreateMedicationView.xib",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UITextField</code> (id <code class=\"fauxpas-string\">9Ti-3U-A69</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UITextField (id 9Ti-3U-A69)",
      "impact": "Maintainability",
      "info": "Misplaced view: UITextField (id 9Ti-3U-A69) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyMedicationsController/CreateMedicationView.xib",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UITextField</code> (id <code class=\"fauxpas-string\">SMk-aB-iDD</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UITextField (id SMk-aB-iDD)",
      "impact": "Maintainability",
      "info": "Misplaced view: UITextField (id SMk-aB-iDD) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initWithCoder:",
      "extent": {
        "end": {
          "byteColumn": 72,
          "byteOffset": 2885,
          "line": 72,
          "utf16Column": 71,
          "utf16Offset": 2884
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 2818,
          "line": 72,
          "utf16Column": 4,
          "utf16Offset": 2817
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/UserModel.m",
      "fileSnippet": "self.password           = [aDecoder decodeObjectForKey:@\"password\"]",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "password",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SignUpController/CHCSignUpController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": "showPickerView:completion:",
      "extent": {
        "end": {
          "byteColumn": 97,
          "byteOffset": 2346,
          "line": 60,
          "utf16Column": 96,
          "utf16Offset": 2346
        },
        "start": {
          "byteColumn": 72,
          "byteOffset": 2321,
          "line": 60,
          "utf16Column": 71,
          "utf16Offset": 2321
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/IQActionSheetViewController.m",
      "fileSnippet": "void (^)(void))completion",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended that typedef be used for all block-typed declarations, for readability.",
        "ruleName": "Block-typed declaration without typedef",
        "ruleShortName": "NonTypedefBlockDeclaration",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": null,
      "ruleDescription": "It is recommended that typedef be used for all block-typed declarations, for readability.",
      "ruleName": "Block-typed declaration without typedef",
      "ruleShortName": "NonTypedefBlockDeclaration",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initWithCoder:",
      "extent": {
        "end": {
          "byteColumn": 48,
          "byteOffset": 2143,
          "line": 59,
          "utf16Column": 47,
          "utf16Offset": 2143
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 2108,
          "line": 59,
          "utf16Column": 12,
          "utf16Offset": 2108
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SignUpController/JVFloatLabeledTextView.m",
      "fileSnippet": "self.placeholder = self.placeholder",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "placeholder",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "IQToolbarAddition",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 26381,
          "line": 582,
          "utf16Column": 207,
          "utf16Offset": 26381
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 26174,
          "line": 581,
          "utf16Column": 0,
          "utf16Offset": 26174
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/IQToolbar/IQUIView+IQKeyboardToolbar.m",
      "fileSnippet": "- (void)addPreviousNextRightOnKeyboardWithTarget:(id)target rightButtonTitle:(NSString*)rightButtonTitle previousAction:(SEL)previousAction nextAction:(SEL)nextAction rightButtonAction:(SEL)rightButtonAction",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "-[UIView addPreviousNextRightOnKeyboardWithTarget:rightButtonTitle:previousAction:nextAction:rightButtonAction:]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> <code class=\"fauxpas-string\">REGISTER</code> (id <code class=\"fauxpas-string\">dy4-dn-1LS</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel REGISTER (id dy4-dn-1LS)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel REGISTER (id dy4-dn-1LS) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/ScheduleAppointmentView.xib",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIButton</code> (id <code class=\"fauxpas-string\">j20-yL-zBy</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIButton (id j20-yL-zBy)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIButton (id j20-yL-zBy) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/ScheduleAppointmentView.xib",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIButton</code> (id <code class=\"fauxpas-string\">cuA-6d-3LJ</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIButton (id cuA-6d-3LJ)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIButton (id cuA-6d-3LJ) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 34,
          "byteOffset": 211,
          "line": 11,
          "utf16Column": 34,
          "utf16Offset": 210
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 177,
          "line": 11,
          "utf16Column": 0,
          "utf16Offset": 176
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/ArticleModel.h",
      "fileSnippet": "@interface ArticleModel : NSObject",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "ArticleModel",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/DoctorModel.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "IQToolbar",
      "extent": {
        "end": {
          "byteColumn": 55,
          "byteOffset": 1492,
          "line": 39,
          "utf16Column": 54,
          "utf16Offset": 1492
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 1438,
          "line": 39,
          "utf16Column": 0,
          "utf16Offset": 1438
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/IQToolbar/IQToolbar.h",
      "fileSnippet": "@property(nullable, nonatomic, strong) NSString *title",
      "html": {
        "info": "The <code>title</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The title property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "viewWillAppear:",
      "extent": {
        "end": {
          "byteColumn": 46,
          "byteOffset": 2341,
          "line": 69,
          "utf16Column": 45,
          "utf16Offset": 2340
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 2304,
          "line": 69,
          "utf16Column": 8,
          "utf16Offset": 2303
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyProfileViewController/MyProfileController.m",
      "fileSnippet": "dateFormat.dateFormat = @\"yyyy-MM-dd\"",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns when an <code class=\"fauxpas-objcclass\">NSDateFormatter</code> is used with fixed-format dates without using the invariant <code class=\"fauxpas-string\">en_US_POSIX</code> locale. If any other locale is used, the date format string may be overwritten, depending on system date and time settings.</p> <p>When working with user-visible dates, date and time styles should be used instead of setting a date format.</p>",
        "ruleName": "Fixed-format <code class=\"fauxpas-objcclass\">NSDateFormatter</code> not using invariant (POSIX) locale",
        "ruleShortName": "FixedFormatDateFormatter",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Warns when an NSDateFormatter is used with fixed-format dates without using the invariant en_US_POSIX locale. If any other locale is used, the date format string may be overwritten, depending on system date and time settings. When working with user-visible dates, date and time styles should be used instead of setting a date format.",
      "ruleName": "Fixed-format NSDateFormatter not using invariant (POSIX) locale",
      "ruleShortName": "FixedFormatDateFormatter",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/drawable-hdpi/ab_solid_app_theme.9.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/drawable-hdpi/ab_solid_app_theme.9.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": "Utils",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 987,
          "line": 40,
          "utf16Column": 52,
          "utf16Offset": 986
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 935,
          "line": 39,
          "utf16Column": 0,
          "utf16Offset": 934
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Utils/Utils.m",
      "fileSnippet": "-(BOOL) NSStringIsValidEmail:(NSString *)checkString",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns about Objective-C methods to which no references are found.</p> <p>This rule will not warn about <code class=\"fauxpas-codesymbol\">IBAction</code> methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form <code class=\"fauxpas-string\">*+Private.h</code>). It also won’t warn about unused getter methods whose setter is used, and vice versa.</p>",
        "ruleName": "Possibly unused Objective-C method",
        "ruleShortName": "UnusedMethod",
        "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool)."
      },
      "identifier": "-[Utils NSStringIsValidEmail:]",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns about Objective-C methods to which no references are found. This rule will not warn about IBAction methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form *+Private.h). It also won’t warn about unused getter methods whose setter is used, and vice versa.",
      "ruleName": "Possibly unused Objective-C method",
      "ruleShortName": "UnusedMethod",
      "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool).",
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "init",
      "extent": {
        "end": {
          "byteColumn": 64,
          "byteOffset": 1515,
          "line": 52,
          "utf16Column": 63,
          "utf16Offset": 1515
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 1460,
          "line": 52,
          "utf16Column": 8,
          "utf16Offset": 1460
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/APIModel/ConnectionManager.m",
      "fileSnippet": "connectionRequired = [internetReach ConnectionRequired]",
      "html": {
        "info": null,
        "ruleDescription": "<p>Writing to static variables (which is essentially global state) in instance methods is generally considered bad practice, because it easily leads to undesireable behavior when multiple instances are being manipulated.</p> <p>Warnings are suppressed for assignments occurring inside <code class=\"fauxpas-cfunction\">dispatch_once()</code> blocks.</p>",
        "ruleName": "Instance method writes to static variable",
        "ruleShortName": "InstanceMethodWritesToStaticVariable",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Writing to static variables (which is essentially global state) in instance methods is generally considered bad practice, because it easily leads to undesireable behavior when multiple instances are being manipulated. Warnings are suppressed for assignments occurring inside dispatch_once() blocks.",
      "ruleName": "Instance method writes to static variable",
      "ruleShortName": "InstanceMethodWritesToStaticVariable",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> <code class=\"fauxpas-string\">I Agree to Terms of Services.</code> (id <code class=\"fauxpas-string\">DIL-sT-py0</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel I Agree to Terms of Services. (id DIL-sT-py0)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel I Agree to Terms of Services. (id DIL-sT-py0) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/ActivityDashboardController/ActivityScaleView.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 59,
          "byteOffset": 1552,
          "line": 58,
          "utf16Column": 58,
          "utf16Offset": 1552
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 1494,
          "line": 58,
          "utf16Column": 0,
          "utf16Offset": 1494
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/CZPickerView.h",
      "fileSnippet": "- (void)czpickerViewDidDisplay:(CZPickerView *)pickerView;",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">czpicker</code> in the symbol name <code class=\"fauxpas-codesymbol\">czpickerViewDidDisplay:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "czpicker",
      "impact": "Style",
      "info": "The word czpicker in the symbol name czpickerViewDidDisplay: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCHome.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIView</code> (id <code class=\"fauxpas-string\">g4f-w4-aUR</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIView (id g4f-w4-aUR)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIView (id g4f-w4-aUR) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "AppUserData",
      "extent": {
        "end": {
          "byteColumn": 49,
          "byteOffset": 547,
          "line": 20,
          "utf16Column": 48,
          "utf16Offset": 546
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 499,
          "line": 20,
          "utf16Column": 0,
          "utf16Offset": 498
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/AppUserData/AppUserData.h",
      "fileSnippet": "@property (nonatomic, strong) NSString *password",
      "html": {
        "info": "The <code>password</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The password property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "createArticleModelWithDictionary:",
      "extent": {
        "end": {
          "byteColumn": 43,
          "byteOffset": 325,
          "line": 16,
          "utf16Column": 42,
          "utf16Offset": 324
        },
        "start": {
          "byteColumn": 26,
          "byteOffset": 308,
          "line": 16,
          "utf16Column": 25,
          "utf16Offset": 307
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/DoctorModel.m",
      "fileSnippet": "[DoctorModel new]",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. <code>[FOOThing alloc]</code>.</p> <p>It is recommended to use <code class=\"fauxpas-codesymbol\">self</code> instead (e.g. <code>[self alloc]</code> or <code>[[self class] alloc]</code>) so that the concrete class would receive the message, and subclassing behavior would not be impeded.</p>",
        "ruleName": "Hardcoded self class reference",
        "ruleShortName": "HardcodedSelfClass",
        "ruleWarning": null
      },
      "identifier": "DoctorModel",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. [FOOThing alloc]. It is recommended to use self instead (e.g. [self alloc] or [[self class] alloc]) so that the concrete class would receive the message, and subclassing behavior would not be impeded.",
      "ruleName": "Hardcoded self class reference",
      "ruleShortName": "HardcodedSelfClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/RewardsCatalogModel.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "CHCRewardsCatalogCell",
      "extent": {
        "end": {
          "byteColumn": 68,
          "byteOffset": 295,
          "line": 12,
          "utf16Column": 67,
          "utf16Offset": 295
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 228,
          "line": 12,
          "utf16Column": 0,
          "utf16Offset": 228
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCRewardsCatalogCell.h",
      "fileSnippet": "@property (strong, nonatomic) IBOutlet UIImageView *rewardimageView",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">rewardimage</code> in the symbol name <code class=\"fauxpas-codesymbol\">rewardimageView</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "rewardimage",
      "impact": "Style",
      "info": "The word rewardimage in the symbol name rewardimageView may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "Extension",
      "extent": {
        "end": {
          "byteColumn": 69,
          "byteOffset": 287,
          "line": 13,
          "utf16Column": 68,
          "utf16Offset": 286
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 219,
          "line": 13,
          "utf16Column": 0,
          "utf16Offset": 218
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Category/UIImage+Extension.m",
      "fileSnippet": "+ (UIImage *)getImageFromColor:(UIColor *)color andSize:(CGSize)size",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "+[UIImage getImageFromColor:andSize:]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 42,
          "byteOffset": 238,
          "line": 12,
          "utf16Column": 42,
          "utf16Offset": 237
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 196,
          "line": 12,
          "utf16Column": 0,
          "utf16Offset": 195
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/UserModel.h",
      "fileSnippet": "@interface UserModel : NSObject <NSCoding>",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "UserModel",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCHome.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> <code class=\"fauxpas-string\">My Profile</code> (id <code class=\"fauxpas-string\">TUJ-td-iRK</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel My Profile (id TUJ-td-iRK)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel My Profile (id TUJ-td-iRK) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "actionSheetPickerView:didSelectDate:",
      "extent": {
        "end": {
          "byteColumn": 42,
          "byteOffset": 16123,
          "line": 442,
          "utf16Column": 41,
          "utf16Offset": 16122
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 16086,
          "line": 442,
          "utf16Column": 4,
          "utf16Offset": 16085
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SignUpController/CHCRegisterController.m",
      "fileSnippet": "dateFormat.dateFormat = @\"yyyy-MM-dd\"",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns when an <code class=\"fauxpas-objcclass\">NSDateFormatter</code> is used with fixed-format dates without using the invariant <code class=\"fauxpas-string\">en_US_POSIX</code> locale. If any other locale is used, the date format string may be overwritten, depending on system date and time settings.</p> <p>When working with user-visible dates, date and time styles should be used instead of setting a date format.</p>",
        "ruleName": "Fixed-format <code class=\"fauxpas-objcclass\">NSDateFormatter</code> not using invariant (POSIX) locale",
        "ruleShortName": "FixedFormatDateFormatter",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Warns when an NSDateFormatter is used with fixed-format dates without using the invariant en_US_POSIX locale. If any other locale is used, the date format string may be overwritten, depending on system date and time settings. When working with user-visible dates, date and time styles should be used instead of setting a date format.",
      "ruleName": "Fixed-format NSDateFormatter not using invariant (POSIX) locale",
      "ruleShortName": "FixedFormatDateFormatter",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/drawable/bg_spinner.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/drawable/bg_spinner.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "setUpCellWithDictionary:tapHandler:",
      "extent": {
        "end": {
          "byteColumn": 60,
          "byteOffset": 1048,
          "line": 37,
          "utf16Column": 59,
          "utf16Offset": 1047
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 993,
          "line": 37,
          "utf16Column": 4,
          "utf16Offset": 992
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyToDoController/MyToDoCell.m",
      "fileSnippet": "formatter.dateFormat = @\"yyyy'-'MM'-'dd' 'HH':'mm':'ss\"",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns when an <code class=\"fauxpas-objcclass\">NSDateFormatter</code> is used with fixed-format dates without using the invariant <code class=\"fauxpas-string\">en_US_POSIX</code> locale. If any other locale is used, the date format string may be overwritten, depending on system date and time settings.</p> <p>When working with user-visible dates, date and time styles should be used instead of setting a date format.</p>",
        "ruleName": "Fixed-format <code class=\"fauxpas-objcclass\">NSDateFormatter</code> not using invariant (POSIX) locale",
        "ruleShortName": "FixedFormatDateFormatter",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Warns when an NSDateFormatter is used with fixed-format dates without using the invariant en_US_POSIX locale. If any other locale is used, the date format string may be overwritten, depending on system date and time settings. When working with user-visible dates, date and time styles should be used instead of setting a date format.",
      "ruleName": "Fixed-format NSDateFormatter not using invariant (POSIX) locale",
      "ruleShortName": "FixedFormatDateFormatter",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/drawable-mdpi/ic_drawer.png",
      "fileSnippet": null,
      "html": {
        "info": "This file is equal to the file <div class=\"fauxpas-filepath\">/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/drawable-mdpi/ic_drawer copy@2x.png</div>.",
        "ruleDescription": "Warns if two resource files are equal.",
        "ruleName": "Duplicate resource",
        "ruleShortName": "DuplicateResource",
        "ruleWarning": null
      },
      "identifier": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/drawable-mdpi/ic_drawer copy@2x.png",
      "impact": "Maintainability",
      "info": "This file is equal to the file /Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/drawable-mdpi/ic_drawer copy@2x.png.",
      "ruleDescription": "Warns if two resource files are equal.",
      "ruleName": "Duplicate resource",
      "ruleShortName": "DuplicateResource",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreenNew/CHCHomeNewController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 57,
          "byteOffset": 1331,
          "line": 29,
          "utf16Column": 57,
          "utf16Offset": 1331
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 1274,
          "line": 29,
          "utf16Column": 0,
          "utf16Offset": 1274
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/IQActionSheetViewController.h",
      "fileSnippet": "@interface IQActionSheetViewController : UIViewController",
      "html": {
        "info": "The <code class=\"fauxpas-string\">IQ</code> prefix is used. Two-character prefixes are reserved for Apple’s system frameworks. The prefixes in your own (or third-party) code should be at least three characters long.",
        "ruleDescription": "Two-character prefixes (such as <code>NS</code>) are reserved for Apple’s system frameworks. Your own code should use prefixes that are three characters long.",
        "ruleName": "Reserved symbol prefix",
        "ruleShortName": "ReservedPrefix",
        "ruleWarning": null
      },
      "identifier": "IQ",
      "impact": "Maintainability",
      "info": "The IQ prefix is used. Two-character prefixes are reserved for Apple’s system frameworks. The prefixes in your own (or third-party) code should be at least three characters long.",
      "ruleDescription": "Two-character prefixes (such as NS) are reserved for Apple’s system frameworks. Your own code should use prefixes that are three characters long.",
      "ruleName": "Reserved symbol prefix",
      "ruleShortName": "ReservedPrefix",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 61,
          "byteOffset": 461,
          "line": 14,
          "utf16Column": 60,
          "utf16Offset": 461
        },
        "start": {
          "byteColumn": 49,
          "byteOffset": 449,
          "line": 14,
          "utf16Column": 48,
          "utf16Offset": 449
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCArticleScreen/CHCArticleController.m",
      "fileSnippet": "choicepoints",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">choicepoints</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "choicepoints",
      "impact": "Style",
      "info": "The word choicepoints may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 31,
          "byteOffset": 114,
          "line": 9,
          "utf16Column": 30,
          "utf16Offset": 114
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 92,
          "line": 9,
          "utf16Column": 8,
          "utf16Offset": 92
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/CZPickerView.m",
      "fileSnippet": "CZP_HEADER_HEIGHT 44.0",
      "html": {
        "info": null,
        "ruleDescription": "<p>Instead of using a macro definition for a literal value that is used as a constant, define it as an actual constant.</p> <p>This makes the scope of the constant more explicit (it’s not available in all imported files until undefined) and it cannot be redefined or undefined in some later part of the code. Macro definitions are also not available in the debugger.</p>",
        "ruleName": "Macro definition for literal value",
        "ruleShortName": "MacroLiteral",
        "ruleWarning": null
      },
      "identifier": "CZP_HEADER_HEIGHT",
      "impact": "Style",
      "info": null,
      "ruleDescription": "Instead of using a macro definition for a literal value that is used as a constant, define it as an actual constant. This makes the scope of the constant more explicit (it’s not available in all imported files until undefined) and it cannot be redefined or undefined in some later part of the code. Macro definitions are also not available in the debugger.",
      "ruleName": "Macro definition for literal value",
      "ruleShortName": "MacroLiteral",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "IQToolbarAddition",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 2070,
          "line": 51,
          "utf16Column": 22,
          "utf16Offset": 2070
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 2048,
          "line": 50,
          "utf16Column": 0,
          "utf16Offset": 2048
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/IQToolbar/IQUIView+IQKeyboardToolbar.m",
      "fileSnippet": "-(BOOL)shouldHideTitle",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "-[UIView shouldHideTitle]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 24,
          "byteOffset": 72,
          "line": 7,
          "utf16Column": 23,
          "utf16Offset": 72
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 57,
          "line": 7,
          "utf16Column": 8,
          "utf16Offset": 57
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/CZPicker.h",
      "fileSnippet": "Pods_CZPicker_h",
      "html": {
        "info": null,
        "ruleDescription": "Simplify the header by replacing the macro definition check -based include guard with the ‘once’ pragma.",
        "ruleName": "Macro-based include guard",
        "ruleShortName": "MacroBasedIncludeGuard",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": null,
      "ruleDescription": "Simplify the header by replacing the macro definition check -based include guard with the ‘once’ pragma.",
      "ruleName": "Macro-based include guard",
      "ruleShortName": "MacroBasedIncludeGuard",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "formatNumber:",
      "extent": {
        "end": {
          "byteColumn": 91,
          "byteOffset": 15008,
          "line": 407,
          "utf16Column": 90,
          "utf16Offset": 15007
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 14922,
          "line": 407,
          "utf16Column": 4,
          "utf16Offset": 14921
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SignUpController/CHCRegisterController.m",
      "fileSnippet": "mobileNumber = [mobileNumber stringByReplacingOccurrencesOfString:@\"+\" withString:@\"\"]",
      "html": {
        "info": null,
        "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
        "ruleName": "Modifying the value of an argument variable",
        "ruleShortName": "ArgumentModification",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
      "ruleName": "Modifying the value of an argument variable",
      "ruleShortName": "ArgumentModification",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "IQToolbarAddition",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 8900,
          "line": 228,
          "utf16Column": 64,
          "utf16Offset": 8900
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 8836,
          "line": 227,
          "utf16Column": 0,
          "utf16Offset": 8836
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/IQToolbar/IQUIView+IQKeyboardToolbar.m",
      "fileSnippet": "-(void)addDoneOnKeyboardWithTarget:(id)target action:(SEL)action",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "-[UIView addDoneOnKeyboardWithTarget:action:]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": "APIClass",
      "extent": {
        "end": {
          "byteColumn": 83,
          "byteOffset": 9243,
          "line": 253,
          "utf16Column": 82,
          "utf16Offset": 9243
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 9161,
          "line": 253,
          "utf16Column": 0,
          "utf16Offset": 9161
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/APIModel/APIClass.m",
      "fileSnippet": "- (void)connection:(NSURLConnection *)connection didFailWithError:(NSError *)error",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns about Objective-C methods to which no references are found.</p> <p>This rule will not warn about <code class=\"fauxpas-codesymbol\">IBAction</code> methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form <code class=\"fauxpas-string\">*+Private.h</code>). It also won’t warn about unused getter methods whose setter is used, and vice versa.</p>",
        "ruleName": "Possibly unused Objective-C method",
        "ruleShortName": "UnusedMethod",
        "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool)."
      },
      "identifier": "-[APIClass connection:didFailWithError:]",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns about Objective-C methods to which no references are found. This rule will not warn about IBAction methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form *+Private.h). It also won’t warn about unused getter methods whose setter is used, and vice versa.",
      "ruleName": "Possibly unused Objective-C method",
      "ruleShortName": "UnusedMethod",
      "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool).",
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCHealthLogSurveyDetails.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "UserModel",
      "extent": {
        "end": {
          "byteColumn": 49,
          "byteOffset": 452,
          "line": 18,
          "utf16Column": 48,
          "utf16Offset": 451
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 404,
          "line": 18,
          "utf16Column": 0,
          "utf16Offset": 403
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/UserModel.h",
      "fileSnippet": "@property (nonatomic, strong) NSString* lastName",
      "html": {
        "info": "The <code>lastName</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The lastName property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCArticleDetails.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "setFloatingLabelFont:",
      "extent": {
        "end": {
          "byteColumn": 100,
          "byteOffset": 12904,
          "line": 321,
          "utf16Column": 99,
          "utf16Offset": 12904
        },
        "start": {
          "byteColumn": 27,
          "byteOffset": 12831,
          "line": 321,
          "utf16Column": 26,
          "utf16Offset": 12831
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SignUpController/JVFloatLabeledTextView.m",
      "fileSnippet": "_floatingLabelFont ? _floatingLabelFont : [self defaultFloatingLabelFont]",
      "html": {
        "info": null,
        "ruleDescription": "Expressions of the form <code>(obj ? obj : other)</code> should be written as <code>obj ?: other</code>.",
        "ruleName": "Null coalescing operator usage",
        "ruleShortName": "NullCoalescingOp",
        "ruleWarning": "Please note that in the form <code>(obj ? obj : other)</code> the <code>obj</code> expression is evaluated twice, while in the <code>obj ?: other</code> form it is evaluated only once."
      },
      "identifier": null,
      "impact": "Style",
      "info": null,
      "ruleDescription": "Expressions of the form (obj ? obj : other) should be written as obj ?: other.",
      "ruleName": "Null coalescing operator usage",
      "ruleShortName": "NullCoalescingOp",
      "ruleWarning": "Please note that in the form (obj ? obj : other) the obj expression is evaluated twice, while in the obj ?: other form it is evaluated only once.",
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 59,
          "byteOffset": 1724,
          "line": 64,
          "utf16Column": 58,
          "utf16Offset": 1724
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 1666,
          "line": 64,
          "utf16Column": 0,
          "utf16Offset": 1666
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/CZPickerView.h",
      "fileSnippet": "- (void)czpickerViewDidDismiss:(CZPickerView *)pickerView;",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">czpicker</code> in the symbol name <code class=\"fauxpas-codesymbol\">czpickerViewDidDismiss:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "czpicker",
      "impact": "Style",
      "info": "The word czpicker in the symbol name czpickerViewDidDismiss: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "RegistrationSurveyController",
      "extent": {
        "end": {
          "byteColumn": 90,
          "byteOffset": 9501,
          "line": 273,
          "utf16Column": 89,
          "utf16Offset": 9500
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 9412,
          "line": 273,
          "utf16Column": 0,
          "utf16Offset": 9411
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SurveysController/RegistrationSurveyController.m",
      "fileSnippet": "- (void)czpickerView:(CZPickerView *)pickerView didConfirmWithItemsAtRows:(NSArray *)rows",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">czpicker</code> in the symbol name <code class=\"fauxpas-codesymbol\">czpickerView:didConfirmWithItemsAtRows:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "czpicker",
      "impact": "Style",
      "info": "The word czpicker in the symbol name czpickerView:didConfirmWithItemsAtRows: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 55,
          "byteOffset": 241,
          "line": 12,
          "utf16Column": 55,
          "utf16Offset": 240
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 186,
          "line": 12,
          "utf16Column": 0,
          "utf16Offset": 185
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/DashboardViewController/DashboardViewController.h",
      "fileSnippet": "@interface DashboardViewController : BaseViewController",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "DashboardViewController",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyProfileViewController/MyProfileController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SurveysController/ListSurveysViewController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/ScheduleAppointmentNew.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "init",
      "extent": {
        "end": {
          "byteColumn": 25,
          "byteOffset": 485,
          "line": 24,
          "utf16Column": 24,
          "utf16Offset": 484
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 465,
          "line": 24,
          "utf16Column": 4,
          "utf16Offset": 464
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/UserModel.m",
      "fileSnippet": "self.pointTotal = @0",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "pointTotal",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Utils/UIUtils.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 52,
          "byteOffset": 1565,
          "line": 65,
          "utf16Column": 51,
          "utf16Offset": 1564
        },
        "start": {
          "byteColumn": 39,
          "byteOffset": 1552,
          "line": 65,
          "utf16Column": 38,
          "utf16Offset": 1551
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/BaseUIController/BottomBarView.m",
      "fileSnippet": "@\"pointTotal\"",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns when literal strings are used to specify key paths.</p> <p>Something like <code>NSStringFromSelector(@selector(foo))</code> is safer because it makes the compiler aware of the selector being specified — this helps find typos at compile time and allows automatic refactoring tools to make appropriate changes.</p>",
        "ruleName": "Literal string for key path",
        "ruleShortName": "LiteralStringKeyPath",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when literal strings are used to specify key paths. Something like NSStringFromSelector(@selector(foo)) is safer because it makes the compiler aware of the selector being specified — this helps find typos at compile time and allows automatic refactoring tools to make appropriate changes.",
      "ruleName": "Literal string for key path",
      "ruleShortName": "LiteralStringKeyPath",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "Animation",
      "extent": {
        "end": {
          "byteColumn": 23,
          "byteOffset": 239,
          "line": 14,
          "utf16Column": 22,
          "utf16Offset": 238
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 217,
          "line": 14,
          "utf16Column": 0,
          "utf16Offset": 216
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Category/UIView+Animation.m",
      "fileSnippet": "- (void)shakeAnimation",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "-[UIView shakeAnimation]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> <code class=\"fauxpas-string\">Daily Average : ?</code> (id <code class=\"fauxpas-string\">cpO-iB-S6M</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel Daily Average : ? (id cpO-iB-S6M)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel Daily Average : ? (id cpO-iB-S6M) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/Add-Icon@2x.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "instructionButtonClicked:",
      "extent": {
        "end": {
          "byteColumn": 157,
          "byteOffset": 1934,
          "line": 64,
          "utf16Column": 156,
          "utf16Offset": 1933
        },
        "start": {
          "byteColumn": 46,
          "byteOffset": 1823,
          "line": 64,
          "utf16Column": 45,
          "utf16Offset": 1822
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyMedicationsController/MyMedicationsController.m",
      "fileSnippet": "[[InstructionsViewController alloc] initWithNibName:@\"InstructionsViewController\" bundle:[NSBundle mainBundle]]",
      "html": {
        "info": "Instantiating <code class=\"fauxpas-objcclass\">InstructionsViewController</code> outside its implementation with literal NIB name <code class=\"fauxpas-string\">InstructionsViewController</code>",
        "ruleDescription": "It is not advisable to use <code class=\"fauxpas-objcmethod\">-[UIViewController initWithNibName:bundle:]</code> to instantiate <code class=\"fauxpas-objcclass\">UIViewController</code> subclasses outside of the subclass implementation itself. This breaks encapsulation (the subclass should be the one to decide which NIB to use) and makes it more likely that a typo in the NIB name string will crash the app during runtime.",
        "ruleName": "Using <code class=\"fauxpas-objcmethod\">-[UIViewController initWithNibName:bundle:]</code> outside the <code class=\"fauxpas-objcclass\">UIViewController</code> implementation",
        "ruleShortName": "ViewControllerInitWithNibName",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": "Instantiating InstructionsViewController outside its implementation with literal NIB name InstructionsViewController",
      "ruleDescription": "It is not advisable to use -[UIViewController initWithNibName:bundle:] to instantiate UIViewController subclasses outside of the subclass implementation itself. This breaks encapsulation (the subclass should be the one to decide which NIB to use) and makes it more likely that a typo in the NIB name string will crash the app during runtime.",
      "ruleName": "Using -[UIViewController initWithNibName:bundle:] outside the UIViewController implementation",
      "ruleShortName": "ViewControllerInitWithNibName",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "ScheduleAppointmentNew",
      "extent": {
        "end": {
          "byteColumn": 59,
          "byteOffset": 1285,
          "line": 31,
          "utf16Column": 58,
          "utf16Offset": 1284
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 1227,
          "line": 31,
          "utf16Column": 0,
          "utf16Offset": 1226
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/ScheduleAppointmentNew.h",
      "fileSnippet": "@property (weak, nonatomic) IBOutlet UIButton *thursButton",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">thurs</code> in the symbol name <code class=\"fauxpas-codesymbol\">thursButton</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "thurs",
      "impact": "Style",
      "info": "The word thurs in the symbol name thursButton may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 79,
          "byteOffset": 3387,
          "line": 97,
          "utf16Column": 78,
          "utf16Offset": 3387
        },
        "start": {
          "byteColumn": 66,
          "byteOffset": 3374,
          "line": 97,
          "utf16Column": 65,
          "utf16Offset": 3374
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreenNew/CHCHomeNewController.m",
      "fileSnippet": "@\"inputImage\"",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns when literal strings are used to specify key paths.</p> <p>Something like <code>NSStringFromSelector(@selector(foo))</code> is safer because it makes the compiler aware of the selector being specified — this helps find typos at compile time and allows automatic refactoring tools to make appropriate changes.</p>",
        "ruleName": "Literal string for key path",
        "ruleShortName": "LiteralStringKeyPath",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when literal strings are used to specify key paths. Something like NSStringFromSelector(@selector(foo)) is safer because it makes the compiler aware of the selector being specified — this helps find typos at compile time and allows automatic refactoring tools to make appropriate changes.",
      "ruleName": "Literal string for key path",
      "ruleShortName": "LiteralStringKeyPath",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 61,
          "byteOffset": 276,
          "line": 12,
          "utf16Column": 61,
          "utf16Offset": 275
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 215,
          "line": 12,
          "utf16Column": 0,
          "utf16Offset": 214
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/ScheduleAppointmentController.h",
      "fileSnippet": "@interface ScheduleAppointmentController : BaseViewController",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "ScheduleAppointmentController",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> <code class=\"fauxpas-string\">Welcome Back!</code> (id <code class=\"fauxpas-string\">49E-mr-oBz</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel Welcome Back! (id 49E-mr-oBz)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel Welcome Back! (id 49E-mr-oBz) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> <code class=\"fauxpas-string\">Welcome Back!</code> (id <code class=\"fauxpas-string\">OGX-MP-Zto</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel Welcome Back! (id OGX-MP-Zto)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel Welcome Back! (id OGX-MP-Zto) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 52,
          "byteOffset": 5015,
          "line": 113,
          "utf16Column": 52,
          "utf16Offset": 5015
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 4963,
          "line": 113,
          "utf16Column": 0,
          "utf16Offset": 4963
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/SWRevealViewController.h",
      "fileSnippet": "@interface SWRevealViewController : UIViewController",
      "html": {
        "info": "The <code class=\"fauxpas-string\">SW</code> prefix is used. Two-character prefixes are reserved for Apple’s system frameworks. The prefixes in your own (or third-party) code should be at least three characters long.",
        "ruleDescription": "Two-character prefixes (such as <code>NS</code>) are reserved for Apple’s system frameworks. Your own code should use prefixes that are three characters long.",
        "ruleName": "Reserved symbol prefix",
        "ruleShortName": "ReservedPrefix",
        "ruleWarning": null
      },
      "identifier": "SW",
      "impact": "Maintainability",
      "info": "The SW prefix is used. Two-character prefixes are reserved for Apple’s system frameworks. The prefixes in your own (or third-party) code should be at least three characters long.",
      "ruleDescription": "Two-character prefixes (such as NS) are reserved for Apple’s system frameworks. Your own code should use prefixes that are three characters long.",
      "ruleName": "Reserved symbol prefix",
      "ruleShortName": "ReservedPrefix",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "doneDatePickerButtonClick:",
      "extent": {
        "end": {
          "byteColumn": 41,
          "byteOffset": 18499,
          "line": 409,
          "utf16Column": 40,
          "utf16Offset": 18499
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 18463,
          "line": 409,
          "utf16Column": 4,
          "utf16Offset": 18463
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCHealthLogScreen/CHCHealthLogNewController.m",
      "fileSnippet": "formatter.dateFormat = @\"MM/dd/yyyy\"",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns when an <code class=\"fauxpas-objcclass\">NSDateFormatter</code> is used with fixed-format dates without using the invariant <code class=\"fauxpas-string\">en_US_POSIX</code> locale. If any other locale is used, the date format string may be overwritten, depending on system date and time settings.</p> <p>When working with user-visible dates, date and time styles should be used instead of setting a date format.</p>",
        "ruleName": "Fixed-format <code class=\"fauxpas-objcclass\">NSDateFormatter</code> not using invariant (POSIX) locale",
        "ruleShortName": "FixedFormatDateFormatter",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Warns when an NSDateFormatter is used with fixed-format dates without using the invariant en_US_POSIX locale. If any other locale is used, the date format string may be overwritten, depending on system date and time settings. When working with user-visible dates, date and time styles should be used instead of setting a date format.",
      "ruleName": "Fixed-format NSDateFormatter not using invariant (POSIX) locale",
      "ruleShortName": "FixedFormatDateFormatter",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Ambiguous view: <code class=\"fauxpas-objcclass\">UIView</code> (id <code class=\"fauxpas-string\">b6L-Us-hmL</code>) — the position and size of this view are ambiguous.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIView (id b6L-Us-hmL)",
      "impact": "Maintainability",
      "info": "Ambiguous view: UIView (id b6L-Us-hmL) — the position and size of this view are ambiguous.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 69,
          "byteOffset": 1386,
          "line": 52,
          "utf16Column": 68,
          "utf16Offset": 1386
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 1318,
          "line": 52,
          "utf16Column": 0,
          "utf16Offset": 1318
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/CZPickerView.h",
      "fileSnippet": "- (void)czpickerViewDidClickCancelButton:(CZPickerView *)pickerView;",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">czpicker</code> in the symbol name <code class=\"fauxpas-codesymbol\">czpickerViewDidClickCancelButton:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "czpicker",
      "impact": "Style",
      "info": "The word czpicker in the symbol name czpickerViewDidClickCancelButton: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "getLength:",
      "extent": {
        "end": {
          "byteColumn": 91,
          "byteOffset": 15776,
          "line": 428,
          "utf16Column": 90,
          "utf16Offset": 15775
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 15690,
          "line": 428,
          "utf16Column": 4,
          "utf16Offset": 15689
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SignUpController/CHCRegisterController.m",
      "fileSnippet": "mobileNumber = [mobileNumber stringByReplacingOccurrencesOfString:@\"+\" withString:@\"\"]",
      "html": {
        "info": null,
        "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
        "ruleName": "Modifying the value of an argument variable",
        "ruleShortName": "ArgumentModification",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
      "ruleName": "Modifying the value of an argument variable",
      "ruleShortName": "ArgumentModification",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "IQ_UIView_Hierarchy",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 4268,
          "line": 124,
          "utf16Column": 47,
          "utf16Offset": 4268
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 4221,
          "line": 123,
          "utf16Column": 0,
          "utf16Offset": 4221
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/Categories/IQUIView+Hierarchy.m",
      "fileSnippet": "-(UIView*)superviewOfClassType:(Class)classType",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "-[UIView superviewOfClassType:]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyInboxController/MyInboxViewController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 52,
          "byteOffset": 233,
          "line": 11,
          "utf16Column": 52,
          "utf16Offset": 233
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 181,
          "line": 11,
          "utf16Column": 0,
          "utf16Offset": 181
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCHealthLogScreen/HorizontalTableViewCell.h",
      "fileSnippet": "@interface HorizontalTableViewCell : UITableViewCell",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "HorizontalTableViewCell",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/BaseUIController/BottomBarView.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 51,
          "byteOffset": 397,
          "line": 21,
          "utf16Column": 51,
          "utf16Offset": 396
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 346,
          "line": 21,
          "utf16Column": 0,
          "utf16Offset": 345
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/SecurityPinController/SecurityPinController.h",
      "fileSnippet": "@interface SecurityPinController : UIViewController",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "SecurityPinController",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SurveysController/SurveysViewController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/SecurityPinController/ForgetPinController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/HEDISViewController/HEDISViewController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 56,
          "byteOffset": 242,
          "line": 11,
          "utf16Column": 56,
          "utf16Offset": 241
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 186,
          "line": 11,
          "utf16Column": 0,
          "utf16Offset": 185
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyMessagesController/MyMessagesViewController.h",
      "fileSnippet": "@interface MyMessagesViewController : BaseViewController",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "MyMessagesViewController",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "IQ_UIView_Hierarchy",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 5520,
          "line": 165,
          "utf16Column": 29,
          "utf16Offset": 5520
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 5491,
          "line": 164,
          "utf16Column": 0,
          "utf16Offset": 5491
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/Categories/IQUIView+Hierarchy.m",
      "fileSnippet": "- (NSArray*)responderSiblings",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "-[UIView responderSiblings]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCHealthLogScreen/HorizontalTableView/PTEHorizontalTableView.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Images.xcassets/Dashboard/Inbox-icon.imageset/Choice Points App_Design_02-15-16-06 envelope-3x.png",
      "fileSnippet": null,
      "html": {
        "info": "Asset catalog ‘Images’, set ‘Inbox-icon’: <div class=\"fauxpas-filename\">Choice Points App_Design_02-15-16-06 envelope-3x.png</div> (x3 scale) resolution (471 x 407) should be 471 x 408.",
        "ruleDescription": "The retina (‘@2x’ or ‘@3x’) version of an image resource must be exactly double or triple the size of the corresponding low-resolution image (assuming the point size of the presentation context remains the same regardless of screen resolution). Otherwise the effective resolution of the image will not match the effective resolution of its presentation context, which will lead to a blurry image, empty space at the edges, or overflow.",
        "ruleName": "Unexpected retina image resolution",
        "ruleShortName": "RetinaImagesResolution",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "Asset catalog ‘Images’, set ‘Inbox-icon’: Choice Points App_Design_02-15-16-06 envelope-3x.png (x3 scale) resolution (471 x 407) should be 471 x 408.",
      "ruleDescription": "The retina (‘@2x’ or ‘@3x’) version of an image resource must be exactly double or triple the size of the corresponding low-resolution image (assuming the point size of the presentation context remains the same regardless of screen resolution). Otherwise the effective resolution of the image will not match the effective resolution of its presentation context, which will lead to a blurry image, empty space at the edges, or overflow.",
      "ruleName": "Unexpected retina image resolution",
      "ruleShortName": "RetinaImagesResolution",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 47,
          "byteOffset": 2925,
          "line": 75,
          "utf16Column": 47,
          "utf16Offset": 2925
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 2878,
          "line": 75,
          "utf16Column": 0,
          "utf16Offset": 2878
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/IQActionSheetPickerView.h",
      "fileSnippet": "@interface IQActionSheetPickerView : UIControl\r",
      "html": {
        "info": "The <code class=\"fauxpas-string\">IQ</code> prefix is used. Two-character prefixes are reserved for Apple’s system frameworks. The prefixes in your own (or third-party) code should be at least three characters long.",
        "ruleDescription": "Two-character prefixes (such as <code>NS</code>) are reserved for Apple’s system frameworks. Your own code should use prefixes that are three characters long.",
        "ruleName": "Reserved symbol prefix",
        "ruleShortName": "ReservedPrefix",
        "ruleWarning": null
      },
      "identifier": "IQ",
      "impact": "Maintainability",
      "info": "The IQ prefix is used. Two-character prefixes are reserved for Apple’s system frameworks. The prefixes in your own (or third-party) code should be at least three characters long.",
      "ruleDescription": "Two-character prefixes (such as NS) are reserved for Apple’s system frameworks. Your own code should use prefixes that are three characters long.",
      "ruleName": "Reserved symbol prefix",
      "ruleShortName": "ReservedPrefix",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/ArticlesViewController/ArticlesViewController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyMessagesController/MyMessagesViewController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 58,
          "byteOffset": 699,
          "line": 22,
          "utf16Column": 57,
          "utf16Offset": 699
        },
        "start": {
          "byteColumn": 47,
          "byteOffset": 688,
          "line": 22,
          "utf16Column": 46,
          "utf16Offset": 688
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCArticleArchiveController.m",
      "fileSnippet": "articlelist",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">Articlelist</code> in the symbol name <code class=\"fauxpas-codesymbol\">setArticlelist:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "Articlelist",
      "impact": "Style",
      "info": "The word Articlelist in the symbol name setArticlelist: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "IQ_UIView_Hierarchy",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 8539,
          "line": 286,
          "utf16Column": 27,
          "utf16Offset": 8539
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 8512,
          "line": 285,
          "utf16Column": 0,
          "utf16Offset": 8512
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/Categories/IQUIView+Hierarchy.m",
      "fileSnippet": "-(NSString *)debugHierarchy",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "-[UIView debugHierarchy]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/CustomViews/CustomButton.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Images.xcassets/Dashboard/Check-icon.imageset/Choice Points App_Design_02-15-16-06 check-3x.png",
      "fileSnippet": null,
      "html": {
        "info": "Asset catalog ‘Images’, set ‘Check-icon’: <div class=\"fauxpas-filename\">Choice Points App_Design_02-15-16-06 check-3x.png</div> (x3 scale) resolution (431 x 407) should be 432 x 408.",
        "ruleDescription": "The retina (‘@2x’ or ‘@3x’) version of an image resource must be exactly double or triple the size of the corresponding low-resolution image (assuming the point size of the presentation context remains the same regardless of screen resolution). Otherwise the effective resolution of the image will not match the effective resolution of its presentation context, which will lead to a blurry image, empty space at the edges, or overflow.",
        "ruleName": "Unexpected retina image resolution",
        "ruleShortName": "RetinaImagesResolution",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "Asset catalog ‘Images’, set ‘Check-icon’: Choice Points App_Design_02-15-16-06 check-3x.png (x3 scale) resolution (431 x 407) should be 432 x 408.",
      "ruleDescription": "The retina (‘@2x’ or ‘@3x’) version of an image resource must be exactly double or triple the size of the corresponding low-resolution image (assuming the point size of the presentation context remains the same regardless of screen resolution). Otherwise the effective resolution of the image will not match the effective resolution of its presentation context, which will lead to a blurry image, empty space at the edges, or overflow.",
      "ruleName": "Unexpected retina image resolution",
      "ruleShortName": "RetinaImagesResolution",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/ProgressView/ProgressView.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 59,
          "byteOffset": 1321,
          "line": 29,
          "utf16Column": 59,
          "utf16Offset": 1321
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 1262,
          "line": 29,
          "utf16Column": 0,
          "utf16Offset": 1262
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/IQToolbar/IQToolbar.h",
      "fileSnippet": "@interface IQToolbar : UIToolbar <UIInputViewAudioFeedback>",
      "html": {
        "info": "The <code class=\"fauxpas-string\">IQ</code> prefix is used. Two-character prefixes are reserved for Apple’s system frameworks. The prefixes in your own (or third-party) code should be at least three characters long.",
        "ruleDescription": "Two-character prefixes (such as <code>NS</code>) are reserved for Apple’s system frameworks. Your own code should use prefixes that are three characters long.",
        "ruleName": "Reserved symbol prefix",
        "ruleShortName": "ReservedPrefix",
        "ruleWarning": null
      },
      "identifier": "IQ",
      "impact": "Maintainability",
      "info": "The IQ prefix is used. Two-character prefixes are reserved for Apple’s system frameworks. The prefixes in your own (or third-party) code should be at least three characters long.",
      "ruleDescription": "Two-character prefixes (such as NS) are reserved for Apple’s system frameworks. Your own code should use prefixes that are three characters long.",
      "ruleName": "Reserved symbol prefix",
      "ruleShortName": "ReservedPrefix",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 34,
          "byteOffset": 213,
          "line": 11,
          "utf16Column": 34,
          "utf16Offset": 213
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 179,
          "line": 11,
          "utf16Column": 0,
          "utf16Offset": 179
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCSurveyScreen/ChildDetails.h",
      "fileSnippet": "@interface ChildDetails : NSObject",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "ChildDetails",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 50,
          "byteOffset": 225,
          "line": 11,
          "utf16Column": 50,
          "utf16Offset": 224
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 175,
          "line": 11,
          "utf16Column": 0,
          "utf16Offset": 174
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/RevealViewController/RevealViewController.h",
      "fileSnippet": "@interface RevealViewController : UIViewController",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "RevealViewController",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> <code class=\"fauxpas-string\">ChoicePoints Rewards</code> (id <code class=\"fauxpas-string\">IJd-wp-mYZ</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel ChoicePoints Rewards (id IJd-wp-mYZ)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel ChoicePoints Rewards (id IJd-wp-mYZ) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ChildDetails",
      "extent": {
        "end": {
          "byteColumn": 52,
          "byteOffset": 364,
          "line": 14,
          "utf16Column": 51,
          "utf16Offset": 364
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 313,
          "line": 14,
          "utf16Column": 0,
          "utf16Offset": 313
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCSurveyScreen/ChildDetails.h",
      "fileSnippet": "@property (strong, nonatomic) NSString *dateOfBirth",
      "html": {
        "info": "The <code>dateOfBirth</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The dateOfBirth property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": "init",
      "extent": {
        "end": {
          "byteColumn": 45,
          "byteOffset": 796,
          "line": 37,
          "utf16Column": 44,
          "utf16Offset": 796
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 760,
          "line": 37,
          "utf16Column": 8,
          "utf16Offset": 760
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/LocationManager.m",
      "fileSnippet": "self.locationManager.delegate = self",
      "html": {
        "info": "LocationManager attaches itself as a <code class=\"fauxpas-objcclass\">CLLocationManager</code> delegate, but does not detach in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>.",
        "ruleDescription": "When an object sets itself as the delegate or data source of one of its members, it must detach that reference in its <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code> method.",
        "ruleName": "Undetached delegate or data source",
        "ruleShortName": "UndetachedDelegate",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "LocationManager attaches itself as a CLLocationManager delegate, but does not detach in -[NSObject dealloc].",
      "ruleDescription": "When an object sets itself as the delegate or data source of one of its members, it must detach that reference in its -[NSObject dealloc] method.",
      "ruleName": "Undetached delegate or data source",
      "ruleShortName": "UndetachedDelegate",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "SearchDoctorController",
      "extent": {
        "end": {
          "byteColumn": 58,
          "byteOffset": 10227,
          "line": 303,
          "utf16Column": 57,
          "utf16Offset": 10226
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 10170,
          "line": 303,
          "utf16Column": 0,
          "utf16Offset": 10169
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/SearchDoctorController.m",
      "fileSnippet": "- (void)czpickerViewDidDismiss:(CZPickerView *)pickerView",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">czpicker</code> in the symbol name <code class=\"fauxpas-codesymbol\">czpickerViewDidDismiss:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "czpicker",
      "impact": "Style",
      "info": "The word czpicker in the symbol name czpickerViewDidDismiss: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 59,
          "byteOffset": 248,
          "line": 11,
          "utf16Column": 59,
          "utf16Offset": 247
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 189,
          "line": 11,
          "utf16Column": 0,
          "utf16Offset": 188
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/ActivityDashboardController/ActivityDashboardController.h",
      "fileSnippet": "@interface ActivityDashboardController : BaseViewController",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "ActivityDashboardController",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "_adjustedDragLocationForLocation:",
      "extent": {
        "end": {
          "byteColumn": 20,
          "byteOffset": 10628,
          "line": 332,
          "utf16Column": 19,
          "utf16Offset": 10628
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 10613,
          "line": 332,
          "utf16Column": 4,
          "utf16Offset": 10613
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/SWRevealViewController.m",
      "fileSnippet": "x = x * symetry",
      "html": {
        "info": null,
        "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
        "ruleName": "Modifying the value of an argument variable",
        "ruleShortName": "ArgumentModification",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
      "ruleName": "Modifying the value of an argument variable",
      "ruleShortName": "ArgumentModification",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initWithDictionary:",
      "extent": {
        "end": {
          "byteColumn": 58,
          "byteOffset": 683,
          "line": 24,
          "utf16Column": 57,
          "utf16Offset": 683
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 634,
          "line": 24,
          "utf16Column": 8,
          "utf16Offset": 634
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCArticleDetails.m",
      "fileSnippet": "self.articlePhoto   =[dict valueForKey:@\"imgsrc\"]",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "articlePhoto",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initWithFrame:title:",
      "extent": {
        "end": {
          "byteColumn": 55,
          "byteOffset": 2185,
          "line": 54,
          "utf16Column": 54,
          "utf16Offset": 2185
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 2139,
          "line": 54,
          "utf16Column": 8,
          "utf16Offset": 2139
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/IQToolbar/IQTitleBarButtonItem.m",
      "fileSnippet": "self.font = [UIFont boldSystemFontOfSize:12.0]",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "font",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "CHCArticleDetails",
      "extent": {
        "end": {
          "byteColumn": 53,
          "byteOffset": 430,
          "line": 16,
          "utf16Column": 52,
          "utf16Offset": 430
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 378,
          "line": 16,
          "utf16Column": 0,
          "utf16Offset": 378
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCArticleDetails.h",
      "fileSnippet": "@property (nonatomic, strong) NSString *articleTitle",
      "html": {
        "info": "The <code>articleTitle</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The articleTitle property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/Categories/IQUIView+Hierarchy.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "CHCHealthSurveyCell",
      "extent": {
        "end": {
          "byteColumn": 56,
          "byteOffset": 459,
          "line": 15,
          "utf16Column": 55,
          "utf16Offset": 459
        },
        "start": {
          "byteColumn": 49,
          "byteOffset": 452,
          "line": 15,
          "utf16Column": 48,
          "utf16Offset": 452
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/HomeScreenContentViews/CHCHealthSurveyCell.h",
      "fileSnippet": "snipset",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">snipset</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "snipset",
      "impact": "Style",
      "info": "The word snipset may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 28,
          "byteOffset": 31,
          "line": 2,
          "utf16Column": 28,
          "utf16Offset": 31
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 3,
          "line": 2,
          "utf16Column": 0,
          "utf16Offset": 3
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SurveysController/SurveyCell.m",
      "fileSnippet": "//   }        [postingCell.m",
      "html": {
        "info": "The file name in the source file header comment (<code class=\"fauxpas-string\"> }        [postingCell.m</code>) does not match the actual file name (<code class=\"fauxpas-string\">SurveyCell.m</code>).",
        "ruleDescription": "Warns about errors in source file header comments (that are formatted using the default Xcode template), for example if the file name in the comment does not match the actual file name, or if the placeholder <code class=\"fauxpas-string\">__MyCompanyName__</code> is present.",
        "ruleName": "Source file header comment format",
        "ruleShortName": "SourceFileHeaderComment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": "The file name in the source file header comment ( }        [postingCell.m) does not match the actual file name (SurveyCell.m).",
      "ruleDescription": "Warns about errors in source file header comments (that are formatted using the default Xcode template), for example if the file name in the comment does not match the actual file name, or if the placeholder __MyCompanyName__ is present.",
      "ruleName": "Source file header comment format",
      "ruleShortName": "SourceFileHeaderComment",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "CHCArticleCell",
      "extent": {
        "end": {
          "byteColumn": 56,
          "byteOffset": 393,
          "line": 16,
          "utf16Column": 55,
          "utf16Offset": 393
        },
        "start": {
          "byteColumn": 49,
          "byteOffset": 386,
          "line": 16,
          "utf16Column": 48,
          "utf16Offset": 386
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/HomeScreenContentViews/CHCArticleCell.h",
      "fileSnippet": "snipset",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">snipset</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "snipset",
      "impact": "Style",
      "info": "The word snipset may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initWithCoder:",
      "extent": {
        "end": {
          "byteColumn": 67,
          "byteOffset": 3255,
          "line": 79,
          "utf16Column": 66,
          "utf16Offset": 3254
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 3193,
          "line": 79,
          "utf16Column": 4,
          "utf16Offset": 3192
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/UserModel.m",
      "fileSnippet": "self.dob                = [aDecoder decodeObjectForKey:@\"dob\"]",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "dob",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "UserModel",
      "extent": {
        "end": {
          "byteColumn": 53,
          "byteOffset": 895,
          "line": 30,
          "utf16Column": 52,
          "utf16Offset": 894
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 843,
          "line": 30,
          "utf16Column": 0,
          "utf16Offset": 842
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/UserModel.h",
      "fileSnippet": "@property (nonatomic, strong) NSString* sessionToken",
      "html": {
        "info": "The <code>sessionToken</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The sessionToken property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/profilephoto@2x.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 34,
          "byteOffset": 2299,
          "line": 65,
          "utf16Column": 34,
          "utf16Offset": 2299
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 2265,
          "line": 65,
          "utf16Column": 0,
          "utf16Offset": 2265
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/APIModel/Reachability.h",
      "fileSnippet": "@interface Reachability : NSObject",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "Reachability",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "convertTransformToView:",
      "extent": {
        "end": {
          "byteColumn": 29,
          "byteOffset": 6616,
          "line": 205,
          "utf16Column": 28,
          "utf16Offset": 6616
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 6596,
          "line": 205,
          "utf16Column": 8,
          "utf16Offset": 6596
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/Categories/IQUIView+Hierarchy.m",
      "fileSnippet": "toView = self.window",
      "html": {
        "info": null,
        "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
        "ruleName": "Modifying the value of an argument variable",
        "ruleShortName": "ArgumentModification",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
      "ruleName": "Modifying the value of an argument variable",
      "ruleShortName": "ArgumentModification",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/AppIcon/58x58.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/AppIcon/58x58.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": "IQTextView",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 1834,
          "line": 62,
          "utf16Column": 19,
          "utf16Offset": 1834
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 1815,
          "line": 61,
          "utf16Column": 0,
          "utf16Offset": 1815
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/IQTextView/IQTextView.m",
      "fileSnippet": "-(void)awakeFromNib",
      "html": {
        "info": null,
        "ruleDescription": "Warns if <code class=\"fauxpas-objcmethod\">-[NSObject awakeFromNib]</code> is implemented in a class that is not archived in any known XIB.",
        "ruleName": "Unnecessary Nib method",
        "ruleShortName": "UnnecessaryNibMethod",
        "ruleWarning": null
      },
      "identifier": "IQTextView",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Warns if -[NSObject awakeFromNib] is implemented in a class that is not archived in any known XIB.",
      "ruleName": "Unnecessary Nib method",
      "ruleShortName": "UnnecessaryNibMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initWithCoder:",
      "extent": {
        "end": {
          "byteColumn": 70,
          "byteOffset": 3326,
          "line": 80,
          "utf16Column": 69,
          "utf16Offset": 3325
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 3261,
          "line": 80,
          "utf16Column": 4,
          "utf16Offset": 3260
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/UserModel.m",
      "fileSnippet": "self.gender             = [aDecoder decodeObjectForKey:@\"gender\"]",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "gender",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SurveysController/RegistrationSurveyController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/grey-phone.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 60,
          "byteOffset": 992,
          "line": 36,
          "utf16Column": 59,
          "utf16Offset": 991
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 719,
          "line": 33,
          "utf16Column": 4,
          "utf16Offset": 718
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/RevealViewController/RevealViewController.m",
      "fileSnippet": "[[NSNotificationCenter defaultCenter] addObserver:self\n                                             selector:@selector(refresh)\n                                                 name:@\"didReceiveRemoteNotification\"\n                                               object:NULL]",
      "html": {
        "info": null,
        "ruleDescription": "<p>You must invoke <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:]</code> or <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:name:object:]</code> before the observer object is deallocated.</p> <p>This rule only considers cases where the observer reference is <code>self</code>, or an instance variable or an Objective-C property in <code>self</code>.</p> <p>This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).</p>",
        "ruleName": "Missing <code class=\"fauxpas-objcclass\">NSNotificationCenter</code> observer detachment",
        "ruleShortName": "MissingNotificationCenterDetachment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "You must invoke -[NSNotificationCenter removeObserver:] or -[NSNotificationCenter removeObserver:name:object:] before the observer object is deallocated. This rule only considers cases where the observer reference is self, or an instance variable or an Objective-C property in self. This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).",
      "ruleName": "Missing NSNotificationCenter observer detachment",
      "ruleShortName": "MissingNotificationCenterDetachment",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/grey-phone.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": "SWRevealViewControllerSegue",
      "extent": {
        "end": {
          "byteColumn": 38,
          "byteOffset": 14644,
          "line": 271,
          "utf16Column": 37,
          "utf16Offset": 14644
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 14607,
          "line": 271,
          "utf16Column": 0,
          "utf16Offset": 14607
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/SWRevealViewController.h",
      "fileSnippet": "@property (strong) void(^performBlock",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns for implicitly atomic properties.</p> <p>If neither the <code>atomic</code> keyword nor the <code>nonatomic</code> keyword is specified, a property is synthesized as atomic by default.</p>",
        "ruleName": "Implicitly atomic property",
        "ruleShortName": "ImplicitAtomicProperty",
        "ruleWarning": null
      },
      "identifier": "performBlock",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Warns for implicitly atomic properties. If neither the atomic keyword nor the nonatomic keyword is specified, a property is synthesized as atomic by default.",
      "ruleName": "Implicitly atomic property",
      "ruleShortName": "ImplicitAtomicProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/InstructionsViewController/InstructionsViewController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/checkmark@2x.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘non-retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘non-retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCReminderCell.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 123,
          "byteOffset": 3220,
          "line": 94,
          "utf16Column": 122,
          "utf16Offset": 3220
        },
        "start": {
          "byteColumn": 106,
          "byteOffset": 3203,
          "line": 94,
          "utf16Column": 105,
          "utf16Offset": 3203
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreenNew/CHCHomeNewController.m",
      "fileSnippet": "@\"inputTransform\"",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns when literal strings are used to specify key paths.</p> <p>Something like <code>NSStringFromSelector(@selector(foo))</code> is safer because it makes the compiler aware of the selector being specified — this helps find typos at compile time and allows automatic refactoring tools to make appropriate changes.</p>",
        "ruleName": "Literal string for key path",
        "ruleShortName": "LiteralStringKeyPath",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when literal strings are used to specify key paths. Something like NSStringFromSelector(@selector(foo)) is safer because it makes the compiler aware of the selector being specified — this helps find typos at compile time and allows automatic refactoring tools to make appropriate changes.",
      "ruleName": "Literal string for key path",
      "ruleShortName": "LiteralStringKeyPath",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Images.xcassets/Dashboard/survey-icon.imageset/first-aid-kit-1.png",
      "fileSnippet": null,
      "html": {
        "info": "Asset catalog ‘Images’, set ‘survey-icon’: <div class=\"fauxpas-filename\">first-aid-kit-1.png</div> (x2 scale) resolution (256 x 256) should be 512 x 512.",
        "ruleDescription": "The retina (‘@2x’ or ‘@3x’) version of an image resource must be exactly double or triple the size of the corresponding low-resolution image (assuming the point size of the presentation context remains the same regardless of screen resolution). Otherwise the effective resolution of the image will not match the effective resolution of its presentation context, which will lead to a blurry image, empty space at the edges, or overflow.",
        "ruleName": "Unexpected retina image resolution",
        "ruleShortName": "RetinaImagesResolution",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "Asset catalog ‘Images’, set ‘survey-icon’: first-aid-kit-1.png (x2 scale) resolution (256 x 256) should be 512 x 512.",
      "ruleDescription": "The retina (‘@2x’ or ‘@3x’) version of an image resource must be exactly double or triple the size of the corresponding low-resolution image (assuming the point size of the presentation context remains the same regardless of screen resolution). Otherwise the effective resolution of the image will not match the effective resolution of its presentation context, which will lead to a blurry image, empty space at the edges, or overflow.",
      "ruleName": "Unexpected retina image resolution",
      "ruleShortName": "RetinaImagesResolution",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "viewDidAppear:",
      "extent": {
        "end": {
          "byteColumn": 72,
          "byteOffset": 3793,
          "line": 91,
          "utf16Column": 71,
          "utf16Offset": 3793
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 3730,
          "line": 91,
          "utf16Column": 8,
          "utf16Offset": 3730
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCRequestAppointmentController.m",
      "fileSnippet": "[CHCRequestAppointmentController isLocationDisableForMyAppOnly]",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. <code>[FOOThing alloc]</code>.</p> <p>It is recommended to use <code class=\"fauxpas-codesymbol\">self</code> instead (e.g. <code>[self alloc]</code> or <code>[[self class] alloc]</code>) so that the concrete class would receive the message, and subclassing behavior would not be impeded.</p>",
        "ruleName": "Hardcoded self class reference",
        "ruleShortName": "HardcodedSelfClass",
        "ruleWarning": null
      },
      "identifier": "CHCRequestAppointmentController",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. [FOOThing alloc]. It is recommended to use self instead (e.g. [self alloc] or [[self class] alloc]) so that the concrete class would receive the message, and subclassing behavior would not be impeded.",
      "ruleName": "Hardcoded self class reference",
      "ruleShortName": "HardcodedSelfClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "tableView:cellForRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 60,
          "byteOffset": 3733,
          "line": 122,
          "utf16Column": 59,
          "utf16Offset": 3732
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 3678,
          "line": 122,
          "utf16Column": 4,
          "utf16Offset": 3677
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/MyAppointmentsController.m",
      "fileSnippet": "formatter.dateFormat = @\"yyyy'-'MM'-'dd' 'HH':'mm':'ss\"",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns when an <code class=\"fauxpas-objcclass\">NSDateFormatter</code> is used with fixed-format dates without using the invariant <code class=\"fauxpas-string\">en_US_POSIX</code> locale. If any other locale is used, the date format string may be overwritten, depending on system date and time settings.</p> <p>When working with user-visible dates, date and time styles should be used instead of setting a date format.</p>",
        "ruleName": "Fixed-format <code class=\"fauxpas-objcclass\">NSDateFormatter</code> not using invariant (POSIX) locale",
        "ruleShortName": "FixedFormatDateFormatter",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Warns when an NSDateFormatter is used with fixed-format dates without using the invariant en_US_POSIX locale. If any other locale is used, the date format string may be overwritten, depending on system date and time settings. When working with user-visible dates, date and time styles should be used instead of setting a date format.",
      "ruleName": "Fixed-format NSDateFormatter not using invariant (POSIX) locale",
      "ruleShortName": "FixedFormatDateFormatter",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/ArticlesViewController/ArticleDetailsViewController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCSurveyScreen/CHCSurveyController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/button.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/button.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "CHCReminderController",
      "extent": {
        "end": {
          "byteColumn": 46,
          "byteOffset": 275,
          "line": 12,
          "utf16Column": 45,
          "utf16Offset": 275
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 230,
          "line": 12,
          "utf16Column": 0,
          "utf16Offset": 230
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCReminderController.h",
      "fileSnippet": "@property (strong, nonatomic) NSString *remID",
      "html": {
        "info": "The <code>remID</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The remID property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 46,
          "byteOffset": 2113,
          "line": 44,
          "utf16Column": 46,
          "utf16Offset": 2113
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 2067,
          "line": 44,
          "utf16Column": 0,
          "utf16Offset": 2067
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SignUpController/JVFloatLabeledTextView.h",
      "fileSnippet": "@interface JVFloatLabeledTextView : UITextView",
      "html": {
        "info": "The <code class=\"fauxpas-string\">JV</code> prefix is used. Two-character prefixes are reserved for Apple’s system frameworks. The prefixes in your own (or third-party) code should be at least three characters long.",
        "ruleDescription": "Two-character prefixes (such as <code>NS</code>) are reserved for Apple’s system frameworks. Your own code should use prefixes that are three characters long.",
        "ruleName": "Reserved symbol prefix",
        "ruleShortName": "ReservedPrefix",
        "ruleWarning": null
      },
      "identifier": "JV",
      "impact": "Maintainability",
      "info": "The JV prefix is used. Two-character prefixes are reserved for Apple’s system frameworks. The prefixes in your own (or third-party) code should be at least three characters long.",
      "ruleDescription": "Two-character prefixes (such as NS) are reserved for Apple’s system frameworks. Your own code should use prefixes that are three characters long.",
      "ruleName": "Reserved symbol prefix",
      "ruleShortName": "ReservedPrefix",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 55,
          "byteOffset": 3095,
          "line": 93,
          "utf16Column": 54,
          "utf16Offset": 3095
        },
        "start": {
          "byteColumn": 42,
          "byteOffset": 3082,
          "line": 93,
          "utf16Column": 41,
          "utf16Offset": 3082
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreenNew/CHCHomeNewController.m",
      "fileSnippet": "@\"inputImage\"",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns when literal strings are used to specify key paths.</p> <p>Something like <code>NSStringFromSelector(@selector(foo))</code> is safer because it makes the compiler aware of the selector being specified — this helps find typos at compile time and allows automatic refactoring tools to make appropriate changes.</p>",
        "ruleName": "Literal string for key path",
        "ruleShortName": "LiteralStringKeyPath",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when literal strings are used to specify key paths. Something like NSStringFromSelector(@selector(foo)) is safer because it makes the compiler aware of the selector being specified — this helps find typos at compile time and allows automatic refactoring tools to make appropriate changes.",
      "ruleName": "Literal string for key path",
      "ruleShortName": "LiteralStringKeyPath",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initWithCoder:",
      "extent": {
        "end": {
          "byteColumn": 50,
          "byteOffset": 3855,
          "line": 90,
          "utf16Column": 49,
          "utf16Offset": 3854
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 3814,
          "line": 90,
          "utf16Column": 8,
          "utf16Offset": 3813
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/UserModel.m",
      "fileSnippet": "self.profileImageURL = (NSURL*)profileUrl",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "profileImageURL",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 66,
          "byteOffset": 1105,
          "line": 27,
          "utf16Column": 65,
          "utf16Offset": 1105
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 1040,
          "line": 27,
          "utf16Column": 0,
          "utf16Offset": 1040
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCHealthLogScreen/CHCHealthLogController.m",
      "fileSnippet": "@property (strong, nonatomic) NSMutableArray *loggerCtegoriesList",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">Ctegories</code> in the symbol name <code class=\"fauxpas-codesymbol\">loggerCtegoriesList</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "Ctegories",
      "impact": "Style",
      "info": "The word Ctegories in the symbol name loggerCtegoriesList may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCRequestAppointmentNewController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initWithCoder:",
      "extent": {
        "end": {
          "byteColumn": 83,
          "byteOffset": 3411,
          "line": 82,
          "utf16Column": 82,
          "utf16Offset": 3410
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 3333,
          "line": 82,
          "utf16Column": 4,
          "utf16Offset": 3332
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/UserModel.m",
      "fileSnippet": "self.badgeTotalCount        = [aDecoder decodeObjectForKey:@\"badgeTotalCount\"]",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "badgeTotalCount",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/Menu_bg.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/Menu_bg.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCHealthScorecardController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCHome.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIImageView</code> (id <code class=\"fauxpas-string\">S1D-7Z-aT7</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIImageView (id S1D-7Z-aT7)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIImageView (id S1D-7Z-aT7) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCHome.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIImageView</code> (id <code class=\"fauxpas-string\">F3X-jy-Xgh</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIImageView (id F3X-jy-Xgh)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIImageView (id F3X-jy-Xgh) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCHome.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIImageView</code> (id <code class=\"fauxpas-string\">Fap-Gl-OaI</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIImageView (id Fap-Gl-OaI)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIImageView (id Fap-Gl-OaI) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCHome.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIImageView</code> (id <code class=\"fauxpas-string\">aAq-AU-qp8</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIImageView (id aAq-AU-qp8)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIImageView (id aAq-AU-qp8) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCHome.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIImageView</code> (id <code class=\"fauxpas-string\">q3D-mP-TSB</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIImageView (id q3D-mP-TSB)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIImageView (id q3D-mP-TSB) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCHome.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIImageView</code> (id <code class=\"fauxpas-string\">h35-Zh-S7X</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIImageView (id h35-Zh-S7X)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIImageView (id h35-Zh-S7X) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCHome.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIImageView</code> (id <code class=\"fauxpas-string\">E1p-93-sJr</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIImageView (id E1p-93-sJr)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIImageView (id E1p-93-sJr) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCHome.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIImageView</code> (id <code class=\"fauxpas-string\">5Hq-MR-XVh</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIImageView (id 5Hq-MR-XVh)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIImageView (id 5Hq-MR-XVh) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCHome.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIImageView</code> (id <code class=\"fauxpas-string\">HDD-pq-ZzW</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIImageView (id HDD-pq-ZzW)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIImageView (id HDD-pq-ZzW) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCHome.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIImageView</code> (id <code class=\"fauxpas-string\">JE2-CR-rOl</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIImageView (id JE2-CR-rOl)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIImageView (id JE2-CR-rOl) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCHome.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIImageView</code> (id <code class=\"fauxpas-string\">YjE-9b-EbS</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIImageView (id YjE-9b-EbS)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIImageView (id YjE-9b-EbS) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 61,
          "byteOffset": 899,
          "line": 25,
          "utf16Column": 60,
          "utf16Offset": 899
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 839,
          "line": 25,
          "utf16Column": 0,
          "utf16Offset": 839
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCArticleArchiveController.m",
      "fileSnippet": "@property (strong, nonatomic) IBOutlet UILabel *choicepoints",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">choicepoints</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "choicepoints",
      "impact": "Style",
      "info": "The word choicepoints may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Category/UIImage+Extension.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCHome.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIImageView</code> (id <code class=\"fauxpas-string\">n99-dE-lLV</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIImageView (id n99-dE-lLV)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIImageView (id n99-dE-lLV) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/drawable-normal/address_marker_location.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/drawable-normal/address_marker_location.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "CHCHealthSurveyCell",
      "extent": {
        "end": {
          "byteColumn": 56,
          "byteOffset": 459,
          "line": 15,
          "utf16Column": 55,
          "utf16Offset": 459
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 404,
          "line": 15,
          "utf16Column": 0,
          "utf16Offset": 404
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/HomeScreenContentViews/CHCHealthSurveyCell.h",
      "fileSnippet": "@property (strong, nonatomic) IBOutlet UILabel *snipset",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">snipset</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "snipset",
      "impact": "Style",
      "info": "The word snipset may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "AppUserData",
      "extent": {
        "end": {
          "byteColumn": 47,
          "byteOffset": 446,
          "line": 18,
          "utf16Column": 46,
          "utf16Offset": 445
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 400,
          "line": 18,
          "utf16Column": 0,
          "utf16Offset": 399
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/AppUserData/AppUserData.h",
      "fileSnippet": "@property (nonatomic, strong) NSString *usetId",
      "html": {
        "info": "The <code>usetId</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The usetId property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "DoctorModel",
      "extent": {
        "end": {
          "byteColumn": 50,
          "byteOffset": 351,
          "line": 14,
          "utf16Column": 49,
          "utf16Offset": 350
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 302,
          "line": 14,
          "utf16Column": 0,
          "utf16Offset": 301
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/DoctorModel.h",
      "fileSnippet": "@property (nonatomic, strong) NSString *specialty",
      "html": {
        "info": "The <code>specialty</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The specialty property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "fullName",
      "extent": {
        "end": {
          "byteColumn": 58,
          "byteOffset": 7309,
          "line": 187,
          "utf16Column": 57,
          "utf16Offset": 7308
        },
        "start": {
          "byteColumn": 23,
          "byteOffset": 7274,
          "line": 187,
          "utf16Column": 22,
          "utf16Offset": 7273
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/UserModel.m",
      "fileSnippet": "self.lastName ? self.lastName : @\"\"",
      "html": {
        "info": null,
        "ruleDescription": "Expressions of the form <code>(obj ? obj : other)</code> should be written as <code>obj ?: other</code>.",
        "ruleName": "Null coalescing operator usage",
        "ruleShortName": "NullCoalescingOp",
        "ruleWarning": "Please note that in the form <code>(obj ? obj : other)</code> the <code>obj</code> expression is evaluated twice, while in the <code>obj ?: other</code> form it is evaluated only once."
      },
      "identifier": null,
      "impact": "Style",
      "info": null,
      "ruleDescription": "Expressions of the form (obj ? obj : other) should be written as obj ?: other.",
      "ruleName": "Null coalescing operator usage",
      "ruleShortName": "NullCoalescingOp",
      "ruleWarning": "Please note that in the form (obj ? obj : other) the obj expression is evaluated twice, while in the obj ?: other form it is evaluated only once.",
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 30,
          "byteOffset": 386,
          "line": 21,
          "utf16Column": 29,
          "utf16Offset": 386
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 365,
          "line": 21,
          "utf16Column": 8,
          "utf16Offset": 365
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/APIModel/APIClass.m",
      "fileSnippet": "DEFAULT_TIMEOUT 30.0f",
      "html": {
        "info": null,
        "ruleDescription": "<p>Instead of using a macro definition for a literal value that is used as a constant, define it as an actual constant.</p> <p>This makes the scope of the constant more explicit (it’s not available in all imported files until undefined) and it cannot be redefined or undefined in some later part of the code. Macro definitions are also not available in the debugger.</p>",
        "ruleName": "Macro definition for literal value",
        "ruleShortName": "MacroLiteral",
        "ruleWarning": null
      },
      "identifier": "DEFAULT_TIMEOUT",
      "impact": "Style",
      "info": null,
      "ruleDescription": "Instead of using a macro definition for a literal value that is used as a constant, define it as an actual constant. This makes the scope of the constant more explicit (it’s not available in all imported files until undefined) and it cannot be redefined or undefined in some later part of the code. Macro definitions are also not available in the debugger.",
      "ruleName": "Macro definition for literal value",
      "ruleShortName": "MacroLiteral",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 58,
          "byteOffset": 643,
          "line": 25,
          "utf16Column": 57,
          "utf16Offset": 642
        },
        "start": {
          "byteColumn": 51,
          "byteOffset": 636,
          "line": 25,
          "utf16Column": 50,
          "utf16Offset": 635
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyProfileViewController/MyProfileController.m",
      "fileSnippet": "fnameTF",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">fname</code> in the symbol name <code class=\"fauxpas-codesymbol\">fnameTF</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "fname",
      "impact": "Style",
      "info": "The word fname in the symbol name fnameTF may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 61,
          "byteOffset": 10995,
          "line": 241,
          "utf16Column": 60,
          "utf16Offset": 10995
        },
        "start": {
          "byteColumn": 47,
          "byteOffset": 10981,
          "line": 241,
          "utf16Column": 46,
          "utf16Offset": 10981
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCAppointmentDetailsController.m",
      "fileSnippet": "@\"inputRadius\"",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns when literal strings are used to specify key paths.</p> <p>Something like <code>NSStringFromSelector(@selector(foo))</code> is safer because it makes the compiler aware of the selector being specified — this helps find typos at compile time and allows automatic refactoring tools to make appropriate changes.</p>",
        "ruleName": "Literal string for key path",
        "ruleShortName": "LiteralStringKeyPath",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when literal strings are used to specify key paths. Something like NSStringFromSelector(@selector(foo)) is safer because it makes the compiler aware of the selector being specified — this helps find typos at compile time and allows automatic refactoring tools to make appropriate changes.",
      "ruleName": "Literal string for key path",
      "ruleShortName": "LiteralStringKeyPath",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> <code class=\"fauxpas-string\">Leave notification ON to receive an alert for thi…</code> (id <code class=\"fauxpas-string\">3k0-8Z-m2W</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel Leave notification ON to receive an alert for thi… (id 3k0-8Z-m2W)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel Leave notification ON to receive an alert for thi… (id 3k0-8Z-m2W) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 123,
          "byteOffset": 10598,
          "line": 231,
          "utf16Column": 122,
          "utf16Offset": 10598
        },
        "start": {
          "byteColumn": 106,
          "byteOffset": 10581,
          "line": 231,
          "utf16Column": 105,
          "utf16Offset": 10581
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCHealthLogScreen/CHCHealthLogNewController.m",
      "fileSnippet": "@\"inputTransform\"",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns when literal strings are used to specify key paths.</p> <p>Something like <code>NSStringFromSelector(@selector(foo))</code> is safer because it makes the compiler aware of the selector being specified — this helps find typos at compile time and allows automatic refactoring tools to make appropriate changes.</p>",
        "ruleName": "Literal string for key path",
        "ruleShortName": "LiteralStringKeyPath",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when literal strings are used to specify key paths. Something like NSStringFromSelector(@selector(foo)) is safer because it makes the compiler aware of the selector being specified — this helps find typos at compile time and allows automatic refactoring tools to make appropriate changes.",
      "ruleName": "Literal string for key path",
      "ruleShortName": "LiteralStringKeyPath",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "init",
      "extent": {
        "end": {
          "byteColumn": 60,
          "byteOffset": 594,
          "line": 26,
          "utf16Column": 59,
          "utf16Offset": 593
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 539,
          "line": 26,
          "utf16Column": 4,
          "utf16Offset": 538
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/UserModel.m",
      "fileSnippet": "formatter.dateFormat = @\"yyyy'-'MM'-'dd' 'HH':'mm':'ss\"",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns when an <code class=\"fauxpas-objcclass\">NSDateFormatter</code> is used with fixed-format dates without using the invariant <code class=\"fauxpas-string\">en_US_POSIX</code> locale. If any other locale is used, the date format string may be overwritten, depending on system date and time settings.</p> <p>When working with user-visible dates, date and time styles should be used instead of setting a date format.</p>",
        "ruleName": "Fixed-format <code class=\"fauxpas-objcclass\">NSDateFormatter</code> not using invariant (POSIX) locale",
        "ruleShortName": "FixedFormatDateFormatter",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Warns when an NSDateFormatter is used with fixed-format dates without using the invariant en_US_POSIX locale. If any other locale is used, the date format string may be overwritten, depending on system date and time settings. When working with user-visible dates, date and time styles should be used instead of setting a date format.",
      "ruleName": "Fixed-format NSDateFormatter not using invariant (POSIX) locale",
      "ruleShortName": "FixedFormatDateFormatter",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 44,
          "byteOffset": 214,
          "line": 11,
          "utf16Column": 44,
          "utf16Offset": 213
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 170,
          "line": 11,
          "utf16Column": 0,
          "utf16Offset": 169
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyMedicationsController/MedicationsCell.h",
      "fileSnippet": "@interface MedicationsCell : UITableViewCell",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "MedicationsCell",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "RegistrationSurveyController",
      "extent": {
        "end": {
          "byteColumn": 51,
          "byteOffset": 1253,
          "line": 32,
          "utf16Column": 50,
          "utf16Offset": 1252
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 1203,
          "line": 32,
          "utf16Column": 0,
          "utf16Offset": 1202
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SurveysController/RegistrationSurveyController.h",
      "fileSnippet": "@property (strong, nonatomic) NSString *medicalQId",
      "html": {
        "info": "The <code>medicalQId</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The medicalQId property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCHealthLogScreen/HorizontalTableViewCell.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "getImageName:withBGColor:andSize:",
      "extent": {
        "end": {
          "byteColumn": 56,
          "byteOffset": 956,
          "line": 32,
          "utf16Column": 55,
          "utf16Offset": 955
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 913,
          "line": 32,
          "utf16Column": 12,
          "utf16Offset": 912
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Category/UIImage+Extension.m",
      "fileSnippet": "color == nil ? [UIColor clearColor] : color",
      "html": {
        "info": null,
        "ruleDescription": "Expressions of the form <code>(obj ? obj : other)</code> should be written as <code>obj ?: other</code>.",
        "ruleName": "Null coalescing operator usage",
        "ruleShortName": "NullCoalescingOp",
        "ruleWarning": "Please note that in the form <code>(obj ? obj : other)</code> the <code>obj</code> expression is evaluated twice, while in the <code>obj ?: other</code> form it is evaluated only once."
      },
      "identifier": null,
      "impact": "Style",
      "info": null,
      "ruleDescription": "Expressions of the form (obj ? obj : other) should be written as obj ?: other.",
      "ruleName": "Null coalescing operator usage",
      "ruleShortName": "NullCoalescingOp",
      "ruleWarning": "Please note that in the form (obj ? obj : other) the obj expression is evaluated twice, while in the obj ?: other form it is evaluated only once.",
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "IQToolbarAddition",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 15238,
          "line": 355,
          "utf16Column": 178,
          "utf16Offset": 15238
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 15060,
          "line": 354,
          "utf16Column": 0,
          "utf16Offset": 15060
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/IQToolbar/IQUIView+IQKeyboardToolbar.m",
      "fileSnippet": "- (void)addPreviousNextDoneOnKeyboardWithTarget:(id)target previousAction:(SEL)previousAction nextAction:(SEL)nextAction doneAction:(SEL)doneAction titleText:(NSString*)titleText",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "-[UIView addPreviousNextDoneOnKeyboardWithTarget:previousAction:nextAction:doneAction:titleText:]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Images.xcassets/Earn Points/calendar-blue.imageset",
      "fileSnippet": null,
      "html": {
        "info": "Asset catalog ‘Images’, set ‘calendar-blue’: The ‘x3 scale, Universal’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "Asset catalog ‘Images’, set ‘calendar-blue’: The ‘x3 scale, Universal’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Images.xcassets/Earn Points/calendar-blue.imageset",
      "fileSnippet": null,
      "html": {
        "info": "Asset catalog ‘Images’, set ‘calendar-blue’: The ‘x2 scale, Universal’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "Asset catalog ‘Images’, set ‘calendar-blue’: The ‘x2 scale, Universal’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Images.xcassets/Earn Points/firstaid-blue.imageset",
      "fileSnippet": null,
      "html": {
        "info": "Asset catalog ‘Images’, set ‘firstaid-blue’: The ‘x3 scale, Universal’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "Asset catalog ‘Images’, set ‘firstaid-blue’: The ‘x3 scale, Universal’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Images.xcassets/Earn Points/firstaid-blue.imageset",
      "fileSnippet": null,
      "html": {
        "info": "Asset catalog ‘Images’, set ‘firstaid-blue’: The ‘x2 scale, Universal’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "Asset catalog ‘Images’, set ‘firstaid-blue’: The ‘x2 scale, Universal’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Images.xcassets/Earn Points/question-blue.imageset",
      "fileSnippet": null,
      "html": {
        "info": "Asset catalog ‘Images’, set ‘question-blue’: The ‘x3 scale, Universal’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "Asset catalog ‘Images’, set ‘question-blue’: The ‘x3 scale, Universal’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Images.xcassets/Earn Points/question-blue.imageset",
      "fileSnippet": null,
      "html": {
        "info": "Asset catalog ‘Images’, set ‘question-blue’: The ‘x2 scale, Universal’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "Asset catalog ‘Images’, set ‘question-blue’: The ‘x2 scale, Universal’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": "ListSurveysViewController",
      "extent": {
        "end": {
          "byteColumn": 66,
          "byteOffset": 1400,
          "line": 49,
          "utf16Column": 65,
          "utf16Offset": 1399
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 1335,
          "line": 49,
          "utf16Column": 0,
          "utf16Offset": 1334
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SurveysController/ListSurveysViewController.m",
      "fileSnippet": "- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns about Objective-C methods to which no references are found.</p> <p>This rule will not warn about <code class=\"fauxpas-codesymbol\">IBAction</code> methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form <code class=\"fauxpas-string\">*+Private.h</code>). It also won’t warn about unused getter methods whose setter is used, and vice versa.</p>",
        "ruleName": "Possibly unused Objective-C method",
        "ruleShortName": "UnusedMethod",
        "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool)."
      },
      "identifier": "-[ListSurveysViewController numberOfSectionsInTableView:]",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns about Objective-C methods to which no references are found. This rule will not warn about IBAction methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form *+Private.h). It also won’t warn about unused getter methods whose setter is used, and vice versa.",
      "ruleName": "Possibly unused Objective-C method",
      "ruleShortName": "UnusedMethod",
      "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool).",
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 62,
          "byteOffset": 963,
          "line": 24,
          "utf16Column": 61,
          "utf16Offset": 963
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 902,
          "line": 24,
          "utf16Column": 0,
          "utf16Offset": 902
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCHealthLogScreen/CHCHealthLogController.m",
      "fileSnippet": "@property (strong, nonatomic) IBOutlet UILabel      *unittype",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">unittype</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "unittype",
      "impact": "Style",
      "info": "The word unittype may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/drawable/afternoon.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/drawable/afternoon.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 43,
          "byteOffset": 267,
          "line": 13,
          "utf16Column": 43,
          "utf16Offset": 266
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 224,
          "line": 13,
          "utf16Column": 0,
          "utf16Offset": 223
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/RevealViewController/RevealViewCell.h",
      "fileSnippet": "@interface RevealViewCell : UITableViewCell",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "RevealViewCell",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 66,
          "byteOffset": 1105,
          "line": 27,
          "utf16Column": 65,
          "utf16Offset": 1105
        },
        "start": {
          "byteColumn": 47,
          "byteOffset": 1086,
          "line": 27,
          "utf16Column": 46,
          "utf16Offset": 1086
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCHealthLogScreen/CHCHealthLogController.m",
      "fileSnippet": "loggerCtegoriesList",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">Ctegories</code> in the symbol name <code class=\"fauxpas-codesymbol\">loggerCtegoriesList</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "Ctegories",
      "impact": "Style",
      "info": "The word Ctegories in the symbol name loggerCtegoriesList may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/RevealViewController/RevealViewCell.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 93,
          "byteOffset": 1144,
          "line": 27,
          "utf16Column": 92,
          "utf16Offset": 1144
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 1052,
          "line": 27,
          "utf16Column": 0,
          "utf16Offset": 1052
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCRewardsCatalogController.m",
      "fileSnippet": "@property (weak, nonatomic) IBOutlet NSLayoutConstraint *choicePointRewardVerticleConstraint",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">Verticle</code> in the symbol name <code class=\"fauxpas-codesymbol\">choicePointRewardVerticleConstraint</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "Verticle",
      "impact": "Style",
      "info": "The word Verticle in the symbol name choicePointRewardVerticleConstraint may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 61,
          "byteOffset": 899,
          "line": 25,
          "utf16Column": 60,
          "utf16Offset": 899
        },
        "start": {
          "byteColumn": 49,
          "byteOffset": 887,
          "line": 25,
          "utf16Column": 48,
          "utf16Offset": 887
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCArticleArchiveController.m",
      "fileSnippet": "choicepoints",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">Choicepoints</code> in the symbol name <code class=\"fauxpas-codesymbol\">setChoicepoints:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "Choicepoints",
      "impact": "Style",
      "info": "The word Choicepoints in the symbol name setChoicepoints: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "CHCArticleCell",
      "extent": {
        "end": {
          "byteColumn": 56,
          "byteOffset": 393,
          "line": 16,
          "utf16Column": 55,
          "utf16Offset": 393
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 338,
          "line": 16,
          "utf16Column": 0,
          "utf16Offset": 338
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/HomeScreenContentViews/CHCArticleCell.h",
      "fileSnippet": "@property (strong, nonatomic) IBOutlet UILabel *snipset",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">snipset</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "snipset",
      "impact": "Style",
      "info": "The word snipset may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 170,
          "byteOffset": 391,
          "line": 12,
          "utf16Column": 170,
          "utf16Offset": 390
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 221,
          "line": 12,
          "utf16Column": 0,
          "utf16Offset": 220
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyProfileViewController/MyProfileController.h",
      "fileSnippet": "@interface MyProfileController : BaseViewController <UINavigationControllerDelegate,UIImagePickerControllerDelegate, UITextFieldDelegate, IQActionSheetPickerViewDelegate>",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "MyProfileController",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/IQActionSheetPickerView.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initWithHeaderTitle:cancelButtonTitle:confirmButtonTitle:",
      "extent": {
        "end": {
          "byteColumn": 53,
          "byteOffset": 1723,
          "line": 55,
          "utf16Column": 52,
          "utf16Offset": 1723
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 1679,
          "line": 55,
          "utf16Column": 8,
          "utf16Offset": 1679
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/CZPickerView.m",
      "fileSnippet": "self.headerTitleColor = [UIColor whiteColor]",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "headerTitleColor",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initWithCoder:",
      "extent": {
        "end": {
          "byteColumn": 74,
          "byteOffset": 2417,
          "line": 64,
          "utf16Column": 73,
          "utf16Offset": 2416
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 2348,
          "line": 64,
          "utf16Column": 4,
          "utf16Offset": 2347
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/UserModel.m",
      "fileSnippet": "self.pointTotal         = [aDecoder decodeObjectForKey:@\"pointTotal\"]",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "pointTotal",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/CustomViews/CustomView.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "CHCArticleDetails",
      "extent": {
        "end": {
          "byteColumn": 50,
          "byteOffset": 274,
          "line": 13,
          "utf16Column": 49,
          "utf16Offset": 274
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 225,
          "line": 13,
          "utf16Column": 0,
          "utf16Offset": 225
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCArticleDetails.h",
      "fileSnippet": "@property (nonatomic, strong) NSString *articleId",
      "html": {
        "info": "The <code>articleId</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The articleId property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": "setUpCellWithDictionary:tapHandler:",
      "extent": {
        "end": {
          "byteColumn": 100,
          "byteOffset": 539,
          "line": 24,
          "utf16Column": 99,
          "utf16Offset": 538
        },
        "start": {
          "byteColumn": 71,
          "byteOffset": 510,
          "line": 24,
          "utf16Column": 70,
          "utf16Offset": 509
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/HEDISViewController/HEDISSubCell.m",
      "fileSnippet": "void (^)(BOOL selected))block",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended that typedef be used for all block-typed declarations, for readability.",
        "ruleName": "Block-typed declaration without typedef",
        "ruleShortName": "NonTypedefBlockDeclaration",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": null,
      "ruleDescription": "It is recommended that typedef be used for all block-typed declarations, for readability.",
      "ruleName": "Block-typed declaration without typedef",
      "ruleShortName": "NonTypedefBlockDeclaration",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "doneButtonClick:",
      "extent": {
        "end": {
          "byteColumn": 41,
          "byteOffset": 12749,
          "line": 270,
          "utf16Column": 40,
          "utf16Offset": 12749
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 12713,
          "line": 270,
          "utf16Column": 4,
          "utf16Offset": 12713
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCHealthLogScreen/CHCHealthLogController.m",
      "fileSnippet": "formatter.dateFormat = @\"MM/dd/yyyy\"",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns when an <code class=\"fauxpas-objcclass\">NSDateFormatter</code> is used with fixed-format dates without using the invariant <code class=\"fauxpas-string\">en_US_POSIX</code> locale. If any other locale is used, the date format string may be overwritten, depending on system date and time settings.</p> <p>When working with user-visible dates, date and time styles should be used instead of setting a date format.</p>",
        "ruleName": "Fixed-format <code class=\"fauxpas-objcclass\">NSDateFormatter</code> not using invariant (POSIX) locale",
        "ruleShortName": "FixedFormatDateFormatter",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Warns when an NSDateFormatter is used with fixed-format dates without using the invariant en_US_POSIX locale. If any other locale is used, the date format string may be overwritten, depending on system date and time settings. When working with user-visible dates, date and time styles should be used instead of setting a date format.",
      "ruleName": "Fixed-format NSDateFormatter not using invariant (POSIX) locale",
      "ruleShortName": "FixedFormatDateFormatter",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initWithCoder:",
      "extent": {
        "end": {
          "byteColumn": 76,
          "byteOffset": 2494,
          "line": 65,
          "utf16Column": 75,
          "utf16Offset": 2493
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 2423,
          "line": 65,
          "utf16Column": 4,
          "utf16Offset": 2422
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/UserModel.m",
      "fileSnippet": "self.sessionToken       = [aDecoder decodeObjectForKey:@\"sessionToken\"]",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "sessionToken",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/Categories/IQUITextFieldView+Additions.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/drawable/afternoon_selected.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/drawable/afternoon_selected.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initWithHeaderTitle:cancelButtonTitle:confirmButtonTitle:",
      "extent": {
        "end": {
          "byteColumn": 61,
          "byteOffset": 2206,
          "line": 62,
          "utf16Column": 60,
          "utf16Offset": 2206
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 2154,
          "line": 62,
          "utf16Column": 8,
          "utf16Offset": 2154
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/CZPickerView.m",
      "fileSnippet": "self.confirmButtonNormalColor = [UIColor whiteColor]",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "confirmButtonNormalColor",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "_setFrontViewPosition:withDuration:",
      "extent": {
        "end": {
          "byteColumn": 38,
          "byteOffset": 38213,
          "line": 1144,
          "utf16Column": 37,
          "utf16Offset": 38213
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 38184,
          "line": 1144,
          "utf16Column": 8,
          "utf16Offset": 38184
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/SWRevealViewController.m",
      "fileSnippet": "[_contentView layoutSubviews]",
      "html": {
        "info": "<p>The <code class=\"fauxpas-objcmethod\">-[UIView layoutSubviews]</code> method should not be called directly.</p><p>See more about this from <div class=\"fauxpas-docs\">the documentation for this method</div>.</p>",
        "ruleDescription": "<p>Some methods of system classes should not be called directly.</p> <p>This rule will not warn about overriding methods that call the superclass implementation.</p>",
        "ruleName": "Restricted direct method call",
        "ruleShortName": "RestrictedDirectMethodCall",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The -[UIView layoutSubviews] method should not be called directly.See more about this from the documentation for this method.",
      "ruleDescription": "Some methods of system classes should not be called directly. This rule will not warn about overriding methods that call the superclass implementation.",
      "ruleName": "Restricted direct method call",
      "ruleShortName": "RestrictedDirectMethodCall",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "SurveysViewController",
      "extent": {
        "end": {
          "byteColumn": 44,
          "byteOffset": 590,
          "line": 20,
          "utf16Column": 43,
          "utf16Offset": 589
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 547,
          "line": 20,
          "utf16Column": 0,
          "utf16Offset": 546
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SurveysController/SurveysViewController.h",
      "fileSnippet": "@property (nonatomic, strong) NSString *sid",
      "html": {
        "info": "The <code>sid</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The sid property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "IQ_NSArray_Sort",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 1350,
          "line": 32,
          "utf16Column": 28,
          "utf16Offset": 1350
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 1322,
          "line": 31,
          "utf16Column": 0,
          "utf16Offset": 1322
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/Categories/IQNSArray+Sort.m",
      "fileSnippet": "- (NSArray*)sortedArrayByTag",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "-[NSArray sortedArrayByTag]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/drawable-mdpi/ic_drawer copy@2x.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘non-retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘non-retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/Couple Workout.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/Couple Workout.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "IQToolbarAddition",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 25817,
          "line": 573,
          "utf16Column": 251,
          "utf16Offset": 25817
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 25566,
          "line": 572,
          "utf16Column": 0,
          "utf16Offset": 25566
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/IQToolbar/IQUIView+IQKeyboardToolbar.m",
      "fileSnippet": "- (void)addPreviousNextRightOnKeyboardWithTarget:(id)target rightButtonTitle:(NSString*)rightButtonTitle previousAction:(SEL)previousAction nextAction:(SEL)nextAction rightButtonAction:(SEL)rightButtonAction shouldShowPlaceholder:(BOOL)showPlaceholder",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "-[UIView addPreviousNextRightOnKeyboardWithTarget:rightButtonTitle:previousAction:nextAction:rightButtonAction:shouldShowPlaceholder:]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 32,
          "byteOffset": 764,
          "line": 35,
          "utf16Column": 32,
          "utf16Offset": 764
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 732,
          "line": 35,
          "utf16Column": 0,
          "utf16Offset": 732
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/ProgressView/ProgressView.h",
      "fileSnippet": "@interface ProgressView : UIView",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "ProgressView",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/drawable-mdpi/safari_icon.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/drawable-mdpi/safari_icon.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ArticleModel",
      "extent": {
        "end": {
          "byteColumn": 57,
          "byteOffset": 532,
          "line": 18,
          "utf16Column": 56,
          "utf16Offset": 531
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 476,
          "line": 18,
          "utf16Column": 0,
          "utf16Offset": 475
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/ArticleModel.h",
      "fileSnippet": "@property (nonatomic, strong) NSString *articlePhotoPath",
      "html": {
        "info": "The <code>articlePhotoPath</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The articlePhotoPath property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": "CHCChildDetailsController",
      "extent": {
        "end": {
          "byteColumn": 29,
          "byteOffset": 10032,
          "line": 243,
          "utf16Column": 28,
          "utf16Offset": 10032
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 10004,
          "line": 243,
          "utf16Column": 0,
          "utf16Offset": 10004
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCSurveyScreen/CHCChildDetailsController.m",
      "fileSnippet": "-(BOOL)saveDetailsIntoAnArra",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns about Objective-C methods to which no references are found.</p> <p>This rule will not warn about <code class=\"fauxpas-codesymbol\">IBAction</code> methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form <code class=\"fauxpas-string\">*+Private.h</code>). It also won’t warn about unused getter methods whose setter is used, and vice versa.</p>",
        "ruleName": "Possibly unused Objective-C method",
        "ruleShortName": "UnusedMethod",
        "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool)."
      },
      "identifier": "-[CHCChildDetailsController saveDetailsIntoAnArray]",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns about Objective-C methods to which no references are found. This rule will not warn about IBAction methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form *+Private.h). It also won’t warn about unused getter methods whose setter is used, and vice versa.",
      "ruleName": "Possibly unused Objective-C method",
      "ruleShortName": "UnusedMethod",
      "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool).",
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initWithHeaderTitle:cancelButtonTitle:confirmButtonTitle:",
      "extent": {
        "end": {
          "byteColumn": 33,
          "byteOffset": 1404,
          "line": 47,
          "utf16Column": 32,
          "utf16Offset": 1404
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 1380,
          "line": 47,
          "utf16Column": 8,
          "utf16Offset": 1380
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/CZPickerView.m",
      "fileSnippet": "self.needFooterView = NO",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "needFooterView",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 41,
          "byteOffset": 1957,
          "line": 56,
          "utf16Column": 40,
          "utf16Offset": 1957
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 1917,
          "line": 56,
          "utf16Column": 0,
          "utf16Offset": 1917
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCSurveyScreen/CHCSurveyController.m",
      "fileSnippet": "@property (nonatomic) NSInteger answerid",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">answerid</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "answerid",
      "impact": "Style",
      "info": "The word answerid may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 31,
          "byteOffset": 193,
          "line": 11,
          "utf16Column": 31,
          "utf16Offset": 193
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 162,
          "line": 11,
          "utf16Column": 0,
          "utf16Offset": 162
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/GIBadgeView.h",
      "fileSnippet": "@interface GIBadgeView : UIView",
      "html": {
        "info": "The <code class=\"fauxpas-string\">GI</code> prefix is used. Two-character prefixes are reserved for Apple’s system frameworks. The prefixes in your own (or third-party) code should be at least three characters long.",
        "ruleDescription": "Two-character prefixes (such as <code>NS</code>) are reserved for Apple’s system frameworks. Your own code should use prefixes that are three characters long.",
        "ruleName": "Reserved symbol prefix",
        "ruleShortName": "ReservedPrefix",
        "ruleWarning": null
      },
      "identifier": "GI",
      "impact": "Maintainability",
      "info": "The GI prefix is used. Two-character prefixes are reserved for Apple’s system frameworks. The prefixes in your own (or third-party) code should be at least three characters long.",
      "ruleDescription": "Two-character prefixes (such as NS) are reserved for Apple’s system frameworks. Your own code should use prefixes that are three characters long.",
      "ruleName": "Reserved symbol prefix",
      "ruleShortName": "ReservedPrefix",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/IQToolbar/IQBarButtonItem.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "IQToolbarAddition",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 2266,
          "line": 57,
          "utf16Column": 60,
          "utf16Offset": 2266
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 2206,
          "line": 56,
          "utf16Column": 0,
          "utf16Offset": 2206
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/IQToolbar/IQUIView+IQKeyboardToolbar.m",
      "fileSnippet": "-(void)setCustomPreviousTarget:(id)target action:(SEL)action",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "-[UIView setCustomPreviousTarget:action:]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/Add-Icon@2x.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘non-retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘non-retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/ic_forward1 copy.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/ic_forward1 copy.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 62,
          "byteOffset": 254,
          "line": 11,
          "utf16Column": 62,
          "utf16Offset": 253
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 192,
          "line": 11,
          "utf16Column": 0,
          "utf16Offset": 191
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/HealthDashboardViewController/HealthDashbooardViewController.h",
      "fileSnippet": "@interface HealthDashbooardViewController : BaseViewController",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "HealthDashbooardViewController",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": "LocationManager",
      "extent": {
        "end": {
          "byteColumn": 39,
          "byteOffset": 1447,
          "line": 61,
          "utf16Column": 38,
          "utf16Offset": 1447
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 1409,
          "line": 61,
          "utf16Column": 0,
          "utf16Offset": 1409
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/LocationManager.m",
      "fileSnippet": "- (void)setTrackingStrategyMediumPower",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns about Objective-C methods to which no references are found.</p> <p>This rule will not warn about <code class=\"fauxpas-codesymbol\">IBAction</code> methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form <code class=\"fauxpas-string\">*+Private.h</code>). It also won’t warn about unused getter methods whose setter is used, and vice versa.</p>",
        "ruleName": "Possibly unused Objective-C method",
        "ruleShortName": "UnusedMethod",
        "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool)."
      },
      "identifier": "-[LocationManager setTrackingStrategyMediumPower]",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns about Objective-C methods to which no references are found. This rule will not warn about IBAction methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form *+Private.h). It also won’t warn about unused getter methods whose setter is used, and vice versa.",
      "ruleName": "Possibly unused Objective-C method",
      "ruleShortName": "UnusedMethod",
      "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool).",
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initWithHeaderTitle:cancelButtonTitle:confirmButtonTitle:",
      "extent": {
        "end": {
          "byteColumn": 115,
          "byteOffset": 2135,
          "line": 60,
          "utf16Column": 114,
          "utf16Offset": 2135
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 2029,
          "line": 60,
          "utf16Column": 8,
          "utf16Offset": 2029
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/CZPickerView.m",
      "fileSnippet": "self.cancelButtonBackgroundColor = [UIColor colorWithRed:236.0/255 green:240/255.0 blue:241.0/255 alpha:1]",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "cancelButtonBackgroundColor",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "IQToolbarAddition",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 20053,
          "line": 457,
          "utf16Column": 190,
          "utf16Offset": 20053
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 19863,
          "line": 456,
          "utf16Column": 0,
          "utf16Offset": 19863
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/IQToolbar/IQUIView+IQKeyboardToolbar.m",
      "fileSnippet": "-(void)addPreviousNextDoneOnKeyboardWithTarget:(id)target previousAction:(SEL)previousAction nextAction:(SEL)nextAction doneAction:(SEL)doneAction shouldShowPlaceholder:(BOOL)showPlaceholder",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "-[UIView addPreviousNextDoneOnKeyboardWithTarget:previousAction:nextAction:doneAction:shouldShowPlaceholder:]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "SearchDoctorController",
      "extent": {
        "end": {
          "byteColumn": 58,
          "byteOffset": 10029,
          "line": 295,
          "utf16Column": 57,
          "utf16Offset": 10028
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 9972,
          "line": 295,
          "utf16Column": 0,
          "utf16Offset": 9971
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/SearchDoctorController.m",
      "fileSnippet": "- (void)czpickerViewDidDisplay:(CZPickerView *)pickerView",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">czpicker</code> in the symbol name <code class=\"fauxpas-codesymbol\">czpickerViewDidDisplay:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "czpicker",
      "impact": "Style",
      "info": "The word czpicker in the symbol name czpickerViewDidDisplay: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 102,
          "byteOffset": 5415,
          "line": 179,
          "utf16Column": 101,
          "utf16Offset": 5414
        },
        "start": {
          "byteColumn": 88,
          "byteOffset": 5401,
          "line": 179,
          "utf16Column": 87,
          "utf16Offset": 5400
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SignUpController/CHCSignUpController.m",
      "fileSnippet": "@\"tokenString\"",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns when literal strings are used to specify key paths.</p> <p>Something like <code>NSStringFromSelector(@selector(foo))</code> is safer because it makes the compiler aware of the selector being specified — this helps find typos at compile time and allows automatic refactoring tools to make appropriate changes.</p>",
        "ruleName": "Literal string for key path",
        "ruleShortName": "LiteralStringKeyPath",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when literal strings are used to specify key paths. Something like NSStringFromSelector(@selector(foo)) is safer because it makes the compiler aware of the selector being specified — this helps find typos at compile time and allows automatic refactoring tools to make appropriate changes.",
      "ruleName": "Literal string for key path",
      "ruleShortName": "LiteralStringKeyPath",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/HomeScreenContentViews/CHCArticleCell.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "CHCHealthLogSurveyDetails",
      "extent": {
        "end": {
          "byteColumn": 48,
          "byteOffset": 392,
          "line": 15,
          "utf16Column": 47,
          "utf16Offset": 392
        },
        "start": {
          "byteColumn": 41,
          "byteOffset": 385,
          "line": 15,
          "utf16Column": 40,
          "utf16Offset": 385
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCHealthLogSurveyDetails.h",
      "fileSnippet": "snipset",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">Snipset</code> in the symbol name <code class=\"fauxpas-codesymbol\">setSnipset:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "Snipset",
      "impact": "Style",
      "info": "The word Snipset in the symbol name setSnipset: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyMedicationsController/CreateMedicationView.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 78,
          "byteOffset": 8118,
          "line": 250,
          "utf16Column": 77,
          "utf16Offset": 8117
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 8049,
          "line": 250,
          "utf16Column": 8,
          "utf16Offset": 8048
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/ScheduleAppointmentNew.m",
      "fileSnippet": "default:                                                        break",
      "html": {
        "info": null,
        "ruleDescription": "<p>If a switch statement explicitly handles all possible values, then the default case is unnecessary dead code, and might even be misleading to people reading the code.</p> <p>If the intended purpose of the default case is to safeguard against enum fields that are added in the future but accidentally left unhandled in the switch, the compiler warning <code>-Wswitch-enum</code> is recommended for that purpose instead.</p>",
        "ruleName": "Unnecessary default case in exhaustive switch statement",
        "ruleShortName": "DefaultInExhaustiveSwitch",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "If a switch statement explicitly handles all possible values, then the default case is unnecessary dead code, and might even be misleading to people reading the code. If the intended purpose of the default case is to safeguard against enum fields that are added in the future but accidentally left unhandled in the switch, the compiler warning -Wswitch-enum is recommended for that purpose instead.",
      "ruleName": "Unnecessary default case in exhaustive switch statement",
      "ruleShortName": "DefaultInExhaustiveSwitch",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 142,
          "byteOffset": 1006,
          "line": 31,
          "utf16Column": 141,
          "utf16Offset": 1005
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 869,
          "line": 31,
          "utf16Column": 4,
          "utf16Offset": 868
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/DashboardViewController/DashboardViewController.m",
      "fileSnippet": "[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(scheduledApponitment) name: @\"scheduledApponitment\" object:nil]",
      "html": {
        "info": null,
        "ruleDescription": "<p>You must invoke <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:]</code> or <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:name:object:]</code> before the observer object is deallocated.</p> <p>This rule only considers cases where the observer reference is <code>self</code>, or an instance variable or an Objective-C property in <code>self</code>.</p> <p>This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).</p>",
        "ruleName": "Missing <code class=\"fauxpas-objcclass\">NSNotificationCenter</code> observer detachment",
        "ruleShortName": "MissingNotificationCenterDetachment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "You must invoke -[NSNotificationCenter removeObserver:] or -[NSNotificationCenter removeObserver:name:object:] before the observer object is deallocated. This rule only considers cases where the observer reference is self, or an instance variable or an Objective-C property in self. This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).",
      "ruleName": "Missing NSNotificationCenter observer detachment",
      "ruleShortName": "MissingNotificationCenterDetachment",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "init",
      "extent": {
        "end": {
          "byteColumn": 64,
          "byteOffset": 750,
          "line": 36,
          "utf16Column": 63,
          "utf16Offset": 750
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 695,
          "line": 36,
          "utf16Column": 8,
          "utf16Offset": 695
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/LocationManager.m",
      "fileSnippet": "self.locationManager = [[CLLocationManager alloc] init]",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "locationManager",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/drawable-xxhdpi/ic_drawer.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/drawable-xxhdpi/ic_drawer.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> <code class=\"fauxpas-string\">My Choice Points History</code> (id <code class=\"fauxpas-string\">djA-fq-cM2</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel My Choice Points History (id djA-fq-cM2)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel My Choice Points History (id djA-fq-cM2) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 30,
          "byteOffset": 210,
          "line": 13,
          "utf16Column": 30,
          "utf16Offset": 209
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 180,
          "line": 13,
          "utf16Column": 0,
          "utf16Offset": 179
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/CustomViews/CustomView.h",
      "fileSnippet": "@interface CustomView : UIView",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "CustomView",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ScheduleAppointmentNew",
      "extent": {
        "end": {
          "byteColumn": 59,
          "byteOffset": 913,
          "line": 23,
          "utf16Column": 58,
          "utf16Offset": 912
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 855,
          "line": 23,
          "utf16Column": 0,
          "utf16Offset": 854
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/ScheduleAppointmentNew.h",
      "fileSnippet": "@property (nonatomic, strong) NSDictionary *apptDictionary",
      "html": {
        "info": "The <code>apptDictionary</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The apptDictionary property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 46,
          "byteOffset": 240,
          "line": 13,
          "utf16Column": 46,
          "utf16Offset": 239
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 194,
          "line": 13,
          "utf16Column": 0,
          "utf16Offset": 193
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/ArticlesViewController/ArticlesTableCell.h",
      "fileSnippet": "@interface ArticlesTableCell : UITableViewCell",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "ArticlesTableCell",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 79,
          "byteOffset": 3523,
          "line": 89,
          "utf16Column": 78,
          "utf16Offset": 3523
        },
        "start": {
          "byteColumn": 66,
          "byteOffset": 3510,
          "line": 89,
          "utf16Column": 65,
          "utf16Offset": 3510
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCHomeController.m",
      "fileSnippet": "@\"inputImage\"",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns when literal strings are used to specify key paths.</p> <p>Something like <code>NSStringFromSelector(@selector(foo))</code> is safer because it makes the compiler aware of the selector being specified — this helps find typos at compile time and allows automatic refactoring tools to make appropriate changes.</p>",
        "ruleName": "Literal string for key path",
        "ruleShortName": "LiteralStringKeyPath",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when literal strings are used to specify key paths. Something like NSStringFromSelector(@selector(foo)) is safer because it makes the compiler aware of the selector being specified — this helps find typos at compile time and allows automatic refactoring tools to make appropriate changes.",
      "ruleName": "Literal string for key path",
      "ruleShortName": "LiteralStringKeyPath",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "IQActionSheetPickerView",
      "extent": {
        "end": {
          "byteColumn": 58,
          "byteOffset": 5832,
          "line": 158,
          "utf16Column": 57,
          "utf16Offset": 5832
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 5775,
          "line": 158,
          "utf16Column": 0,
          "utf16Offset": 5775
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/IQActionSheetPickerView.h",
      "fileSnippet": "@property(nonatomic, strong) NSArray *widthsForComponents",
      "html": {
        "info": "The <code>widthsForComponents</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The widthsForComponents property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Images.xcassets/Dashboard/Health-icon.imageset/Choice Points App_Design_02-15-16-06 heart-3x.png",
      "fileSnippet": null,
      "html": {
        "info": "Asset catalog ‘Images’, set ‘Health-icon’: <div class=\"fauxpas-filename\">Choice Points App_Design_02-15-16-06 heart-3x.png</div> (x3 scale) resolution (431 x 467) should be 432 x 468.",
        "ruleDescription": "The retina (‘@2x’ or ‘@3x’) version of an image resource must be exactly double or triple the size of the corresponding low-resolution image (assuming the point size of the presentation context remains the same regardless of screen resolution). Otherwise the effective resolution of the image will not match the effective resolution of its presentation context, which will lead to a blurry image, empty space at the edges, or overflow.",
        "ruleName": "Unexpected retina image resolution",
        "ruleShortName": "RetinaImagesResolution",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "Asset catalog ‘Images’, set ‘Health-icon’: Choice Points App_Design_02-15-16-06 heart-3x.png (x3 scale) resolution (431 x 467) should be 432 x 468.",
      "ruleDescription": "The retina (‘@2x’ or ‘@3x’) version of an image resource must be exactly double or triple the size of the corresponding low-resolution image (assuming the point size of the presentation context remains the same regardless of screen resolution). Otherwise the effective resolution of the image will not match the effective resolution of its presentation context, which will lead to a blurry image, empty space at the edges, or overflow.",
      "ruleName": "Unexpected retina image resolution",
      "ruleShortName": "RetinaImagesResolution",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/RequestCompleteView.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "IQ_UIView_Hierarchy",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 2799,
          "line": 71,
          "utf16Column": 38,
          "utf16Offset": 2799
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 2761,
          "line": 70,
          "utf16Column": 0,
          "utf16Offset": 2761
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/Categories/IQUIView+Hierarchy.m",
      "fileSnippet": "-(BOOL)isAskingCanBecomeFirstResponder",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "-[UIView isAskingCanBecomeFirstResponder]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/drawable-large/addressMarker@2x.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘non-retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘non-retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCSurveyScreen/ChildDetails.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "IQ_UIView_Hierarchy",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 9539,
          "line": 311,
          "utf16Column": 27,
          "utf16Offset": 9539
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 9512,
          "line": 310,
          "utf16Column": 0,
          "utf16Offset": 9512
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/Categories/IQUIView+Hierarchy.m",
      "fileSnippet": "-(BOOL)isAlertViewTextField",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "-[UIView isAlertViewTextField]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "_rearViewDeploymentForNewFrontViewPosition:",
      "extent": {
        "end": {
          "byteColumn": 44,
          "byteOffset": 42917,
          "line": 1266,
          "utf16Column": 43,
          "utf16Offset": 42917
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 42882,
          "line": 1266,
          "utf16Column": 8,
          "utf16Offset": 42882
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/SWRevealViewController.m",
      "fileSnippet": "newPosition = FrontViewPositionLeft",
      "html": {
        "info": null,
        "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
        "ruleName": "Modifying the value of an argument variable",
        "ruleShortName": "ArgumentModification",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
      "ruleName": "Modifying the value of an argument variable",
      "ruleShortName": "ArgumentModification",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "dealloc",
      "extent": {
        "end": {
          "byteColumn": 29,
          "byteOffset": 5838,
          "line": 185,
          "utf16Column": 28,
          "utf16Offset": 5838
        },
        "start": {
          "byteColumn": 2,
          "byteOffset": 5811,
          "line": 185,
          "utf16Column": 1,
          "utf16Offset": 5811
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/APIModel/Reachability.m",
      "fileSnippet": "self.unreachableBlock\t= nil",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "unreachableBlock",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Images.xcassets/avatar-placeholder.imageset",
      "fileSnippet": null,
      "html": {
        "info": "Asset catalog ‘Images’, set ‘avatar-placeholder’: The ‘x3 scale, Universal’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "Asset catalog ‘Images’, set ‘avatar-placeholder’: The ‘x3 scale, Universal’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Images.xcassets/avatar-placeholder.imageset",
      "fileSnippet": null,
      "html": {
        "info": "Asset catalog ‘Images’, set ‘avatar-placeholder’: The ‘x2 scale, Universal’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "Asset catalog ‘Images’, set ‘avatar-placeholder’: The ‘x2 scale, Universal’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "Additions",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 1586,
          "line": 35,
          "utf16Column": 46,
          "utf16Offset": 1586
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 1540,
          "line": 34,
          "utf16Column": 0,
          "utf16Offset": 1540
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/Categories/IQUIViewController+Additions.m",
      "fileSnippet": "-(NSLayoutConstraint *)IQLayoutGuideConstraint",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "-[UIViewController IQLayoutGuideConstraint]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "RewardsCatalogModel",
      "extent": {
        "end": {
          "byteColumn": 51,
          "byteOffset": 380,
          "line": 15,
          "utf16Column": 50,
          "utf16Offset": 379
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 330,
          "line": 15,
          "utf16Column": 0,
          "utf16Offset": 329
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/RewardsCatalogModel.h",
      "fileSnippet": "@property (nonatomic, strong) NSString *rewardText",
      "html": {
        "info": "The <code>rewardText</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The rewardText property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 64,
          "byteOffset": 1376,
          "line": 32,
          "utf16Column": 63,
          "utf16Offset": 1376
        },
        "start": {
          "byteColumn": 48,
          "byteOffset": 1360,
          "line": 32,
          "utf16Column": 47,
          "utf16Offset": 1360
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCRequestAppointmentController.m",
      "fileSnippet": "getDoctorsByName",
      "html": {
        "info": "In Cocoa, it is idiomatic for accessor methods to be named in the form <code>something</code> instead of e.g. <code>getSomething</code>.",
        "ruleDescription": "Warns if getter methods are named in the form <code>getSomething</code> instead of <code>something</code>.",
        "ruleName": "Unidiomatic accessor naming",
        "ruleShortName": "UnidiomaticAccessorNaming",
        "ruleWarning": null
      },
      "identifier": "-[CHCRequestAppointmentController getDoctorsByName]",
      "impact": "Style",
      "info": "In Cocoa, it is idiomatic for accessor methods to be named in the form something instead of e.g. getSomething.",
      "ruleDescription": "Warns if getter methods are named in the form getSomething instead of something.",
      "ruleName": "Unidiomatic accessor naming",
      "ruleShortName": "UnidiomaticAccessorNaming",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": "ListSurveysViewController",
      "extent": {
        "end": {
          "byteColumn": 103,
          "byteOffset": 1651,
          "line": 59,
          "utf16Column": 102,
          "utf16Offset": 1650
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 1549,
          "line": 59,
          "utf16Column": 0,
          "utf16Offset": 1548
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SurveysController/ListSurveysViewController.m",
      "fileSnippet": "- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns about Objective-C methods to which no references are found.</p> <p>This rule will not warn about <code class=\"fauxpas-codesymbol\">IBAction</code> methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form <code class=\"fauxpas-string\">*+Private.h</code>). It also won’t warn about unused getter methods whose setter is used, and vice versa.</p>",
        "ruleName": "Possibly unused Objective-C method",
        "ruleShortName": "UnusedMethod",
        "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool)."
      },
      "identifier": "-[ListSurveysViewController tableView:cellForRowAtIndexPath:]",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns about Objective-C methods to which no references are found. This rule will not warn about IBAction methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form *+Private.h). It also won’t warn about unused getter methods whose setter is used, and vice versa.",
      "ruleName": "Possibly unused Objective-C method",
      "ruleShortName": "UnusedMethod",
      "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool).",
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/ScheduleAppointmentView.xib",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> <code class=\"fauxpas-string\">Select Time(s) of Day Preference</code> (id <code class=\"fauxpas-string\">ZC9-W2-2Tp</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel Select Time(s) of Day Preference (id ZC9-W2-2Tp)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel Select Time(s) of Day Preference (id ZC9-W2-2Tp) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/ScheduleAppointmentView.xib",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> <code class=\"fauxpas-string\">Select Time(s) of Day Preference</code> (id <code class=\"fauxpas-string\">30D-N7-xny</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel Select Time(s) of Day Preference (id 30D-N7-xny)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel Select Time(s) of Day Preference (id 30D-N7-xny) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/AppIcon/180x180.png",
      "fileSnippet": null,
      "html": {
        "info": "This file is equal to the file <div class=\"fauxpas-filepath\">/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/AppIcon/58x58.png</div>.",
        "ruleDescription": "Warns if two resource files are equal.",
        "ruleName": "Duplicate resource",
        "ruleShortName": "DuplicateResource",
        "ruleWarning": null
      },
      "identifier": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/AppIcon/58x58.png",
      "impact": "Maintainability",
      "info": "This file is equal to the file /Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/AppIcon/58x58.png.",
      "ruleDescription": "Warns if two resource files are equal.",
      "ruleName": "Duplicate resource",
      "ruleShortName": "DuplicateResource",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SurveysController/SurveyCell.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initWithHeaderTitle:cancelButtonTitle:confirmButtonTitle:",
      "extent": {
        "end": {
          "byteColumn": 59,
          "byteOffset": 1669,
          "line": 54,
          "utf16Column": 58,
          "utf16Offset": 1669
        },
        "start": {
          "byteColumn": 28,
          "byteOffset": 1638,
          "line": 54,
          "utf16Column": 27,
          "utf16Offset": 1638
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/CZPickerView.m",
      "fileSnippet": "headerTitle ? headerTitle : @\"\"",
      "html": {
        "info": null,
        "ruleDescription": "Expressions of the form <code>(obj ? obj : other)</code> should be written as <code>obj ?: other</code>.",
        "ruleName": "Null coalescing operator usage",
        "ruleShortName": "NullCoalescingOp",
        "ruleWarning": "Please note that in the form <code>(obj ? obj : other)</code> the <code>obj</code> expression is evaluated twice, while in the <code>obj ?: other</code> form it is evaluated only once."
      },
      "identifier": null,
      "impact": "Style",
      "info": null,
      "ruleDescription": "Expressions of the form (obj ? obj : other) should be written as obj ?: other.",
      "ruleName": "Null coalescing operator usage",
      "ruleShortName": "NullCoalescingOp",
      "ruleWarning": "Please note that in the form (obj ? obj : other) the obj expression is evaluated twice, while in the obj ?: other form it is evaluated only once.",
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 18,
          "byteOffset": 9289,
          "line": 265,
          "utf16Column": 17,
          "utf16Offset": 9288
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 9263,
          "line": 264,
          "utf16Column": 8,
          "utf16Offset": 9262
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SurveysController/RegistrationSurveyController.m",
      "fileSnippet": "default:\n            break",
      "html": {
        "info": null,
        "ruleDescription": "<p>If a switch statement explicitly handles all possible values, then the default case is unnecessary dead code, and might even be misleading to people reading the code.</p> <p>If the intended purpose of the default case is to safeguard against enum fields that are added in the future but accidentally left unhandled in the switch, the compiler warning <code>-Wswitch-enum</code> is recommended for that purpose instead.</p>",
        "ruleName": "Unnecessary default case in exhaustive switch statement",
        "ruleShortName": "DefaultInExhaustiveSwitch",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "If a switch statement explicitly handles all possible values, then the default case is unnecessary dead code, and might even be misleading to people reading the code. If the intended purpose of the default case is to safeguard against enum fields that are added in the future but accidentally left unhandled in the switch, the compiler warning -Wswitch-enum is recommended for that purpose instead.",
      "ruleName": "Unnecessary default case in exhaustive switch statement",
      "ruleShortName": "DefaultInExhaustiveSwitch",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "ProgressView",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 3926,
          "line": 136,
          "utf16Column": 42,
          "utf16Offset": 3926
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 3708,
          "line": 131,
          "utf16Column": 0,
          "utf16Offset": 3708
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/ProgressView/ProgressView.m",
      "fileSnippet": "- (CGPathRef)starPathWithXPoint:(CGFloat)x\n                         yPoint:(CGFloat)y\n                         radius:(CGFloat)rad\n                          sides:(NSInteger)s\n                     pointyness:(CGFloat)p",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">pointyness</code> in the symbol name <code class=\"fauxpas-codesymbol\">starPathWithXPoint:yPoint:radius:sides:pointyness:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "pointyness",
      "impact": "Style",
      "info": "The word pointyness in the symbol name starPathWithXPoint:yPoint:radius:sides:pointyness: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 44,
          "byteOffset": 1322,
          "line": 30,
          "utf16Column": 44,
          "utf16Offset": 1322
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 1278,
          "line": 30,
          "utf16Column": 0,
          "utf16Offset": 1278
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/IQToolbar/IQBarButtonItem.h",
      "fileSnippet": "@interface IQBarButtonItem : UIBarButtonItem",
      "html": {
        "info": "The <code class=\"fauxpas-string\">IQ</code> prefix is used. Two-character prefixes are reserved for Apple’s system frameworks. The prefixes in your own (or third-party) code should be at least three characters long.",
        "ruleDescription": "Two-character prefixes (such as <code>NS</code>) are reserved for Apple’s system frameworks. Your own code should use prefixes that are three characters long.",
        "ruleName": "Reserved symbol prefix",
        "ruleShortName": "ReservedPrefix",
        "ruleWarning": null
      },
      "identifier": "IQ",
      "impact": "Maintainability",
      "info": "The IQ prefix is used. Two-character prefixes are reserved for Apple’s system frameworks. The prefixes in your own (or third-party) code should be at least three characters long.",
      "ruleDescription": "Two-character prefixes (such as NS) are reserved for Apple’s system frameworks. Your own code should use prefixes that are three characters long.",
      "ruleName": "Reserved symbol prefix",
      "ruleShortName": "ReservedPrefix",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "fetchDoctors",
      "extent": {
        "end": {
          "byteColumn": 18,
          "byteOffset": 4248,
          "line": 119,
          "utf16Column": 17,
          "utf16Offset": 4247
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 4222,
          "line": 118,
          "utf16Column": 8,
          "utf16Offset": 4221
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/DoctorSearchResultsController.m",
      "fileSnippet": "default:\n            break",
      "html": {
        "info": null,
        "ruleDescription": "<p>If a switch statement explicitly handles all possible values, then the default case is unnecessary dead code, and might even be misleading to people reading the code.</p> <p>If the intended purpose of the default case is to safeguard against enum fields that are added in the future but accidentally left unhandled in the switch, the compiler warning <code>-Wswitch-enum</code> is recommended for that purpose instead.</p>",
        "ruleName": "Unnecessary default case in exhaustive switch statement",
        "ruleShortName": "DefaultInExhaustiveSwitch",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "If a switch statement explicitly handles all possible values, then the default case is unnecessary dead code, and might even be misleading to people reading the code. If the intended purpose of the default case is to safeguard against enum fields that are added in the future but accidentally left unhandled in the switch, the compiler warning -Wswitch-enum is recommended for that purpose instead.",
      "ruleName": "Unnecessary default case in exhaustive switch statement",
      "ruleShortName": "DefaultInExhaustiveSwitch",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "IQ_UIView_Hierarchy",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 7581,
          "line": 245,
          "utf16Column": 26,
          "utf16Offset": 7581
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 7555,
          "line": 244,
          "utf16Column": 0,
          "utf16Offset": 7555
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/Categories/IQUIView+Hierarchy.m",
      "fileSnippet": "- (NSString *)subHierarchy",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "-[UIView subHierarchy]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 29,
          "byteOffset": 229,
          "line": 12,
          "utf16Column": 29,
          "utf16Offset": 228
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 200,
          "line": 12,
          "utf16Column": 0,
          "utf16Offset": 199
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Utils/UIUtils.h",
      "fileSnippet": "@interface UIUtils : NSObject",
      "html": {
        "info": "The <code class=\"fauxpas-string\">UI</code> prefix is used. This prefix is already used in the UIKit framework by Apple. The prefixes in your own (or third-party) code should be at least three characters long.",
        "ruleDescription": "Two-character prefixes (such as <code>NS</code>) are reserved for Apple’s system frameworks. Your own code should use prefixes that are three characters long.",
        "ruleName": "Reserved symbol prefix",
        "ruleShortName": "ReservedPrefix",
        "ruleWarning": null
      },
      "identifier": "UI",
      "impact": "Maintainability",
      "info": "The UI prefix is used. This prefix is already used in the UIKit framework by Apple. The prefixes in your own (or third-party) code should be at least three characters long.",
      "ruleDescription": "Two-character prefixes (such as NS) are reserved for Apple’s system frameworks. Your own code should use prefixes that are three characters long.",
      "ruleName": "Reserved symbol prefix",
      "ruleShortName": "ReservedPrefix",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/ScheduleAppointmentView.xib",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> <code class=\"fauxpas-string\">Reason For Visit</code> (id <code class=\"fauxpas-string\">v7X-Vt-5Rh</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel Reason For Visit (id v7X-Vt-5Rh)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel Reason For Visit (id v7X-Vt-5Rh) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyToDoController/MyToDoCell.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": "ProgressView",
      "extent": {
        "end": {
          "byteColumn": 20,
          "byteOffset": 5497,
          "line": 178,
          "utf16Column": 19,
          "utf16Offset": 5497
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 5478,
          "line": 178,
          "utf16Column": 0,
          "utf16Offset": 5478
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/ProgressView/ProgressView.m",
      "fileSnippet": "- (CGFloat)getXPoin",
      "html": {
        "info": "In Cocoa, it is idiomatic for accessor methods to be named in the form <code>something</code> instead of e.g. <code>getSomething</code>.",
        "ruleDescription": "Warns if getter methods are named in the form <code>getSomething</code> instead of <code>something</code>.",
        "ruleName": "Unidiomatic accessor naming",
        "ruleShortName": "UnidiomaticAccessorNaming",
        "ruleWarning": null
      },
      "identifier": "-[ProgressView getXPoint]",
      "impact": "Style",
      "info": "In Cocoa, it is idiomatic for accessor methods to be named in the form something instead of e.g. getSomething.",
      "ruleDescription": "Warns if getter methods are named in the form getSomething instead of something.",
      "ruleName": "Unidiomatic accessor naming",
      "ruleShortName": "UnidiomaticAccessorNaming",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 66,
          "byteOffset": 1105,
          "line": 27,
          "utf16Column": 65,
          "utf16Offset": 1105
        },
        "start": {
          "byteColumn": 47,
          "byteOffset": 1086,
          "line": 27,
          "utf16Column": 46,
          "utf16Offset": 1086
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCHealthLogScreen/CHCHealthLogController.m",
      "fileSnippet": "loggerCtegoriesList",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">Ctegories</code> in the symbol name <code class=\"fauxpas-codesymbol\">setLoggerCtegoriesList:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "Ctegories",
      "impact": "Style",
      "info": "The word Ctegories in the symbol name setLoggerCtegoriesList: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCHealthLogScreen/CHCViewFullHistoryController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 18,
          "byteOffset": 8115,
          "line": 179,
          "utf16Column": 17,
          "utf16Offset": 8113
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 8088,
          "line": 178,
          "utf16Column": 8,
          "utf16Offset": 8086
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/IQActionSheetPickerView.m",
      "fileSnippet": "default:\r\n            break",
      "html": {
        "info": null,
        "ruleDescription": "<p>If a switch statement explicitly handles all possible values, then the default case is unnecessary dead code, and might even be misleading to people reading the code.</p> <p>If the intended purpose of the default case is to safeguard against enum fields that are added in the future but accidentally left unhandled in the switch, the compiler warning <code>-Wswitch-enum</code> is recommended for that purpose instead.</p>",
        "ruleName": "Unnecessary default case in exhaustive switch statement",
        "ruleShortName": "DefaultInExhaustiveSwitch",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "If a switch statement explicitly handles all possible values, then the default case is unnecessary dead code, and might even be misleading to people reading the code. If the intended purpose of the default case is to safeguard against enum fields that are added in the future but accidentally left unhandled in the switch, the compiler warning -Wswitch-enum is recommended for that purpose instead.",
      "ruleName": "Unnecessary default case in exhaustive switch statement",
      "ruleShortName": "DefaultInExhaustiveSwitch",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 65,
          "byteOffset": 274,
          "line": 16,
          "utf16Column": 65,
          "utf16Offset": 274
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 209,
          "line": 16,
          "utf16Column": 0,
          "utf16Offset": 209
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/LocationManager.h",
      "fileSnippet": "@interface LocationManager : NSObject <CLLocationManagerDelegate>",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "LocationManager",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/APIModel/Reachability.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 29,
          "byteOffset": 572,
          "line": 27,
          "utf16Column": 28,
          "utf16Offset": 572
        },
        "start": {
          "byteColumn": 19,
          "byteOffset": 562,
          "line": 27,
          "utf16Column": 18,
          "utf16Offset": 562
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/CZPickerView.m",
      "fileSnippet": "footerview",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">footerview</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "footerview",
      "impact": "Style",
      "info": "The word footerview may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 41,
          "byteOffset": 1957,
          "line": 56,
          "utf16Column": 40,
          "utf16Offset": 1957
        },
        "start": {
          "byteColumn": 33,
          "byteOffset": 1949,
          "line": 56,
          "utf16Column": 32,
          "utf16Offset": 1949
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCSurveyScreen/CHCSurveyController.m",
      "fileSnippet": "answerid",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">Answerid</code> in the symbol name <code class=\"fauxpas-codesymbol\">setAnswerid:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "Answerid",
      "impact": "Style",
      "info": "The word Answerid in the symbol name setAnswerid: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/Menu Logo.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/Menu Logo.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initWithCoder:",
      "extent": {
        "end": {
          "byteColumn": 86,
          "byteOffset": 3673,
          "line": 85,
          "utf16Column": 85,
          "utf16Offset": 3672
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 3592,
          "line": 85,
          "utf16Column": 4,
          "utf16Offset": 3591
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/UserModel.m",
      "fileSnippet": "self.badgeWellnessCount     = [aDecoder decodeObjectForKey:@\"badgeWellnessCount\"]",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "badgeWellnessCount",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCHome.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">CustomButton</code> (id <code class=\"fauxpas-string\">v3K-w7-4og</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "CustomButton (id v3K-w7-4og)",
      "impact": "Maintainability",
      "info": "Misplaced view: CustomButton (id v3K-w7-4og) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCHome.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">CustomButton</code> (id <code class=\"fauxpas-string\">ThR-mg-Oxr</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "CustomButton (id ThR-mg-Oxr)",
      "impact": "Maintainability",
      "info": "Misplaced view: CustomButton (id ThR-mg-Oxr) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCHome.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">CustomButton</code> (id <code class=\"fauxpas-string\">ALs-Eq-4PM</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "CustomButton (id ALs-Eq-4PM)",
      "impact": "Maintainability",
      "info": "Misplaced view: CustomButton (id ALs-Eq-4PM) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/drawable-mdpi/logo.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/drawable-mdpi/logo.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/MyAppointmentsController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCHome.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">CustomButton</code> (id <code class=\"fauxpas-string\">HEk-WJ-hxF</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "CustomButton (id HEk-WJ-hxF)",
      "impact": "Maintainability",
      "info": "Misplaced view: CustomButton (id HEk-WJ-hxF) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "AppUserData",
      "extent": {
        "end": {
          "byteColumn": 48,
          "byteOffset": 398,
          "line": 17,
          "utf16Column": 47,
          "utf16Offset": 397
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 351,
          "line": 17,
          "utf16Column": 0,
          "utf16Offset": 350
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/AppUserData/AppUserData.h",
      "fileSnippet": "@property (nonatomic, strong) NSString *emailId",
      "html": {
        "info": "The <code>emailId</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The emailId property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 62,
          "byteOffset": 254,
          "line": 11,
          "utf16Column": 62,
          "utf16Offset": 253
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 192,
          "line": 11,
          "utf16Column": 0,
          "utf16Offset": 191
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/ProfileDashBoardController/ProfileDashboardViewController.h",
      "fileSnippet": "@interface ProfileDashboardViewController : BaseViewController",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "ProfileDashboardViewController",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ArticleModel",
      "extent": {
        "end": {
          "byteColumn": 55,
          "byteOffset": 474,
          "line": 17,
          "utf16Column": 54,
          "utf16Offset": 473
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 420,
          "line": 17,
          "utf16Column": 0,
          "utf16Offset": 419
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/ArticleModel.h",
      "fileSnippet": "@property (nonatomic, strong) NSString *articleSnippet",
      "html": {
        "info": "The <code>articleSnippet</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The articleSnippet property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 58,
          "byteOffset": 702,
          "line": 26,
          "utf16Column": 57,
          "utf16Offset": 701
        },
        "start": {
          "byteColumn": 51,
          "byteOffset": 695,
          "line": 26,
          "utf16Column": 50,
          "utf16Offset": 694
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyProfileViewController/MyProfileController.m",
      "fileSnippet": "lnameTF",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">Lname</code> in the symbol name <code class=\"fauxpas-codesymbol\">setLnameTF:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "Lname",
      "impact": "Style",
      "info": "The word Lname in the symbol name setLnameTF: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/Categories/IQNSArray+Sort.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 57,
          "byteOffset": 1301,
          "line": 50,
          "utf16Column": 56,
          "utf16Offset": 1300
        },
        "start": {
          "byteColumn": 39,
          "byteOffset": 1283,
          "line": 50,
          "utf16Column": 38,
          "utf16Offset": 1282
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/BaseUIController/CustomNavigationBar.m",
      "fileSnippet": "@\"profileImageURL\"",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns when literal strings are used to specify key paths.</p> <p>Something like <code>NSStringFromSelector(@selector(foo))</code> is safer because it makes the compiler aware of the selector being specified — this helps find typos at compile time and allows automatic refactoring tools to make appropriate changes.</p>",
        "ruleName": "Literal string for key path",
        "ruleShortName": "LiteralStringKeyPath",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when literal strings are used to specify key paths. Something like NSStringFromSelector(@selector(foo)) is safer because it makes the compiler aware of the selector being specified — this helps find typos at compile time and allows automatic refactoring tools to make appropriate changes.",
      "ruleName": "Literal string for key path",
      "ruleShortName": "LiteralStringKeyPath",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ArticleModel",
      "extent": {
        "end": {
          "byteColumn": 50,
          "byteOffset": 262,
          "line": 13,
          "utf16Column": 49,
          "utf16Offset": 261
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 213,
          "line": 13,
          "utf16Column": 0,
          "utf16Offset": 212
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/ArticleModel.h",
      "fileSnippet": "@property (nonatomic, strong) NSString *articleId",
      "html": {
        "info": "The <code>articleId</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The articleId property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "IQ_UIView_Hierarchy",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 8023,
          "line": 262,
          "utf16Column": 28,
          "utf16Offset": 8023
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 7995,
          "line": 261,
          "utf16Column": 0,
          "utf16Offset": 7995
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/Categories/IQUIView+Hierarchy.m",
      "fileSnippet": "- (NSString *)superHierarchy",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "-[UIView superHierarchy]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "commonInit",
      "extent": {
        "end": {
          "byteColumn": 80,
          "byteOffset": 2930,
          "line": 81,
          "utf16Column": 79,
          "utf16Offset": 2930
        },
        "start": {
          "byteColumn": 29,
          "byteOffset": 2879,
          "line": 81,
          "utf16Column": 28,
          "utf16Offset": 2879
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SignUpController/JVFloatLabeledTextView.m",
      "fileSnippet": "[JVFloatLabeledTextView defaultiOSPlaceholderColor]",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. <code>[FOOThing alloc]</code>.</p> <p>It is recommended to use <code class=\"fauxpas-codesymbol\">self</code> instead (e.g. <code>[self alloc]</code> or <code>[[self class] alloc]</code>) so that the concrete class would receive the message, and subclassing behavior would not be impeded.</p>",
        "ruleName": "Hardcoded self class reference",
        "ruleShortName": "HardcodedSelfClass",
        "ruleWarning": null
      },
      "identifier": "JVFloatLabeledTextView",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. [FOOThing alloc]. It is recommended to use self instead (e.g. [self alloc] or [[self class] alloc]) so that the concrete class would receive the message, and subclassing behavior would not be impeded.",
      "ruleName": "Hardcoded self class reference",
      "ruleShortName": "HardcodedSelfClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 61,
          "byteOffset": 338,
          "line": 14,
          "utf16Column": 61,
          "utf16Offset": 337
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 277,
          "line": 14,
          "utf16Column": 0,
          "utf16Offset": 276
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/DoctorSearchResultsController.h",
      "fileSnippet": "@interface DoctorSearchResultsController : BaseViewController",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "DoctorSearchResultsController",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/drawable/anytime.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/drawable/anytime.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/AppIcon/180x180.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/AppIcon/180x180.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initWithCoder:",
      "extent": {
        "end": {
          "byteColumn": 76,
          "byteOffset": 2963,
          "line": 74,
          "utf16Column": 75,
          "utf16Offset": 2962
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 2892,
          "line": 74,
          "utf16Column": 4,
          "utf16Offset": 2891
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/UserModel.m",
      "fileSnippet": "self.qbRegistered       = [aDecoder decodeObjectForKey:@\"qbRegistered\"]",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "qbRegistered",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "buildHeaderView",
      "extent": {
        "end": {
          "byteColumn": 109,
          "byteOffset": 10846,
          "line": 261,
          "utf16Column": 108,
          "utf16Offset": 10846
        },
        "start": {
          "byteColumn": 26,
          "byteOffset": 10763,
          "line": 261,
          "utf16Column": 25,
          "utf16Offset": 10763
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/CZPickerView.m",
      "fileSnippet": "self.headerTitleFont == nil ? [UIFont systemFontOfSize:18.0] : self.headerTitleFont",
      "html": {
        "info": null,
        "ruleDescription": "Expressions of the form <code>(obj ? obj : other)</code> should be written as <code>obj ?: other</code>.",
        "ruleName": "Null coalescing operator usage",
        "ruleShortName": "NullCoalescingOp",
        "ruleWarning": "Please note that in the form <code>(obj ? obj : other)</code> the <code>obj</code> expression is evaluated twice, while in the <code>obj ?: other</code> form it is evaluated only once."
      },
      "identifier": null,
      "impact": "Style",
      "info": null,
      "ruleDescription": "Expressions of the form (obj ? obj : other) should be written as obj ?: other.",
      "ruleName": "Null coalescing operator usage",
      "ruleShortName": "NullCoalescingOp",
      "ruleWarning": "Please note that in the form (obj ? obj : other) the obj expression is evaluated twice, while in the obj ?: other form it is evaluated only once.",
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 165,
          "byteOffset": 428,
          "line": 14,
          "utf16Column": 165,
          "utf16Offset": 427
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 263,
          "line": 14,
          "utf16Column": 0,
          "utf16Offset": 262
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SurveysController/RegistrationSurveyController.h",
      "fileSnippet": "@interface RegistrationSurveyController : UITableViewController <CZPickerViewDelegate, CZPickerViewDataSource, UITextFieldDelegate, IQActionSheetPickerViewDelegate>{",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "RegistrationSurveyController",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/APIModel/ConnectionManager.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCHealthLogScreen/CHCStatisticsForHealthLogCell.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "actionSheetPickerView:didSelectDate:",
      "extent": {
        "end": {
          "byteColumn": 42,
          "byteOffset": 7028,
          "line": 199,
          "utf16Column": 41,
          "utf16Offset": 7027
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 6991,
          "line": 199,
          "utf16Column": 4,
          "utf16Offset": 6990
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyProfileViewController/MyProfileController.m",
      "fileSnippet": "dateFormat.dateFormat = @\"yyyy-MM-dd\"",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns when an <code class=\"fauxpas-objcclass\">NSDateFormatter</code> is used with fixed-format dates without using the invariant <code class=\"fauxpas-string\">en_US_POSIX</code> locale. If any other locale is used, the date format string may be overwritten, depending on system date and time settings.</p> <p>When working with user-visible dates, date and time styles should be used instead of setting a date format.</p>",
        "ruleName": "Fixed-format <code class=\"fauxpas-objcclass\">NSDateFormatter</code> not using invariant (POSIX) locale",
        "ruleShortName": "FixedFormatDateFormatter",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Warns when an NSDateFormatter is used with fixed-format dates without using the invariant en_US_POSIX locale. If any other locale is used, the date format string may be overwritten, depending on system date and time settings. When working with user-visible dates, date and time styles should be used instead of setting a date format.",
      "ruleName": "Fixed-format NSDateFormatter not using invariant (POSIX) locale",
      "ruleShortName": "FixedFormatDateFormatter",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 24,
          "byteOffset": 27,
          "line": 2,
          "utf16Column": 24,
          "utf16Offset": 27
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 3,
          "line": 2,
          "utf16Column": 0,
          "utf16Offset": 3
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/Categories/IQUIWindow+Hierarchy.m",
      "fileSnippet": "//  UIWindow+Hierarchy.m",
      "html": {
        "info": "The file name in the source file header comment (<code class=\"fauxpas-string\">UIWindow+Hierarchy.m</code>) does not match the actual file name (<code class=\"fauxpas-string\">IQUIWindow+Hierarchy.m</code>).",
        "ruleDescription": "Warns about errors in source file header comments (that are formatted using the default Xcode template), for example if the file name in the comment does not match the actual file name, or if the placeholder <code class=\"fauxpas-string\">__MyCompanyName__</code> is present.",
        "ruleName": "Source file header comment format",
        "ruleShortName": "SourceFileHeaderComment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": "The file name in the source file header comment (UIWindow+Hierarchy.m) does not match the actual file name (IQUIWindow+Hierarchy.m).",
      "ruleDescription": "Warns about errors in source file header comments (that are formatted using the default Xcode template), for example if the file name in the comment does not match the actual file name, or if the placeholder __MyCompanyName__ is present.",
      "ruleName": "Source file header comment format",
      "ruleShortName": "SourceFileHeaderComment",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "viewDidAppear:",
      "extent": {
        "end": {
          "byteColumn": 75,
          "byteOffset": 4894,
          "line": 111,
          "utf16Column": 74,
          "utf16Offset": 4894
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 4828,
          "line": 111,
          "utf16Column": 8,
          "utf16Offset": 4828
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCRequestAppointmentNewController.m",
      "fileSnippet": "[CHCRequestAppointmentNewController isLocationDisableForMyAppOnly]",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. <code>[FOOThing alloc]</code>.</p> <p>It is recommended to use <code class=\"fauxpas-codesymbol\">self</code> instead (e.g. <code>[self alloc]</code> or <code>[[self class] alloc]</code>) so that the concrete class would receive the message, and subclassing behavior would not be impeded.</p>",
        "ruleName": "Hardcoded self class reference",
        "ruleShortName": "HardcodedSelfClass",
        "ruleWarning": null
      },
      "identifier": "CHCRequestAppointmentNewController",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. [FOOThing alloc]. It is recommended to use self instead (e.g. [self alloc] or [[self class] alloc]) so that the concrete class would receive the message, and subclassing behavior would not be impeded.",
      "ruleName": "Hardcoded self class reference",
      "ruleShortName": "HardcodedSelfClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initWithDictionary:",
      "extent": {
        "end": {
          "byteColumn": 57,
          "byteOffset": 564,
          "line": 22,
          "utf16Column": 56,
          "utf16Offset": 564
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 516,
          "line": 22,
          "utf16Column": 8,
          "utf16Offset": 516
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCArticleDetails.m",
      "fileSnippet": "self.articleTitle   =[dict valueForKey:@\"title\"]",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "articleTitle",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> <code class=\"fauxpas-string\">Hospital of Smyrna, GA</code> (id <code class=\"fauxpas-string\">y0l-YI-OSN</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel Hospital of Smyrna, GA (id y0l-YI-OSN)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel Hospital of Smyrna, GA (id y0l-YI-OSN) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/LocationManager.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> <code class=\"fauxpas-string\">View My Profile</code> (id <code class=\"fauxpas-string\">qCg-n1-KK0</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel View My Profile (id qCg-n1-KK0)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel View My Profile (id qCg-n1-KK0) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "SearchDoctorController",
      "extent": {
        "end": {
          "byteColumn": 59,
          "byteOffset": 10128,
          "line": 299,
          "utf16Column": 58,
          "utf16Offset": 10127
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 10070,
          "line": 299,
          "utf16Column": 0,
          "utf16Offset": 10069
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/SearchDoctorController.m",
      "fileSnippet": "- (void)czpickerViewWillDismiss:(CZPickerView *)pickerView",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">czpicker</code> in the symbol name <code class=\"fauxpas-codesymbol\">czpickerViewWillDismiss:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "czpicker",
      "impact": "Style",
      "info": "The word czpicker in the symbol name czpickerViewWillDismiss: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": "HorizontalTableViewCell",
      "extent": {
        "end": {
          "byteColumn": 65,
          "byteOffset": 615,
          "line": 27,
          "utf16Column": 64,
          "utf16Offset": 615
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 551,
          "line": 27,
          "utf16Column": 0,
          "utf16Offset": 551
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCHealthLogScreen/HorizontalTableViewCell.m",
      "fileSnippet": "-(NSInteger)numberOfSectionsInTableView:(UITableView *)tableView",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns about Objective-C methods to which no references are found.</p> <p>This rule will not warn about <code class=\"fauxpas-codesymbol\">IBAction</code> methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form <code class=\"fauxpas-string\">*+Private.h</code>). It also won’t warn about unused getter methods whose setter is used, and vice versa.</p>",
        "ruleName": "Possibly unused Objective-C method",
        "ruleShortName": "UnusedMethod",
        "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool)."
      },
      "identifier": "-[HorizontalTableViewCell numberOfSectionsInTableView:]",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns about Objective-C methods to which no references are found. This rule will not warn about IBAction methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form *+Private.h). It also won’t warn about unused getter methods whose setter is used, and vice versa.",
      "ruleName": "Possibly unused Objective-C method",
      "ruleShortName": "UnusedMethod",
      "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool).",
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/ArticlesViewController/ArticlesTableCell.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "_frontViewDeploymentForNewFrontViewPosition:",
      "extent": {
        "end": {
          "byteColumn": 44,
          "byteOffset": 41044,
          "line": 1222,
          "utf16Column": 43,
          "utf16Offset": 41044
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 41009,
          "line": 1222,
          "utf16Column": 8,
          "utf16Offset": 41009
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/SWRevealViewController.m",
      "fileSnippet": "newPosition = FrontViewPositionLeft",
      "html": {
        "info": null,
        "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
        "ruleName": "Modifying the value of an argument variable",
        "ruleShortName": "ArgumentModification",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
      "ruleName": "Modifying the value of an argument variable",
      "ruleShortName": "ArgumentModification",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initWithDictionary:",
      "extent": {
        "end": {
          "byteColumn": 55,
          "byteOffset": 506,
          "line": 21,
          "utf16Column": 54,
          "utf16Offset": 506
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 460,
          "line": 21,
          "utf16Column": 8,
          "utf16Offset": 460
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCArticleDetails.m",
      "fileSnippet": "self.articleUrl     =[dict valueForKey:@\"URI\"]",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "articleUrl",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": "SurveysViewController",
      "extent": {
        "end": {
          "byteColumn": 93,
          "byteOffset": 3983,
          "line": 120,
          "utf16Column": 92,
          "utf16Offset": 3982
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 3891,
          "line": 120,
          "utf16Column": 0,
          "utf16Offset": 3890
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SurveysController/SurveysViewController.m",
      "fileSnippet": "-(void)tableView:(UITableView *)tableView didDeselectRowAtIndexPath:(NSIndexPath *)indexPath",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns about Objective-C methods to which no references are found.</p> <p>This rule will not warn about <code class=\"fauxpas-codesymbol\">IBAction</code> methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form <code class=\"fauxpas-string\">*+Private.h</code>). It also won’t warn about unused getter methods whose setter is used, and vice versa.</p>",
        "ruleName": "Possibly unused Objective-C method",
        "ruleShortName": "UnusedMethod",
        "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool)."
      },
      "identifier": "-[SurveysViewController tableView:didDeselectRowAtIndexPath:]",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns about Objective-C methods to which no references are found. This rule will not warn about IBAction methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form *+Private.h). It also won’t warn about unused getter methods whose setter is used, and vice versa.",
      "ruleName": "Possibly unused Objective-C method",
      "ruleShortName": "UnusedMethod",
      "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool).",
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyMedicationsController/MedicationsCell.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCHealthLogScreen/LoggerDetailsTableViewCell.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "Additions",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 1733,
          "line": 38,
          "utf16Column": 39,
          "utf16Offset": 1733
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 1694,
          "line": 37,
          "utf16Column": 0,
          "utf16Offset": 1694
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/Categories/IQUITextFieldView+Additions.m",
      "fileSnippet": "-(CGFloat)keyboardDistanceFromTextField",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "-[UIView keyboardDistanceFromTextField]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> <code class=\"fauxpas-string\">ANSWER QUESTIONS</code> (id <code class=\"fauxpas-string\">Skc-Ub-3Eh</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel ANSWER QUESTIONS (id Skc-Ub-3Eh)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel ANSWER QUESTIONS (id Skc-Ub-3Eh) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 58,
          "byteOffset": 246,
          "line": 11,
          "utf16Column": 58,
          "utf16Offset": 245
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 188,
          "line": 11,
          "utf16Column": 0,
          "utf16Offset": 187
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyMedicationsController/CreateMedicationController.h",
      "fileSnippet": "@interface CreateMedicationController : BaseViewController",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "CreateMedicationController",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 42,
          "byteOffset": 210,
          "line": 11,
          "utf16Column": 42,
          "utf16Offset": 209
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 168,
          "line": 11,
          "utf16Column": 0,
          "utf16Offset": 167
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyMessagesController/MyMessageCell.h",
      "fileSnippet": "@interface MyMessageCell : UITableViewCell",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "MyMessageCell",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "IQToolbarAddition",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 26656,
          "line": 587,
          "utf16Column": 73,
          "utf16Offset": 26656
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 26583,
          "line": 586,
          "utf16Column": 0,
          "utf16Offset": 26583
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/IQToolbar/IQUIView+IQKeyboardToolbar.m",
      "fileSnippet": "-(void)setEnablePrevious:(BOOL)isPreviousEnabled next:(BOOL)isNextEnabled",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "-[UIView setEnablePrevious:next:]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> <code class=\"fauxpas-string\">Statistics for</code> (id <code class=\"fauxpas-string\">pTZ-xB-qmE</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel Statistics for (id pTZ-xB-qmE)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel Statistics for (id pTZ-xB-qmE) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "UserModel",
      "extent": {
        "end": {
          "byteColumn": 49,
          "byteOffset": 351,
          "line": 16,
          "utf16Column": 48,
          "utf16Offset": 350
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 303,
          "line": 16,
          "utf16Column": 0,
          "utf16Offset": 302
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/UserModel.h",
      "fileSnippet": "@property (nonatomic, strong) NSString* password",
      "html": {
        "info": "The <code>password</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The password property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 60,
          "byteOffset": 1639,
          "line": 61,
          "utf16Column": 59,
          "utf16Offset": 1639
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 1580,
          "line": 61,
          "utf16Column": 0,
          "utf16Offset": 1580
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/CZPickerView.h",
      "fileSnippet": "- (void)czpickerViewWillDismiss:(CZPickerView *)pickerView;",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">czpicker</code> in the symbol name <code class=\"fauxpas-codesymbol\">czpickerViewWillDismiss:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "czpicker",
      "impact": "Style",
      "info": "The word czpicker in the symbol name czpickerViewWillDismiss: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCHome.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> <code class=\"fauxpas-string\">Will search results based on the speciality</code> (id <code class=\"fauxpas-string\">DJx-A5-k29</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel Will search results based on the speciality (id DJx-A5-k29)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel Will search results based on the speciality (id DJx-A5-k29) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "DoctorModel",
      "extent": {
        "end": {
          "byteColumn": 46,
          "byteOffset": 254,
          "line": 12,
          "utf16Column": 45,
          "utf16Offset": 253
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 209,
          "line": 12,
          "utf16Column": 0,
          "utf16Offset": 208
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/DoctorModel.h",
      "fileSnippet": "@property (nonatomic, strong) NSString *docId",
      "html": {
        "info": "The <code>docId</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The docId property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Images.xcassets/Registration Survey/user.imageset",
      "fileSnippet": null,
      "html": {
        "info": "Asset catalog ‘Images’, set ‘user’: The ‘x3 scale, Universal’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "Asset catalog ‘Images’, set ‘user’: The ‘x3 scale, Universal’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Images.xcassets/Registration Survey/user.imageset",
      "fileSnippet": null,
      "html": {
        "info": "Asset catalog ‘Images’, set ‘user’: The ‘x2 scale, Universal’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "Asset catalog ‘Images’, set ‘user’: The ‘x2 scale, Universal’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/drawable/morning_selected.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/drawable/morning_selected.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/drawable/evening_selected.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initWithHeaderTitle:cancelButtonTitle:confirmButtonTitle:",
      "extent": {
        "end": {
          "byteColumn": 53,
          "byteOffset": 1548,
          "line": 51,
          "utf16Column": 52,
          "utf16Offset": 1548
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 1504,
          "line": 51,
          "utf16Column": 8,
          "utf16Offset": 1504
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/CZPickerView.m",
      "fileSnippet": "self.confirmButtonTitle = confirmButtonTitle",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "confirmButtonTitle",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Images.xcassets/Dashboard/survey-icon.imageset/first-aid-kit-2.png",
      "fileSnippet": null,
      "html": {
        "info": "Asset catalog ‘Images’, set ‘survey-icon’: <div class=\"fauxpas-filename\">first-aid-kit-2.png</div> (x3 scale) resolution (256 x 256) should be 768 x 768.",
        "ruleDescription": "The retina (‘@2x’ or ‘@3x’) version of an image resource must be exactly double or triple the size of the corresponding low-resolution image (assuming the point size of the presentation context remains the same regardless of screen resolution). Otherwise the effective resolution of the image will not match the effective resolution of its presentation context, which will lead to a blurry image, empty space at the edges, or overflow.",
        "ruleName": "Unexpected retina image resolution",
        "ruleShortName": "RetinaImagesResolution",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "Asset catalog ‘Images’, set ‘survey-icon’: first-aid-kit-2.png (x3 scale) resolution (256 x 256) should be 768 x 768.",
      "ruleDescription": "The retina (‘@2x’ or ‘@3x’) version of an image resource must be exactly double or triple the size of the corresponding low-resolution image (assuming the point size of the presentation context remains the same regardless of screen resolution). Otherwise the effective resolution of the image will not match the effective resolution of its presentation context, which will lead to a blurry image, empty space at the edges, or overflow.",
      "ruleName": "Unexpected retina image resolution",
      "ruleShortName": "RetinaImagesResolution",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/drawable/evening_selected.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/drawable/anytime_selected.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/drawable/anytime_selected.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "DashboardViewController",
      "extent": {
        "end": {
          "byteColumn": 44,
          "byteOffset": 1861,
          "line": 54,
          "utf16Column": 43,
          "utf16Offset": 1860
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 1818,
          "line": 54,
          "utf16Column": 0,
          "utf16Offset": 1817
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/DashboardViewController/DashboardViewController.m",
      "fileSnippet": "- (IBAction)myAppointmentsClicke:(id)sender",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">Clicke</code> in the symbol name <code class=\"fauxpas-codesymbol\">myAppointmentsClicke:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "Clicke",
      "impact": "Style",
      "info": "The word Clicke in the symbol name myAppointmentsClicke: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 60,
          "byteOffset": 353,
          "line": 19,
          "utf16Column": 60,
          "utf16Offset": 353
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 293,
          "line": 19,
          "utf16Column": 0,
          "utf16Offset": 293
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ApplicationSupport/AppDelegate.h",
      "fileSnippet": "@interface AppDelegate : UIResponder <UIApplicationDelegate>",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "AppDelegate",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": "dismissWithCompletion:",
      "extent": {
        "end": {
          "byteColumn": 56,
          "byteOffset": 4748,
          "line": 132,
          "utf16Column": 55,
          "utf16Offset": 4748
        },
        "start": {
          "byteColumn": 31,
          "byteOffset": 4723,
          "line": 132,
          "utf16Column": 30,
          "utf16Offset": 4723
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/IQActionSheetPickerView.h",
      "fileSnippet": "void (^)(void))completion",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended that typedef be used for all block-typed declarations, for readability.",
        "ruleName": "Block-typed declaration without typedef",
        "ruleShortName": "NonTypedefBlockDeclaration",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": null,
      "ruleDescription": "It is recommended that typedef be used for all block-typed declarations, for readability.",
      "ruleName": "Block-typed declaration without typedef",
      "ruleShortName": "NonTypedefBlockDeclaration",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 30,
          "byteOffset": 33,
          "line": 2,
          "utf16Column": 30,
          "utf16Offset": 33
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 3,
          "line": 2,
          "utf16Column": 0,
          "utf16Offset": 3
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/LoginController/CHCLoginControllerNew.m",
      "fileSnippet": "//  CHCRegisterControllerNew.m",
      "html": {
        "info": "The file name in the source file header comment (<code class=\"fauxpas-string\">CHCRegisterControllerNew.m</code>) does not match the actual file name (<code class=\"fauxpas-string\">CHCLoginControllerNew.m</code>).",
        "ruleDescription": "Warns about errors in source file header comments (that are formatted using the default Xcode template), for example if the file name in the comment does not match the actual file name, or if the placeholder <code class=\"fauxpas-string\">__MyCompanyName__</code> is present.",
        "ruleName": "Source file header comment format",
        "ruleShortName": "SourceFileHeaderComment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": "The file name in the source file header comment (CHCRegisterControllerNew.m) does not match the actual file name (CHCLoginControllerNew.m).",
      "ruleDescription": "Warns about errors in source file header comments (that are formatted using the default Xcode template), for example if the file name in the comment does not match the actual file name, or if the placeholder __MyCompanyName__ is present.",
      "ruleName": "Source file header comment format",
      "ruleShortName": "SourceFileHeaderComment",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": "initialize",
      "extent": {
        "end": {
          "byteColumn": 23,
          "byteOffset": 1977,
          "line": 53,
          "utf16Column": 22,
          "utf16Offset": 1977
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 1959,
          "line": 53,
          "utf16Column": 4,
          "utf16Offset": 1959
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/Categories/IQUIView+Hierarchy.m",
      "fileSnippet": "[super initialize]",
      "html": {
        "info": "",
        "ruleDescription": "<p>Implementations of <code class=\"fauxpas-objcmethod\">+[NSObject initialize]</code> should not invoke the superclass implementation: this method is special in that the runtime invokes it separately for every subclass.</p>",
        "ruleName": "Invocation of superclass implementation of <code class=\"fauxpas-objcmethod\">+[NSObject initialize]</code>",
        "ruleShortName": "InitializeSuperInvocation",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "",
      "ruleDescription": "Implementations of +[NSObject initialize] should not invoke the superclass implementation: this method is special in that the runtime invokes it separately for every subclass.",
      "ruleName": "Invocation of superclass implementation of +[NSObject initialize]",
      "ruleShortName": "InitializeSuperInvocation",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 33,
          "byteOffset": 199,
          "line": 11,
          "utf16Column": 32,
          "utf16Offset": 199
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 175,
          "line": 11,
          "utf16Column": 8,
          "utf16Offset": 175
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/CZPickerView.m",
      "fileSnippet": "CZP_BACKGROUND_ALPHA 0.9",
      "html": {
        "info": null,
        "ruleDescription": "<p>Instead of using a macro definition for a literal value that is used as a constant, define it as an actual constant.</p> <p>This makes the scope of the constant more explicit (it’s not available in all imported files until undefined) and it cannot be redefined or undefined in some later part of the code. Macro definitions are also not available in the debugger.</p>",
        "ruleName": "Macro definition for literal value",
        "ruleShortName": "MacroLiteral",
        "ruleWarning": null
      },
      "identifier": "CZP_BACKGROUND_ALPHA",
      "impact": "Style",
      "info": null,
      "ruleDescription": "Instead of using a macro definition for a literal value that is used as a constant, define it as an actual constant. This makes the scope of the constant more explicit (it’s not available in all imported files until undefined) and it cannot be redefined or undefined in some later part of the code. Macro definitions are also not available in the debugger.",
      "ruleName": "Macro definition for literal value",
      "ruleShortName": "MacroLiteral",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 151,
          "byteOffset": 393,
          "line": 13,
          "utf16Column": 151,
          "utf16Offset": 392
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 242,
          "line": 13,
          "utf16Column": 0,
          "utf16Offset": 241
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/SearchDoctorController.h",
      "fileSnippet": "@interface SearchDoctorController : BaseViewController  <CZPickerViewDataSource, CZPickerViewDelegate, UITextFieldDelegate, CLLocationManagerDelegate>{",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "SearchDoctorController",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 39,
          "byteOffset": 206,
          "line": 11,
          "utf16Column": 39,
          "utf16Offset": 206
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 167,
          "line": 11,
          "utf16Column": 0,
          "utf16Offset": 167
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCSurveyScreen/AnswerCell.h",
      "fileSnippet": "@interface AnswerCell : UITableViewCell",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "AnswerCell",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "HorizontalTableViewCell",
      "extent": {
        "end": {
          "byteColumn": 57,
          "byteOffset": 571,
          "line": 16,
          "utf16Column": 56,
          "utf16Offset": 571
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 515,
          "line": 16,
          "utf16Column": 0,
          "utf16Offset": 515
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCHealthLogScreen/HorizontalTableViewCell.h",
      "fileSnippet": "@property(strong , nonatomic)NSArray *loggerDetailsArray",
      "html": {
        "info": "The <code>loggerDetailsArray</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The loggerDetailsArray property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": "showPickerView:completion:",
      "extent": {
        "end": {
          "byteColumn": 97,
          "byteOffset": 1506,
          "line": 33,
          "utf16Column": 96,
          "utf16Offset": 1506
        },
        "start": {
          "byteColumn": 72,
          "byteOffset": 1481,
          "line": 33,
          "utf16Column": 71,
          "utf16Offset": 1481
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/IQActionSheetViewController.h",
      "fileSnippet": "void (^)(void))completion",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended that typedef be used for all block-typed declarations, for readability.",
        "ruleName": "Block-typed declaration without typedef",
        "ruleShortName": "NonTypedefBlockDeclaration",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": null,
      "ruleDescription": "It is recommended that typedef be used for all block-typed declarations, for readability.",
      "ruleName": "Block-typed declaration without typedef",
      "ruleShortName": "NonTypedefBlockDeclaration",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "RegistrationSurveyController",
      "extent": {
        "end": {
          "byteColumn": 24,
          "byteOffset": 1690,
          "line": 63,
          "utf16Column": 23,
          "utf16Offset": 1689
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 1667,
          "line": 63,
          "utf16Column": 0,
          "utf16Offset": 1666
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SurveysController/RegistrationSurveyController.m",
      "fileSnippet": "-(void) initilizeButton",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">initilize</code> in the symbol name <code class=\"fauxpas-codesymbol\">initilizeButtons</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "initilize",
      "impact": "Style",
      "info": "The word initilize in the symbol name initilizeButtons may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Images.xcassets/Dashboard/Appointments-icon.imageset/Choice Points App_Design_02-15-16-06 calendar-2x.png",
      "fileSnippet": null,
      "html": {
        "info": "Asset catalog ‘Images’, set ‘Appointments-icon’: <div class=\"fauxpas-filename\">Choice Points App_Design_02-15-16-06 calendar-2x.png</div> (x2 scale) resolution (314 x 311) should be 314 x 312.",
        "ruleDescription": "The retina (‘@2x’ or ‘@3x’) version of an image resource must be exactly double or triple the size of the corresponding low-resolution image (assuming the point size of the presentation context remains the same regardless of screen resolution). Otherwise the effective resolution of the image will not match the effective resolution of its presentation context, which will lead to a blurry image, empty space at the edges, or overflow.",
        "ruleName": "Unexpected retina image resolution",
        "ruleShortName": "RetinaImagesResolution",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "Asset catalog ‘Images’, set ‘Appointments-icon’: Choice Points App_Design_02-15-16-06 calendar-2x.png (x2 scale) resolution (314 x 311) should be 314 x 312.",
      "ruleDescription": "The retina (‘@2x’ or ‘@3x’) version of an image resource must be exactly double or triple the size of the corresponding low-resolution image (assuming the point size of the presentation context remains the same regardless of screen resolution). Otherwise the effective resolution of the image will not match the effective resolution of its presentation context, which will lead to a blurry image, empty space at the edges, or overflow.",
      "ruleName": "Unexpected retina image resolution",
      "ruleShortName": "RetinaImagesResolution",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "updateProfileImage:onCompletion:onCancelation:",
      "extent": {
        "end": {
          "byteColumn": 82,
          "byteOffset": 7123,
          "line": 207,
          "utf16Column": 81,
          "utf16Offset": 7123
        },
        "start": {
          "byteColumn": 55,
          "byteOffset": 7096,
          "line": 207,
          "utf16Column": 54,
          "utf16Offset": 7096
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/APIModel/APIClass.m",
      "fileSnippet": "(resized) ? resized : image",
      "html": {
        "info": null,
        "ruleDescription": "Expressions of the form <code>(obj ? obj : other)</code> should be written as <code>obj ?: other</code>.",
        "ruleName": "Null coalescing operator usage",
        "ruleShortName": "NullCoalescingOp",
        "ruleWarning": "Please note that in the form <code>(obj ? obj : other)</code> the <code>obj</code> expression is evaluated twice, while in the <code>obj ?: other</code> form it is evaluated only once."
      },
      "identifier": null,
      "impact": "Style",
      "info": null,
      "ruleDescription": "Expressions of the form (obj ? obj : other) should be written as obj ?: other.",
      "ruleName": "Null coalescing operator usage",
      "ruleShortName": "NullCoalescingOp",
      "ruleWarning": "Please note that in the form (obj ? obj : other) the obj expression is evaluated twice, while in the obj ?: other form it is evaluated only once.",
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "DoctorModel",
      "extent": {
        "end": {
          "byteColumn": 50,
          "byteOffset": 551,
          "line": 18,
          "utf16Column": 49,
          "utf16Offset": 550
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 502,
          "line": 18,
          "utf16Column": 0,
          "utf16Offset": 501
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/DoctorModel.h",
      "fileSnippet": "@property (nonatomic, strong) NSString *cityState",
      "html": {
        "info": "The <code>cityState</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The cityState property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": "TextDirectionality",
      "extent": {
        "end": {
          "byteColumn": 98,
          "byteOffset": 2409,
          "line": 62,
          "utf16Column": 97,
          "utf16Offset": 2409
        },
        "start": {
          "byteColumn": 85,
          "byteOffset": 2396,
          "line": 62,
          "utf16Column": 84,
          "utf16Offset": 2396
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SignUpController/NSString+TextDirectionality.h",
      "fileSnippet": "baseDirection",
      "html": {
        "info": "In Cocoa, it is idiomatic for accessor methods to be named in the form <code>something</code> instead of e.g. <code>getSomething</code>.",
        "ruleDescription": "Warns if getter methods are named in the form <code>getSomething</code> instead of <code>something</code>.",
        "ruleName": "Unidiomatic accessor naming",
        "ruleShortName": "UnidiomaticAccessorNaming",
        "ruleWarning": null
      },
      "identifier": "-[NSString getBaseDirection]",
      "impact": "Style",
      "info": "In Cocoa, it is idiomatic for accessor methods to be named in the form something instead of e.g. getSomething.",
      "ruleDescription": "Warns if getter methods are named in the form getSomething instead of something.",
      "ruleName": "Unidiomatic accessor naming",
      "ruleShortName": "UnidiomaticAccessorNaming",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "setKeyboardDistanceFromTextField:",
      "extent": {
        "end": {
          "byteColumn": 134,
          "byteOffset": 1653,
          "line": 34,
          "utf16Column": 133,
          "utf16Offset": 1653
        },
        "start": {
          "byteColumn": 78,
          "byteOffset": 1597,
          "line": 34,
          "utf16Column": 77,
          "utf16Offset": 1597
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/Categories/IQUITextFieldView+Additions.m",
      "fileSnippet": "[NSNumber numberWithFloat:keyboardDistanceFromTextField]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSNumber numberWithFloat:]</code> is called. Consider using Objective-C literal notation (or a boxed expression) instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSNumber numberWithFloat:] is called. Consider using Objective-C literal notation (or a boxed expression) instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "IQToolbarAddition",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 6221,
          "line": 162,
          "utf16Column": 137,
          "utf16Offset": 6221
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 6084,
          "line": 161,
          "utf16Column": 0,
          "utf16Offset": 6084
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/IQToolbar/IQUIView+IQKeyboardToolbar.m",
      "fileSnippet": "- (void)addRightButtonOnKeyboardWithText:(NSString*)text target:(id)target action:(SEL)action shouldShowPlaceholder:(BOOL)showPlaceholder",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "-[UIView addRightButtonOnKeyboardWithText:target:action:shouldShowPlaceholder:]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": "setUpCellWithDictionary:tapHandler:",
      "extent": {
        "end": {
          "byteColumn": 100,
          "byteOffset": 655,
          "line": 22,
          "utf16Column": 99,
          "utf16Offset": 654
        },
        "start": {
          "byteColumn": 71,
          "byteOffset": 626,
          "line": 22,
          "utf16Column": 70,
          "utf16Offset": 625
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/HEDISViewController/HEDISSubCell.h",
      "fileSnippet": "void (^)(BOOL selected))block",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended that typedef be used for all block-typed declarations, for readability.",
        "ruleName": "Block-typed declaration without typedef",
        "ruleShortName": "NonTypedefBlockDeclaration",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": null,
      "ruleDescription": "It is recommended that typedef be used for all block-typed declarations, for readability.",
      "ruleName": "Block-typed declaration without typedef",
      "ruleShortName": "NonTypedefBlockDeclaration",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 29,
          "byteOffset": 572,
          "line": 27,
          "utf16Column": 28,
          "utf16Offset": 572
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 544,
          "line": 27,
          "utf16Column": 0,
          "utf16Offset": 544
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/CZPickerView.m",
      "fileSnippet": "@property UIView *footerview",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">footerview</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "footerview",
      "impact": "Style",
      "info": "The word footerview may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "DoctorModel",
      "extent": {
        "end": {
          "byteColumn": 45,
          "byteOffset": 300,
          "line": 13,
          "utf16Column": 44,
          "utf16Offset": 299
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 256,
          "line": 13,
          "utf16Column": 0,
          "utf16Offset": 255
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/DoctorModel.h",
      "fileSnippet": "@property (nonatomic, strong) NSString *name",
      "html": {
        "info": "The <code>name</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The name property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": "ScheduleAppointmentController",
      "extent": {
        "end": {
          "byteColumn": 22,
          "byteOffset": 1666,
          "line": 62,
          "utf16Column": 21,
          "utf16Offset": 1665
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 1645,
          "line": 62,
          "utf16Column": 0,
          "utf16Offset": 1644
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/ScheduleAppointmentController.m",
      "fileSnippet": "- (void)layoutIfNeede",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns about Objective-C methods to which no references are found.</p> <p>This rule will not warn about <code class=\"fauxpas-codesymbol\">IBAction</code> methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form <code class=\"fauxpas-string\">*+Private.h</code>). It also won’t warn about unused getter methods whose setter is used, and vice versa.</p>",
        "ruleName": "Possibly unused Objective-C method",
        "ruleShortName": "UnusedMethod",
        "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool)."
      },
      "identifier": "-[ScheduleAppointmentController layoutIfNeeded]",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns about Objective-C methods to which no references are found. This rule will not warn about IBAction methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form *+Private.h). It also won’t warn about unused getter methods whose setter is used, and vice versa.",
      "ruleName": "Possibly unused Objective-C method",
      "ruleShortName": "UnusedMethod",
      "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool).",
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "CHCHealthLogSurveyDetails",
      "extent": {
        "end": {
          "byteColumn": 48,
          "byteOffset": 392,
          "line": 15,
          "utf16Column": 47,
          "utf16Offset": 392
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 345,
          "line": 15,
          "utf16Column": 0,
          "utf16Offset": 345
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCHealthLogSurveyDetails.h",
      "fileSnippet": "@property (nonatomic, strong) NSString *snipset",
      "html": {
        "info": "The <code>snipset</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The snipset property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/placeholder.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": "showWithCompletion:",
      "extent": {
        "end": {
          "byteColumn": 53,
          "byteOffset": 20320,
          "line": 560,
          "utf16Column": 52,
          "utf16Offset": 20318
        },
        "start": {
          "byteColumn": 28,
          "byteOffset": 20295,
          "line": 560,
          "utf16Column": 27,
          "utf16Offset": 20293
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/IQActionSheetPickerView.m",
      "fileSnippet": "void (^)(void))completion",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended that typedef be used for all block-typed declarations, for readability.",
        "ruleName": "Block-typed declaration without typedef",
        "ruleShortName": "NonTypedefBlockDeclaration",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": null,
      "ruleDescription": "It is recommended that typedef be used for all block-typed declarations, for readability.",
      "ruleName": "Block-typed declaration without typedef",
      "ruleShortName": "NonTypedefBlockDeclaration",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/placeholder.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": "APIClass",
      "extent": {
        "end": {
          "byteColumn": 80,
          "byteOffset": 9069,
          "line": 247,
          "utf16Column": 79,
          "utf16Offset": 9069
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 8990,
          "line": 247,
          "utf16Column": 0,
          "utf16Offset": 8990
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/APIModel/APIClass.m",
      "fileSnippet": "- (void)connection:(NSURLConnection *)connnection didReceiveData:(NSData *)data",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns about Objective-C methods to which no references are found.</p> <p>This rule will not warn about <code class=\"fauxpas-codesymbol\">IBAction</code> methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form <code class=\"fauxpas-string\">*+Private.h</code>). It also won’t warn about unused getter methods whose setter is used, and vice versa.</p>",
        "ruleName": "Possibly unused Objective-C method",
        "ruleShortName": "UnusedMethod",
        "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool)."
      },
      "identifier": "-[APIClass connection:didReceiveData:]",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns about Objective-C methods to which no references are found. This rule will not warn about IBAction methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form *+Private.h). It also won’t warn about unused getter methods whose setter is used, and vice versa.",
      "ruleName": "Possibly unused Objective-C method",
      "ruleShortName": "UnusedMethod",
      "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool).",
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "formatNumber:",
      "extent": {
        "end": {
          "byteColumn": 91,
          "byteOffset": 14916,
          "line": 406,
          "utf16Column": 90,
          "utf16Offset": 14915
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 14830,
          "line": 406,
          "utf16Column": 4,
          "utf16Offset": 14829
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SignUpController/CHCRegisterController.m",
      "fileSnippet": "mobileNumber = [mobileNumber stringByReplacingOccurrencesOfString:@\"-\" withString:@\"\"]",
      "html": {
        "info": null,
        "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
        "ruleName": "Modifying the value of an argument variable",
        "ruleShortName": "ArgumentModification",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
      "ruleName": "Modifying the value of an argument variable",
      "ruleShortName": "ArgumentModification",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/drawable-mdpi/ic_drawer copy@2x.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initWithHeaderTitle:cancelButtonTitle:confirmButtonTitle:",
      "extent": {
        "end": {
          "byteColumn": 42,
          "byteOffset": 1370,
          "line": 46,
          "utf16Column": 41,
          "utf16Offset": 1370
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 1337,
          "line": 46,
          "utf16Column": 8,
          "utf16Offset": 1337
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/CZPickerView.m",
      "fileSnippet": "self.tapBackgroundToDismiss = YES",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "tapBackgroundToDismiss",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 33,
          "byteOffset": 208,
          "line": 11,
          "utf16Column": 33,
          "utf16Offset": 207
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 175,
          "line": 11,
          "utf16Column": 0,
          "utf16Offset": 174
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/DoctorModel.h",
      "fileSnippet": "@interface DoctorModel : NSObject",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "DoctorModel",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "CHCChildDetailsController",
      "extent": {
        "end": {
          "byteColumn": 50,
          "byteOffset": 287,
          "line": 12,
          "utf16Column": 49,
          "utf16Offset": 287
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 238,
          "line": 12,
          "utf16Column": 0,
          "utf16Offset": 238
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCSurveyScreen/CHCChildDetailsController.h",
      "fileSnippet": "@property (nonatomic) NSString *choicePointsTotal",
      "html": {
        "info": "The <code>choicePointsTotal</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The choicePointsTotal property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 123,
          "byteOffset": 8338,
          "line": 196,
          "utf16Column": 122,
          "utf16Offset": 8338
        },
        "start": {
          "byteColumn": 106,
          "byteOffset": 8321,
          "line": 196,
          "utf16Column": 105,
          "utf16Offset": 8321
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCMedicationReminderController.m",
      "fileSnippet": "@\"inputTransform\"",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns when literal strings are used to specify key paths.</p> <p>Something like <code>NSStringFromSelector(@selector(foo))</code> is safer because it makes the compiler aware of the selector being specified — this helps find typos at compile time and allows automatic refactoring tools to make appropriate changes.</p>",
        "ruleName": "Literal string for key path",
        "ruleShortName": "LiteralStringKeyPath",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when literal strings are used to specify key paths. Something like NSStringFromSelector(@selector(foo)) is safer because it makes the compiler aware of the selector being specified — this helps find typos at compile time and allows automatic refactoring tools to make appropriate changes.",
      "ruleName": "Literal string for key path",
      "ruleShortName": "LiteralStringKeyPath",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 48,
          "byteOffset": 1548,
          "line": 37,
          "utf16Column": 48,
          "utf16Offset": 1548
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 1500,
          "line": 37,
          "utf16Column": 0,
          "utf16Offset": 1500
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/IQKeyboardReturnKeyHandler.h",
      "fileSnippet": "@interface IQKeyboardReturnKeyHandler : NSObject",
      "html": {
        "info": "The <code class=\"fauxpas-string\">IQ</code> prefix is used. Two-character prefixes are reserved for Apple’s system frameworks. The prefixes in your own (or third-party) code should be at least three characters long.",
        "ruleDescription": "Two-character prefixes (such as <code>NS</code>) are reserved for Apple’s system frameworks. Your own code should use prefixes that are three characters long.",
        "ruleName": "Reserved symbol prefix",
        "ruleShortName": "ReservedPrefix",
        "ruleWarning": null
      },
      "identifier": "IQ",
      "impact": "Maintainability",
      "info": "The IQ prefix is used. Two-character prefixes are reserved for Apple’s system frameworks. The prefixes in your own (or third-party) code should be at least three characters long.",
      "ruleDescription": "Two-character prefixes (such as NS) are reserved for Apple’s system frameworks. Your own code should use prefixes that are three characters long.",
      "ruleName": "Reserved symbol prefix",
      "ruleShortName": "ReservedPrefix",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/drawable/ic_launcher_notification.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/drawable/ic_launcher_notification.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> <code class=\"fauxpas-string\">Points</code> (id <code class=\"fauxpas-string\">BdP-l0-a6L</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel Points (id BdP-l0-a6L)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel Points (id BdP-l0-a6L) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "IQToolbarAddition",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 6567,
          "line": 171,
          "utf16Column": 93,
          "utf16Offset": 6567
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 6474,
          "line": 170,
          "utf16Column": 0,
          "utf16Offset": 6474
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/IQToolbar/IQUIView+IQKeyboardToolbar.m",
      "fileSnippet": "- (void)addRightButtonOnKeyboardWithText:(NSString*)text target:(id)target action:(SEL)action",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "-[UIView addRightButtonOnKeyboardWithText:target:action:]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": "ListSurveysViewController",
      "extent": {
        "end": {
          "byteColumn": 89,
          "byteOffset": 1513,
          "line": 54,
          "utf16Column": 88,
          "utf16Offset": 1512
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 1425,
          "line": 54,
          "utf16Column": 0,
          "utf16Offset": 1424
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SurveysController/ListSurveysViewController.m",
      "fileSnippet": "- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns about Objective-C methods to which no references are found.</p> <p>This rule will not warn about <code class=\"fauxpas-codesymbol\">IBAction</code> methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form <code class=\"fauxpas-string\">*+Private.h</code>). It also won’t warn about unused getter methods whose setter is used, and vice versa.</p>",
        "ruleName": "Possibly unused Objective-C method",
        "ruleShortName": "UnusedMethod",
        "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool)."
      },
      "identifier": "-[ListSurveysViewController tableView:numberOfRowsInSection:]",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns about Objective-C methods to which no references are found. This rule will not warn about IBAction methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form *+Private.h). It also won’t warn about unused getter methods whose setter is used, and vice versa.",
      "ruleName": "Possibly unused Objective-C method",
      "ruleShortName": "UnusedMethod",
      "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool).",
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initWithCoder:",
      "extent": {
        "end": {
          "byteColumn": 73,
          "byteOffset": 3114,
          "line": 77,
          "utf16Column": 72,
          "utf16Offset": 3113
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 3046,
          "line": 77,
          "utf16Column": 4,
          "utf16Offset": 3045
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/UserModel.m",
      "fileSnippet": "self.firstName          = [aDecoder decodeObjectForKey:@\"firstName\"]",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "firstName",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": "LocationManager",
      "extent": {
        "end": {
          "byteColumn": 45,
          "byteOffset": 1666,
          "line": 67,
          "utf16Column": 44,
          "utf16Offset": 1666
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 1622,
          "line": 67,
          "utf16Column": 0,
          "utf16Offset": 1622
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/LocationManager.m",
      "fileSnippet": "- (void)setTrackingStrategyHighestResolution",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns about Objective-C methods to which no references are found.</p> <p>This rule will not warn about <code class=\"fauxpas-codesymbol\">IBAction</code> methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form <code class=\"fauxpas-string\">*+Private.h</code>). It also won’t warn about unused getter methods whose setter is used, and vice versa.</p>",
        "ruleName": "Possibly unused Objective-C method",
        "ruleShortName": "UnusedMethod",
        "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool)."
      },
      "identifier": "-[LocationManager setTrackingStrategyHighestResolution]",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns about Objective-C methods to which no references are found. This rule will not warn about IBAction methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form *+Private.h). It also won’t warn about unused getter methods whose setter is used, and vice versa.",
      "ruleName": "Possibly unused Objective-C method",
      "ruleShortName": "UnusedMethod",
      "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool).",
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyMedicationsController/CreateMedicationController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 48,
          "byteOffset": 226,
          "line": 11,
          "utf16Column": 48,
          "utf16Offset": 225
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 178,
          "line": 11,
          "utf16Column": 0,
          "utf16Offset": 177
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyToDoController/MyToDoController.h",
      "fileSnippet": "@interface MyToDoController : BaseViewController",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "MyToDoController",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/LaunchController/LaunchViewController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "Additions",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 1610,
          "line": 35,
          "utf16Column": 43,
          "utf16Offset": 1610
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 1567,
          "line": 34,
          "utf16Column": 0,
          "utf16Offset": 1567
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/Categories/IQUIScrollView+Additions.m",
      "fileSnippet": "-(BOOL)shouldRestoreScrollViewContentOffset",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "-[UIScrollView shouldRestoreScrollViewContentOffset]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyMedicationsController/MyMedicationsController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/PointsHistoryController/PointsHistoryController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/SearchDoctorController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/PointsRewardsController/PointsRewardsController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/DashboardViewController/DashboardViewController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 27,
          "byteOffset": 204,
          "line": 12,
          "utf16Column": 27,
          "utf16Offset": 203
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 177,
          "line": 12,
          "utf16Column": 0,
          "utf16Offset": 176
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Utils/Utils.h",
      "fileSnippet": "@interface Utils : NSObject",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "Utils",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "RewardsCatalogModel",
      "extent": {
        "end": {
          "byteColumn": 52,
          "byteOffset": 328,
          "line": 14,
          "utf16Column": 51,
          "utf16Offset": 327
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 277,
          "line": 14,
          "utf16Column": 0,
          "utf16Offset": 276
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/RewardsCatalogModel.h",
      "fileSnippet": "@property (nonatomic, strong) NSString *rewardTitle",
      "html": {
        "info": "The <code>rewardTitle</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The rewardTitle property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIImageView</code> (id <code class=\"fauxpas-string\">D4x-nJ-4Gx</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIImageView (id D4x-nJ-4Gx)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIImageView (id D4x-nJ-4Gx) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UITextField</code> (id <code class=\"fauxpas-string\">xgw-t8-7rj</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UITextField (id xgw-t8-7rj)",
      "impact": "Maintainability",
      "info": "Misplaced view: UITextField (id xgw-t8-7rj) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UITextField</code> (id <code class=\"fauxpas-string\">lLY-5B-aFj</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UITextField (id lLY-5B-aFj)",
      "impact": "Maintainability",
      "info": "Misplaced view: UITextField (id lLY-5B-aFj) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIImageView</code> (id <code class=\"fauxpas-string\">dzD-qJ-nFv</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIImageView (id dzD-qJ-nFv)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIImageView (id dzD-qJ-nFv) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIImageView</code> (id <code class=\"fauxpas-string\">g9D-1I-tyJ</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIImageView (id g9D-1I-tyJ)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIImageView (id g9D-1I-tyJ) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UITextField</code> (id <code class=\"fauxpas-string\">5dD-wW-1IH</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UITextField (id 5dD-wW-1IH)",
      "impact": "Maintainability",
      "info": "Misplaced view: UITextField (id 5dD-wW-1IH) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UITextField</code> (id <code class=\"fauxpas-string\">Hsy-vG-wvv</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UITextField (id Hsy-vG-wvv)",
      "impact": "Maintainability",
      "info": "Misplaced view: UITextField (id Hsy-vG-wvv) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UITextField</code> (id <code class=\"fauxpas-string\">vWl-y6-Zzo</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UITextField (id vWl-y6-Zzo)",
      "impact": "Maintainability",
      "info": "Misplaced view: UITextField (id vWl-y6-Zzo) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "createArticleModelWithDictionary:",
      "extent": {
        "end": {
          "byteColumn": 45,
          "byteOffset": 333,
          "line": 16,
          "utf16Column": 44,
          "utf16Offset": 332
        },
        "start": {
          "byteColumn": 27,
          "byteOffset": 315,
          "line": 16,
          "utf16Column": 26,
          "utf16Offset": 314
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/ArticleModel.m",
      "fileSnippet": "[ArticleModel new]",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. <code>[FOOThing alloc]</code>.</p> <p>It is recommended to use <code class=\"fauxpas-codesymbol\">self</code> instead (e.g. <code>[self alloc]</code> or <code>[[self class] alloc]</code>) so that the concrete class would receive the message, and subclassing behavior would not be impeded.</p>",
        "ruleName": "Hardcoded self class reference",
        "ruleShortName": "HardcodedSelfClass",
        "ruleWarning": null
      },
      "identifier": "ArticleModel",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. [FOOThing alloc]. It is recommended to use self instead (e.g. [self alloc] or [[self class] alloc]) so that the concrete class would receive the message, and subclassing behavior would not be impeded.",
      "ruleName": "Hardcoded self class reference",
      "ruleShortName": "HardcodedSelfClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UITextField</code> (id <code class=\"fauxpas-string\">Mx3-hC-ATv</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UITextField (id Mx3-hC-ATv)",
      "impact": "Maintainability",
      "info": "Misplaced view: UITextField (id Mx3-hC-ATv) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UITextField</code> (id <code class=\"fauxpas-string\">QaN-iY-6PB</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UITextField (id QaN-iY-6PB)",
      "impact": "Maintainability",
      "info": "Misplaced view: UITextField (id QaN-iY-6PB) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIImageView</code> (id <code class=\"fauxpas-string\">ovD-a6-FUL</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIImageView (id ovD-a6-FUL)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIImageView (id ovD-a6-FUL) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "ScheduleAppointmentNew",
      "extent": {
        "end": {
          "byteColumn": 59,
          "byteOffset": 1285,
          "line": 31,
          "utf16Column": 58,
          "utf16Offset": 1284
        },
        "start": {
          "byteColumn": 48,
          "byteOffset": 1274,
          "line": 31,
          "utf16Column": 47,
          "utf16Offset": 1273
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/ScheduleAppointmentNew.h",
      "fileSnippet": "thursButton",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">thurs</code> in the symbol name <code class=\"fauxpas-codesymbol\">thursButton</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "thurs",
      "impact": "Style",
      "info": "The word thurs in the symbol name thursButton may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "RegistrationSurveyController",
      "extent": {
        "end": {
          "byteColumn": 87,
          "byteOffset": 8185,
          "line": 243,
          "utf16Column": 86,
          "utf16Offset": 8184
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 8099,
          "line": 243,
          "utf16Column": 0,
          "utf16Offset": 8098
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SurveysController/RegistrationSurveyController.m",
      "fileSnippet": "- (void)czpickerView:(CZPickerView *)pickerView didConfirmWithItemAtRow:(NSInteger)row",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">czpicker</code> in the symbol name <code class=\"fauxpas-codesymbol\">czpickerView:didConfirmWithItemAtRow:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "czpicker",
      "impact": "Style",
      "info": "The word czpicker in the symbol name czpickerView:didConfirmWithItemAtRow: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 33,
          "byteOffset": 596,
          "line": 35,
          "utf16Column": 33,
          "utf16Offset": 595
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 563,
          "line": 35,
          "utf16Column": 0,
          "utf16Offset": 562
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/BaseUIController/BottomBarView.h",
      "fileSnippet": "@interface BottomBarView : UIView",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "BottomBarView",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "CHCRewardsCatalogCell",
      "extent": {
        "end": {
          "byteColumn": 68,
          "byteOffset": 295,
          "line": 12,
          "utf16Column": 67,
          "utf16Offset": 295
        },
        "start": {
          "byteColumn": 53,
          "byteOffset": 280,
          "line": 12,
          "utf16Column": 52,
          "utf16Offset": 280
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCRewardsCatalogCell.h",
      "fileSnippet": "rewardimageView",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">Rewardimage</code> in the symbol name <code class=\"fauxpas-codesymbol\">setRewardimageView:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "Rewardimage",
      "impact": "Style",
      "info": "The word Rewardimage in the symbol name setRewardimageView: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/amazonGiftCoupan.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/amazonGiftCoupan.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCArticleArchiveController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "AppUserData",
      "extent": {
        "end": {
          "byteColumn": 50,
          "byteOffset": 497,
          "line": 19,
          "utf16Column": 49,
          "utf16Offset": 496
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 448,
          "line": 19,
          "utf16Column": 0,
          "utf16Offset": 447
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/AppUserData/AppUserData.h",
      "fileSnippet": "@property (nonatomic, strong) NSString *pinString",
      "html": {
        "info": "The <code>pinString</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The pinString property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 49,
          "byteOffset": 230,
          "line": 11,
          "utf16Column": 49,
          "utf16Offset": 229
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 181,
          "line": 11,
          "utf16Column": 0,
          "utf16Offset": 180
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/SecurityPinController/ForgetPinController.h",
      "fileSnippet": "@interface ForgetPinController : UIViewController",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "ForgetPinController",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCRewardsCatalogController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "DashboardViewController",
      "extent": {
        "end": {
          "byteColumn": 24,
          "byteOffset": 3006,
          "line": 91,
          "utf16Column": 23,
          "utf16Offset": 3005
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 2983,
          "line": 91,
          "utf16Column": 0,
          "utf16Offset": 2982
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/DashboardViewController/DashboardViewController.m",
      "fileSnippet": "-(void)editedApponitmen",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">Apponitment</code> in the symbol name <code class=\"fauxpas-codesymbol\">editedApponitment</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "Apponitment",
      "impact": "Style",
      "info": "The word Apponitment in the symbol name editedApponitment may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/IQToolbar/IQToolbar.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/MyAppointmentCell.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SignUpController/CHCRegisterController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "formatNumber:",
      "extent": {
        "end": {
          "byteColumn": 91,
          "byteOffset": 14640,
          "line": 403,
          "utf16Column": 90,
          "utf16Offset": 14639
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 14554,
          "line": 403,
          "utf16Column": 4,
          "utf16Offset": 14553
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SignUpController/CHCRegisterController.m",
      "fileSnippet": "mobileNumber = [mobileNumber stringByReplacingOccurrencesOfString:@\"(\" withString:@\"\"]",
      "html": {
        "info": null,
        "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
        "ruleName": "Modifying the value of an argument variable",
        "ruleShortName": "ArgumentModification",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
      "ruleName": "Modifying the value of an argument variable",
      "ruleShortName": "ArgumentModification",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> <code class=\"fauxpas-string\">Request Appointment</code> (id <code class=\"fauxpas-string\">z9V-Ju-g5A</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel Request Appointment (id z9V-Ju-g5A)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel Request Appointment (id z9V-Ju-g5A) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 70,
          "byteOffset": 1621,
          "line": 39,
          "utf16Column": 69,
          "utf16Offset": 1621
        },
        "start": {
          "byteColumn": 48,
          "byteOffset": 1599,
          "line": 39,
          "utf16Column": 47,
          "utf16Offset": 1599
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCRequestAppointmentNewController.m",
      "fileSnippet": "getDoctorsBySpeciality",
      "html": {
        "info": "In Cocoa, it is idiomatic for accessor methods to be named in the form <code>something</code> instead of e.g. <code>getSomething</code>.",
        "ruleDescription": "Warns if getter methods are named in the form <code>getSomething</code> instead of <code>something</code>.",
        "ruleName": "Unidiomatic accessor naming",
        "ruleShortName": "UnidiomaticAccessorNaming",
        "ruleWarning": null
      },
      "identifier": "-[CHCRequestAppointmentNewController getDoctorsBySpeciality]",
      "impact": "Style",
      "info": "In Cocoa, it is idiomatic for accessor methods to be named in the form something instead of e.g. getSomething.",
      "ruleDescription": "Warns if getter methods are named in the form getSomething instead of something.",
      "ruleName": "Unidiomatic accessor naming",
      "ruleShortName": "UnidiomaticAccessorNaming",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/ActivityDashboardController/ActivityDashboardController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "Extension",
      "extent": {
        "end": {
          "byteColumn": 39,
          "byteOffset": 893,
          "line": 30,
          "utf16Column": 38,
          "utf16Offset": 892
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 764,
          "line": 28,
          "utf16Column": 0,
          "utf16Offset": 763
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Category/UIImage+Extension.m",
      "fileSnippet": "+ (UIImage *)getImageName:(NSString *)imageName\n              withBGColor:(UIColor *)color\n                  andSize:(CGSize)size",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "+[UIImage getImageName:withBGColor:andSize:]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": "dismissWithCompletion:",
      "extent": {
        "end": {
          "byteColumn": 56,
          "byteOffset": 20137,
          "line": 550,
          "utf16Column": 55,
          "utf16Offset": 20135
        },
        "start": {
          "byteColumn": 31,
          "byteOffset": 20112,
          "line": 550,
          "utf16Column": 30,
          "utf16Offset": 20110
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/IQActionSheetPickerView.m",
      "fileSnippet": "void (^)(void))completion",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended that typedef be used for all block-typed declarations, for readability.",
        "ruleName": "Block-typed declaration without typedef",
        "ruleShortName": "NonTypedefBlockDeclaration",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": null,
      "ruleDescription": "It is recommended that typedef be used for all block-typed declarations, for readability.",
      "ruleName": "Block-typed declaration without typedef",
      "ruleShortName": "NonTypedefBlockDeclaration",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 113,
          "byteOffset": 4082,
          "line": 133,
          "utf16Column": 112,
          "utf16Offset": 4082
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 3970,
          "line": 133,
          "utf16Column": 0,
          "utf16Offset": 3970
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/SWRevealViewController.m",
      "fileSnippet": "- (void)_getRevealWidth:(CGFloat*)pRevealWidth revealOverDraw:(CGFloat*)pRevealOverdraw forSymetry:(int)symetry;",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">Symetry</code> in the symbol name <code class=\"fauxpas-codesymbol\">_getRevealWidth:revealOverDraw:forSymetry:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "Symetry",
      "impact": "Style",
      "info": "The word Symetry in the symbol name _getRevealWidth:revealOverDraw:forSymetry: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/checkbox.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/checkbox.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Images.xcassets/Dashboard/Health-icon.imageset/Choice Points App_Design_02-15-16-06 heart-2x.png",
      "fileSnippet": null,
      "html": {
        "info": "Asset catalog ‘Images’, set ‘Health-icon’: <div class=\"fauxpas-filename\">Choice Points App_Design_02-15-16-06 heart-2x.png</div> (x2 scale) resolution (287 x 311) should be 288 x 312.",
        "ruleDescription": "The retina (‘@2x’ or ‘@3x’) version of an image resource must be exactly double or triple the size of the corresponding low-resolution image (assuming the point size of the presentation context remains the same regardless of screen resolution). Otherwise the effective resolution of the image will not match the effective resolution of its presentation context, which will lead to a blurry image, empty space at the edges, or overflow.",
        "ruleName": "Unexpected retina image resolution",
        "ruleShortName": "RetinaImagesResolution",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "Asset catalog ‘Images’, set ‘Health-icon’: Choice Points App_Design_02-15-16-06 heart-2x.png (x2 scale) resolution (287 x 311) should be 288 x 312.",
      "ruleDescription": "The retina (‘@2x’ or ‘@3x’) version of an image resource must be exactly double or triple the size of the corresponding low-resolution image (assuming the point size of the presentation context remains the same regardless of screen resolution). Otherwise the effective resolution of the image will not match the effective resolution of its presentation context, which will lead to a blurry image, empty space at the edges, or overflow.",
      "ruleName": "Unexpected retina image resolution",
      "ruleShortName": "RetinaImagesResolution",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/IQToolbar/IQUIView+IQKeyboardToolbar.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ArticleModel",
      "extent": {
        "end": {
          "byteColumn": 49,
          "byteOffset": 312,
          "line": 14,
          "utf16Column": 48,
          "utf16Offset": 311
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 264,
          "line": 14,
          "utf16Column": 0,
          "utf16Offset": 263
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/ArticleModel.h",
      "fileSnippet": "@property (nonatomic, strong) NSString *answerId",
      "html": {
        "info": "The <code>answerId</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The answerId property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": null,
      "fileSnippet": null,
      "html": {
        "info": "<strong>Temporary files</strong> should be ignored in the version control system. The un-ignored paths are: <ul><li><code>*.swp</code></li></ul>",
        "ruleDescription": "Warns whenever some files that are recommended to be ignored by the version control system are not ignored, or vice versa.",
        "ruleName": "Recommended VCS ignores",
        "ruleShortName": "RecommendedVCSIgnores",
        "ruleWarning": null
      },
      "identifier": "Temporary files",
      "impact": "Maintainability",
      "info": "Temporary files should be ignored in the version control system. The un-ignored paths are: *.swp",
      "ruleDescription": "Warns whenever some files that are recommended to be ignored by the version control system are not ignored, or vice versa.",
      "ruleName": "Recommended VCS ignores",
      "ruleShortName": "RecommendedVCSIgnores",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIDatePicker</code> (id <code class=\"fauxpas-string\">W8G-zy-HxO</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIDatePicker (id W8G-zy-HxO)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIDatePicker (id W8G-zy-HxO) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 76,
          "byteOffset": 1808,
          "line": 68,
          "utf16Column": 76,
          "utf16Offset": 1808
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 1732,
          "line": 68,
          "utf16Column": 0,
          "utf16Offset": 1732
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/CZPickerView.h",
      "fileSnippet": "@interface CZPickerView : UIView<UITableViewDataSource, UITableViewDelegate>",
      "html": {
        "info": "The <code class=\"fauxpas-string\">CZ</code> prefix is used. Two-character prefixes are reserved for Apple’s system frameworks. The prefixes in your own (or third-party) code should be at least three characters long.",
        "ruleDescription": "Two-character prefixes (such as <code>NS</code>) are reserved for Apple’s system frameworks. Your own code should use prefixes that are three characters long.",
        "ruleName": "Reserved symbol prefix",
        "ruleShortName": "ReservedPrefix",
        "ruleWarning": null
      },
      "identifier": "CZ",
      "impact": "Maintainability",
      "info": "The CZ prefix is used. Two-character prefixes are reserved for Apple’s system frameworks. The prefixes in your own (or third-party) code should be at least three characters long.",
      "ruleDescription": "Two-character prefixes (such as NS) are reserved for Apple’s system frameworks. Your own code should use prefixes that are three characters long.",
      "ruleName": "Reserved symbol prefix",
      "ruleShortName": "ReservedPrefix",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "CHCArticleDetails",
      "extent": {
        "end": {
          "byteColumn": 51,
          "byteOffset": 376,
          "line": 15,
          "utf16Column": 50,
          "utf16Offset": 376
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 326,
          "line": 15,
          "utf16Column": 0,
          "utf16Offset": 326
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCArticleDetails.h",
      "fileSnippet": "@property (nonatomic, strong) NSString *articleUrl",
      "html": {
        "info": "The <code>articleUrl</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The articleUrl property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UITableView</code> (id <code class=\"fauxpas-string\">t00-tP-PkN</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UITableView (id t00-tP-PkN)",
      "impact": "Maintainability",
      "info": "Misplaced view: UITableView (id t00-tP-PkN) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UITableView</code> (id <code class=\"fauxpas-string\">4Ti-fz-1FO</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UITableView (id 4Ti-fz-1FO)",
      "impact": "Maintainability",
      "info": "Misplaced view: UITableView (id 4Ti-fz-1FO) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UITableView</code> (id <code class=\"fauxpas-string\">MxV-u6-cPw</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UITableView (id MxV-u6-cPw)",
      "impact": "Maintainability",
      "info": "Misplaced view: UITableView (id MxV-u6-cPw) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UITableView</code> (id <code class=\"fauxpas-string\">o4J-23-Qdp</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UITableView (id o4J-23-Qdp)",
      "impact": "Maintainability",
      "info": "Misplaced view: UITableView (id o4J-23-Qdp) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UITextField</code> (id <code class=\"fauxpas-string\">wzK-Sj-1IS</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UITextField (id wzK-Sj-1IS)",
      "impact": "Maintainability",
      "info": "Misplaced view: UITextField (id wzK-Sj-1IS) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UITableView</code> (id <code class=\"fauxpas-string\">5Ru-5F-Yt6</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UITableView (id 5Ru-5F-Yt6)",
      "impact": "Maintainability",
      "info": "Misplaced view: UITableView (id 5Ru-5F-Yt6) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UITableView</code> (id <code class=\"fauxpas-string\">jTK-2Q-lBe</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UITableView (id jTK-2Q-lBe)",
      "impact": "Maintainability",
      "info": "Misplaced view: UITableView (id jTK-2Q-lBe) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UITableView</code> (id <code class=\"fauxpas-string\">Czo-ng-B0e</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UITableView (id Czo-ng-B0e)",
      "impact": "Maintainability",
      "info": "Misplaced view: UITableView (id Czo-ng-B0e) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UITableView</code> (id <code class=\"fauxpas-string\">SKn-aZ-VN9</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UITableView (id SKn-aZ-VN9)",
      "impact": "Maintainability",
      "info": "Misplaced view: UITableView (id SKn-aZ-VN9) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyToDoController/MyToDoController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": "MyProfileController",
      "extent": {
        "end": {
          "byteColumn": 22,
          "byteOffset": 3482,
          "line": 108,
          "utf16Column": 21,
          "utf16Offset": 3481
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 3461,
          "line": 108,
          "utf16Column": 0,
          "utf16Offset": 3460
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyProfileViewController/MyProfileController.m",
      "fileSnippet": "-(void)showDatePicker",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns about Objective-C methods to which no references are found.</p> <p>This rule will not warn about <code class=\"fauxpas-codesymbol\">IBAction</code> methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form <code class=\"fauxpas-string\">*+Private.h</code>). It also won’t warn about unused getter methods whose setter is used, and vice versa.</p>",
        "ruleName": "Possibly unused Objective-C method",
        "ruleShortName": "UnusedMethod",
        "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool)."
      },
      "identifier": "-[MyProfileController showDatePicker]",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns about Objective-C methods to which no references are found. This rule will not warn about IBAction methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form *+Private.h). It also won’t warn about unused getter methods whose setter is used, and vice versa.",
      "ruleName": "Possibly unused Objective-C method",
      "ruleShortName": "UnusedMethod",
      "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool).",
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 28,
          "byteOffset": 31,
          "line": 2,
          "utf16Column": 28,
          "utf16Offset": 31
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 3,
          "line": 2,
          "utf16Column": 0,
          "utf16Offset": 3
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/SecurityPinController/ForgetPinController.m",
      "fileSnippet": "//  CHCForgetPinController.m",
      "html": {
        "info": "The file name in the source file header comment (<code class=\"fauxpas-string\">CHCForgetPinController.m</code>) does not match the actual file name (<code class=\"fauxpas-string\">ForgetPinController.m</code>).",
        "ruleDescription": "Warns about errors in source file header comments (that are formatted using the default Xcode template), for example if the file name in the comment does not match the actual file name, or if the placeholder <code class=\"fauxpas-string\">__MyCompanyName__</code> is present.",
        "ruleName": "Source file header comment format",
        "ruleShortName": "SourceFileHeaderComment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": "The file name in the source file header comment (CHCForgetPinController.m) does not match the actual file name (ForgetPinController.m).",
      "ruleDescription": "Warns about errors in source file header comments (that are formatted using the default Xcode template), for example if the file name in the comment does not match the actual file name, or if the placeholder __MyCompanyName__ is present.",
      "ruleName": "Source file header comment format",
      "ruleShortName": "SourceFileHeaderComment",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 43,
          "byteOffset": 210,
          "line": 11,
          "utf16Column": 43,
          "utf16Offset": 209
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 167,
          "line": 11,
          "utf16Column": 0,
          "utf16Offset": 166
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SurveysController/ListSurveyCell.h",
      "fileSnippet": "@interface ListSurveyCell : UITableViewCell",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "ListSurveyCell",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 73,
          "byteOffset": 1521,
          "line": 34,
          "utf16Column": 72,
          "utf16Offset": 1521
        },
        "start": {
          "byteColumn": 52,
          "byteOffset": 1500,
          "line": 34,
          "utf16Column": 51,
          "utf16Offset": 1500
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCRequestAppointmentController.m",
      "fileSnippet": "getDoctorsRequestDict",
      "html": {
        "info": "In Cocoa, it is idiomatic for accessor methods to be named in the form <code>something</code> instead of e.g. <code>getSomething</code>.",
        "ruleDescription": "Warns if getter methods are named in the form <code>getSomething</code> instead of <code>something</code>.",
        "ruleName": "Unidiomatic accessor naming",
        "ruleShortName": "UnidiomaticAccessorNaming",
        "ruleWarning": null
      },
      "identifier": "-[CHCRequestAppointmentController getDoctorsRequestDict]",
      "impact": "Style",
      "info": "In Cocoa, it is idiomatic for accessor methods to be named in the form something instead of e.g. getSomething.",
      "ruleDescription": "Warns if getter methods are named in the form getSomething instead of something.",
      "ruleName": "Unidiomatic accessor naming",
      "ruleShortName": "UnidiomaticAccessorNaming",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Images.xcassets/Dashboard/menu-icon.imageset",
      "fileSnippet": null,
      "html": {
        "info": "Asset catalog ‘Images’, set ‘menu-icon’: The ‘x3 scale, Universal’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "Asset catalog ‘Images’, set ‘menu-icon’: The ‘x3 scale, Universal’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Images.xcassets/Dashboard/menu-icon.imageset",
      "fileSnippet": null,
      "html": {
        "info": "Asset catalog ‘Images’, set ‘menu-icon’: The ‘x2 scale, Universal’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "Asset catalog ‘Images’, set ‘menu-icon’: The ‘x2 scale, Universal’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreenNew/HomeScreenNewContentViews/CHCHealthSurveyNewCell.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "CHCHealthLogSurveyDetails",
      "extent": {
        "end": {
          "byteColumn": 56,
          "byteOffset": 449,
          "line": 16,
          "utf16Column": 55,
          "utf16Offset": 449
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 394,
          "line": 16,
          "utf16Column": 0,
          "utf16Offset": 394
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCHealthLogSurveyDetails.h",
      "fileSnippet": "@property (nonatomic, strong) NSString *answerQuestions",
      "html": {
        "info": "The <code>answerQuestions</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The answerQuestions property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": "SurveysViewController",
      "extent": {
        "end": {
          "byteColumn": 103,
          "byteOffset": 2377,
          "line": 72,
          "utf16Column": 102,
          "utf16Offset": 2376
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 2275,
          "line": 72,
          "utf16Column": 0,
          "utf16Offset": 2274
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SurveysController/SurveysViewController.m",
      "fileSnippet": "- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns about Objective-C methods to which no references are found.</p> <p>This rule will not warn about <code class=\"fauxpas-codesymbol\">IBAction</code> methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form <code class=\"fauxpas-string\">*+Private.h</code>). It also won’t warn about unused getter methods whose setter is used, and vice versa.</p>",
        "ruleName": "Possibly unused Objective-C method",
        "ruleShortName": "UnusedMethod",
        "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool)."
      },
      "identifier": "-[SurveysViewController tableView:cellForRowAtIndexPath:]",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns about Objective-C methods to which no references are found. This rule will not warn about IBAction methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form *+Private.h). It also won’t warn about unused getter methods whose setter is used, and vice versa.",
      "ruleName": "Possibly unused Objective-C method",
      "ruleShortName": "UnusedMethod",
      "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool).",
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIScrollView</code> (id <code class=\"fauxpas-string\">RRx-gK-2gj</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIScrollView (id RRx-gK-2gj)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIScrollView (id RRx-gK-2gj) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">CustomButton</code> (id <code class=\"fauxpas-string\">pra-Y3-3s4</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "CustomButton (id pra-Y3-3s4)",
      "impact": "Maintainability",
      "info": "Misplaced view: CustomButton (id pra-Y3-3s4) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">CustomButton</code> (id <code class=\"fauxpas-string\">82N-0q-quL</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "CustomButton (id 82N-0q-quL)",
      "impact": "Maintainability",
      "info": "Misplaced view: CustomButton (id 82N-0q-quL) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">ProgressView</code> (id <code class=\"fauxpas-string\">0E6-9w-odu</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "ProgressView (id 0E6-9w-odu)",
      "impact": "Maintainability",
      "info": "Misplaced view: ProgressView (id 0E6-9w-odu) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">CustomButton</code> (id <code class=\"fauxpas-string\">qjP-35-vTs</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "CustomButton (id qjP-35-vTs)",
      "impact": "Maintainability",
      "info": "Misplaced view: CustomButton (id qjP-35-vTs) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": "CHCAppointmentDetailsController",
      "extent": {
        "end": {
          "byteColumn": 72,
          "byteOffset": 429,
          "line": 14,
          "utf16Column": 71,
          "utf16Offset": 429
        },
        "start": {
          "byteColumn": 51,
          "byteOffset": 408,
          "line": 14,
          "utf16Column": 50,
          "utf16Offset": 408
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCAppointmentDetailsController.h",
      "fileSnippet": "getDoctorsRequestDict",
      "html": {
        "info": "In Cocoa, it is idiomatic for accessor methods to be named in the form <code>something</code> instead of e.g. <code>getSomething</code>.",
        "ruleDescription": "Warns if getter methods are named in the form <code>getSomething</code> instead of <code>something</code>.",
        "ruleName": "Unidiomatic accessor naming",
        "ruleShortName": "UnidiomaticAccessorNaming",
        "ruleWarning": null
      },
      "identifier": "-[CHCAppointmentDetailsController getDoctorsRequestDict]",
      "impact": "Style",
      "info": "In Cocoa, it is idiomatic for accessor methods to be named in the form something instead of e.g. getSomething.",
      "ruleDescription": "Warns if getter methods are named in the form getSomething instead of something.",
      "ruleName": "Unidiomatic accessor naming",
      "ruleShortName": "UnidiomaticAccessorNaming",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">CustomButton</code> (id <code class=\"fauxpas-string\">4F5-Hu-hs6</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "CustomButton (id 4F5-Hu-hs6)",
      "impact": "Maintainability",
      "info": "Misplaced view: CustomButton (id 4F5-Hu-hs6) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "RegistrationSurveyController",
      "extent": {
        "end": {
          "byteColumn": 41,
          "byteOffset": 7937,
          "line": 235,
          "utf16Column": 40,
          "utf16Offset": 7936
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 7843,
          "line": 234,
          "utf16Column": 0,
          "utf16Offset": 7842
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SurveysController/RegistrationSurveyController.m",
      "fileSnippet": "- (NSString *)czpickerView:(CZPickerView *)pickerView\n               titleForRow:(NSInteger)ro",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">czpicker</code> in the symbol name <code class=\"fauxpas-codesymbol\">czpickerView:titleForRow:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "czpicker",
      "impact": "Style",
      "info": "The word czpicker in the symbol name czpickerView:titleForRow: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/HealthDashboardViewController/HealthDashbooardViewController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 64,
          "byteOffset": 1550,
          "line": 38,
          "utf16Column": 63,
          "utf16Offset": 1550
        },
        "start": {
          "byteColumn": 48,
          "byteOffset": 1534,
          "line": 38,
          "utf16Column": 47,
          "utf16Offset": 1534
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCRequestAppointmentNewController.m",
      "fileSnippet": "getDoctorsByName",
      "html": {
        "info": "In Cocoa, it is idiomatic for accessor methods to be named in the form <code>something</code> instead of e.g. <code>getSomething</code>.",
        "ruleDescription": "Warns if getter methods are named in the form <code>getSomething</code> instead of <code>something</code>.",
        "ruleName": "Unidiomatic accessor naming",
        "ruleShortName": "UnidiomaticAccessorNaming",
        "ruleWarning": null
      },
      "identifier": "-[CHCRequestAppointmentNewController getDoctorsByName]",
      "impact": "Style",
      "info": "In Cocoa, it is idiomatic for accessor methods to be named in the form something instead of e.g. getSomething.",
      "ruleDescription": "Warns if getter methods are named in the form getSomething instead of something.",
      "ruleName": "Unidiomatic accessor naming",
      "ruleShortName": "UnidiomaticAccessorNaming",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 123,
          "byteOffset": 10765,
          "line": 237,
          "utf16Column": 122,
          "utf16Offset": 10765
        },
        "start": {
          "byteColumn": 106,
          "byteOffset": 10748,
          "line": 237,
          "utf16Column": 105,
          "utf16Offset": 10748
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCAppointmentDetailsController.m",
      "fileSnippet": "@\"inputTransform\"",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns when literal strings are used to specify key paths.</p> <p>Something like <code>NSStringFromSelector(@selector(foo))</code> is safer because it makes the compiler aware of the selector being specified — this helps find typos at compile time and allows automatic refactoring tools to make appropriate changes.</p>",
        "ruleName": "Literal string for key path",
        "ruleShortName": "LiteralStringKeyPath",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when literal strings are used to specify key paths. Something like NSStringFromSelector(@selector(foo)) is safer because it makes the compiler aware of the selector being specified — this helps find typos at compile time and allows automatic refactoring tools to make appropriate changes.",
      "ruleName": "Literal string for key path",
      "ruleShortName": "LiteralStringKeyPath",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "IQToolbarAddition",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 4115,
          "line": 112,
          "utf16Column": 31,
          "utf16Offset": 4115
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 4084,
          "line": 111,
          "utf16Column": 0,
          "utf16Offset": 4084
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/IQToolbar/IQUIView+IQKeyboardToolbar.m",
      "fileSnippet": "-(NSInvocation *)doneInvocation",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "-[UIView doneInvocation]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/drawable-large/checked1.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "IQ_UIView_Hierarchy",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 7416,
          "line": 233,
          "utf16Column": 18,
          "utf16Offset": 7416
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 7398,
          "line": 232,
          "utf16Column": 0,
          "utf16Offset": 7398
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/Categories/IQUIView+Hierarchy.m",
      "fileSnippet": "- (NSInteger)depth",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "-[UIView depth]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/drawable-large/checked1.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 60,
          "byteOffset": 1470,
          "line": 55,
          "utf16Column": 59,
          "utf16Offset": 1470
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 1411,
          "line": 55,
          "utf16Column": 0,
          "utf16Offset": 1411
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/CZPickerView.h",
      "fileSnippet": "- (void)czpickerViewWillDisplay:(CZPickerView *)pickerView;",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">czpicker</code> in the symbol name <code class=\"fauxpas-codesymbol\">czpickerViewWillDisplay:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "czpicker",
      "impact": "Style",
      "info": "The word czpicker in the symbol name czpickerViewWillDisplay: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/image_placeholdar.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/image_placeholdar.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/ScheduleAppointmentView.xib",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UITextView</code> <code class=\"fauxpas-string\"> </code> (id <code class=\"fauxpas-string\">uZ7-oh-qSs</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UITextView   (id uZ7-oh-qSs)",
      "impact": "Maintainability",
      "info": "Misplaced view: UITextView   (id uZ7-oh-qSs) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/drawable-large/unchecked1.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/drawable-large/unchecked1.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initWithTitle:delegate:",
      "extent": {
        "end": {
          "byteColumn": 77,
          "byteOffset": 6628,
          "line": 139,
          "utf16Column": 76,
          "utf16Offset": 6626
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 6564,
          "line": 139,
          "utf16Column": 12,
          "utf16Offset": 6562
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/IQActionSheetPickerView.m",
      "fileSnippet": "self.actionSheetPickerStyle = IQActionSheetPickerStyleTextPicker",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "actionSheetPickerStyle",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "DoctorModel",
      "extent": {
        "end": {
          "byteColumn": 49,
          "byteOffset": 451,
          "line": 16,
          "utf16Column": 48,
          "utf16Offset": 450
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 403,
          "line": 16,
          "utf16Column": 0,
          "utf16Offset": 402
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/DoctorModel.h",
      "fileSnippet": "@property (nonatomic, strong) NSString *distance",
      "html": {
        "info": "The <code>distance</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The distance property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "DoctorSearchResultsController",
      "extent": {
        "end": {
          "byteColumn": 54,
          "byteOffset": 683,
          "line": 21,
          "utf16Column": 53,
          "utf16Offset": 682
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 630,
          "line": 21,
          "utf16Column": 0,
          "utf16Offset": 629
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/DoctorSearchResultsController.h",
      "fileSnippet": "@property (strong, nonatomic) NSString *specialtyName",
      "html": {
        "info": "The <code>specialtyName</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The specialtyName property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 50,
          "byteOffset": 1037,
          "line": 41,
          "utf16Column": 49,
          "utf16Offset": 1037
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 940,
          "line": 40,
          "utf16Column": 0,
          "utf16Offset": 940
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/CZPickerView.h",
      "fileSnippet": "- (void)czpickerView:(CZPickerView *)pickerView\n          didConfirmWithItemAtRow:(NSInteger)row;",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">czpicker</code> in the symbol name <code class=\"fauxpas-codesymbol\">czpickerView:didConfirmWithItemAtRow:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "czpicker",
      "impact": "Style",
      "info": "The word czpicker in the symbol name czpickerView:didConfirmWithItemAtRow: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCMedicationReminderListTableViewCell.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initWithHeaderTitle:cancelButtonTitle:confirmButtonTitle:",
      "extent": {
        "end": {
          "byteColumn": 51,
          "byteOffset": 1600,
          "line": 52,
          "utf16Column": 50,
          "utf16Offset": 1600
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 1558,
          "line": 52,
          "utf16Column": 8,
          "utf16Offset": 1558
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/CZPickerView.m",
      "fileSnippet": "self.cancelButtonTitle = cancelButtonTitle",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "cancelButtonTitle",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> <code class=\"fauxpas-string\">Enter your child details</code> (id <code class=\"fauxpas-string\">gmN-QR-oZw</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel Enter your child details (id gmN-QR-oZw)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel Enter your child details (id gmN-QR-oZw) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "SWRevealViewController",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 47551,
          "line": 1393,
          "utf16Column": 47,
          "utf16Offset": 47551
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 47504,
          "line": 1392,
          "utf16Column": 0,
          "utf16Offset": 47504
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/SWRevealViewController.m",
      "fileSnippet": "- (SWRevealViewController*)revealViewController",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "-[UIViewController revealViewController]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "DoctorSearchResultsController",
      "extent": {
        "end": {
          "byteColumn": 53,
          "byteOffset": 791,
          "line": 23,
          "utf16Column": 52,
          "utf16Offset": 790
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 739,
          "line": 23,
          "utf16Column": 0,
          "utf16Offset": 738
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/DoctorSearchResultsController.h",
      "fileSnippet": "@property (strong, nonatomic) NSString *specialityId",
      "html": {
        "info": "The <code>specialityId</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The specialityId property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initWithCoder:",
      "extent": {
        "end": {
          "byteColumn": 75,
          "byteOffset": 3039,
          "line": 75,
          "utf16Column": 74,
          "utf16Offset": 3038
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 2969,
          "line": 75,
          "utf16Column": 4,
          "utf16Offset": 2968
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/UserModel.m",
      "fileSnippet": "self.deviceToken        = [aDecoder decodeObjectForKey:@\"deviceToken\"]",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "deviceToken",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/profilephoto@2x.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘non-retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘non-retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/Subtract-logo@2x.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘non-retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘non-retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> <code class=\"fauxpas-string\">Label</code> (id <code class=\"fauxpas-string\">2sq-xk-azZ</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel Label (id 2sq-xk-azZ)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel Label (id 2sq-xk-azZ) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> <code class=\"fauxpas-string\">08:30</code> (id <code class=\"fauxpas-string\">wrf-kv-Wvb</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel 08:30 (id wrf-kv-Wvb)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel 08:30 (id wrf-kv-Wvb) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> <code class=\"fauxpas-string\">Label</code> (id <code class=\"fauxpas-string\">moS-mX-awE</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel Label (id moS-mX-awE)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel Label (id moS-mX-awE) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> <code class=\"fauxpas-string\">Log :</code> (id <code class=\"fauxpas-string\">LIf-pF-ggD</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel Log : (id LIf-pF-ggD)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel Log : (id LIf-pF-ggD) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UITextView</code> (id <code class=\"fauxpas-string\">r9D-B0-Mub</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UITextView (id r9D-B0-Mub)",
      "impact": "Maintainability",
      "info": "Misplaced view: UITextView (id r9D-B0-Mub) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UITextView</code> (id <code class=\"fauxpas-string\">BmE-nS-HwC</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UITextView (id BmE-nS-HwC)",
      "impact": "Maintainability",
      "info": "Misplaced view: UITextView (id BmE-nS-HwC) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UITextView</code> (id <code class=\"fauxpas-string\">s6V-Ei-Boy</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UITextView (id s6V-Ei-Boy)",
      "impact": "Maintainability",
      "info": "Misplaced view: UITextView (id s6V-Ei-Boy) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UITextView</code> (id <code class=\"fauxpas-string\">LMS-jm-Rva</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UITextView (id LMS-jm-Rva)",
      "impact": "Maintainability",
      "info": "Misplaced view: UITextView (id LMS-jm-Rva) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "CHCHealthLogSurveyDetails",
      "extent": {
        "end": {
          "byteColumn": 48,
          "byteOffset": 392,
          "line": 15,
          "utf16Column": 47,
          "utf16Offset": 392
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 345,
          "line": 15,
          "utf16Column": 0,
          "utf16Offset": 345
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCHealthLogSurveyDetails.h",
      "fileSnippet": "@property (nonatomic, strong) NSString *snipset",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">snipset</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "snipset",
      "impact": "Style",
      "info": "The word snipset may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "getLength:",
      "extent": {
        "end": {
          "byteColumn": 91,
          "byteOffset": 15684,
          "line": 427,
          "utf16Column": 90,
          "utf16Offset": 15683
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 15598,
          "line": 427,
          "utf16Column": 4,
          "utf16Offset": 15597
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SignUpController/CHCRegisterController.m",
      "fileSnippet": "mobileNumber = [mobileNumber stringByReplacingOccurrencesOfString:@\"-\" withString:@\"\"]",
      "html": {
        "info": null,
        "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
        "ruleName": "Modifying the value of an argument variable",
        "ruleShortName": "ArgumentModification",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
      "ruleName": "Modifying the value of an argument variable",
      "ruleShortName": "ArgumentModification",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "dealloc",
      "extent": {
        "end": {
          "byteColumn": 35,
          "byteOffset": 5772,
          "line": 181,
          "utf16Column": 34,
          "utf16Offset": 5772
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 5746,
          "line": 181,
          "utf16Column": 8,
          "utf16Offset": 5746
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/APIModel/Reachability.m",
      "fileSnippet": "self.reachabilityRef = nil",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "reachabilityRef",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/LoginController/CHCLoginControllerNew.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "IQToolbarAddition",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 14939,
          "line": 350,
          "utf16Column": 109,
          "utf16Offset": 14939
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 14830,
          "line": 349,
          "utf16Column": 0,
          "utf16Offset": 14830
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/IQToolbar/IQUIView+IQKeyboardToolbar.m",
      "fileSnippet": "-(void)addCancelDoneOnKeyboardWithTarget:(id)target cancelAction:(SEL)cancelAction doneAction:(SEL)doneAction",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "-[UIView addCancelDoneOnKeyboardWithTarget:cancelAction:doneAction:]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "MD5",
      "extent": {
        "end": {
          "byteColumn": 23,
          "byteOffset": 279,
          "line": 13,
          "utf16Column": 22,
          "utf16Offset": 279
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 257,
          "line": 13,
          "utf16Column": 0,
          "utf16Offset": 257
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/NSString+MD5.m",
      "fileSnippet": "- (NSString*)MD5String",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "-[NSString MD5String]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 62,
          "byteOffset": 254,
          "line": 11,
          "utf16Column": 62,
          "utf16Offset": 253
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 192,
          "line": 11,
          "utf16Column": 0,
          "utf16Offset": 191
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/HealthDashboardViewController/HealthDashbooardViewController.h",
      "fileSnippet": "@interface HealthDashbooardViewController : BaseViewController",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">Dashbooard</code> in the symbol name <code class=\"fauxpas-codesymbol\">HealthDashbooardViewController</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "Dashbooard",
      "impact": "Style",
      "info": "The word Dashbooard in the symbol name HealthDashbooardViewController may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 54,
          "byteOffset": 238,
          "line": 11,
          "utf16Column": 54,
          "utf16Offset": 237
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 184,
          "line": 11,
          "utf16Column": 0,
          "utf16Offset": 183
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/ArticlesViewController/ArticlesViewController.h",
      "fileSnippet": "@interface ArticlesViewController : BaseViewController",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "ArticlesViewController",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SurveysController/ListSurveyCell.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "RewardsCatalogModel",
      "extent": {
        "end": {
          "byteColumn": 49,
          "byteOffset": 275,
          "line": 13,
          "utf16Column": 48,
          "utf16Offset": 274
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 227,
          "line": 13,
          "utf16Column": 0,
          "utf16Offset": 226
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/RewardsCatalogModel.h",
      "fileSnippet": "@property (nonatomic, strong) NSString *rewardId",
      "html": {
        "info": "The <code>rewardId</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The rewardId property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "Extension",
      "extent": {
        "end": {
          "byteColumn": 132,
          "byteOffset": 1869,
          "line": 58,
          "utf16Column": 131,
          "utf16Offset": 1868
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 1738,
          "line": 58,
          "utf16Column": 0,
          "utf16Offset": 1737
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Category/UIImage+Extension.m",
      "fileSnippet": "+ (UIImage *)getImageFromText:(NSString *)text withTextColor:(UIColor *)textColor textFont:(UIFont *)font andImageSize:(CGSize)size",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "+[UIImage getImageFromText:withTextColor:textFont:andImageSize:]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 48,
          "byteOffset": 279,
          "line": 13,
          "utf16Column": 48,
          "utf16Offset": 278
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 231,
          "line": 13,
          "utf16Column": 0,
          "utf16Offset": 230
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/BaseUIController/BaseViewController.h",
      "fileSnippet": "@interface BaseViewController : UIViewController",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "BaseViewController",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "sharedInstance",
      "extent": {
        "end": {
          "byteColumn": 51,
          "byteOffset": 621,
          "line": 28,
          "utf16Column": 50,
          "utf16Offset": 620
        },
        "start": {
          "byteColumn": 23,
          "byteOffset": 593,
          "line": 28,
          "utf16Column": 22,
          "utf16Offset": 592
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/BaseUIController/CustomNavigationBar.m",
      "fileSnippet": "[CustomNavigationBar alloc ]",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. <code>[FOOThing alloc]</code>.</p> <p>It is recommended to use <code class=\"fauxpas-codesymbol\">self</code> instead (e.g. <code>[self alloc]</code> or <code>[[self class] alloc]</code>) so that the concrete class would receive the message, and subclassing behavior would not be impeded.</p>",
        "ruleName": "Hardcoded self class reference",
        "ruleShortName": "HardcodedSelfClass",
        "ruleWarning": null
      },
      "identifier": "CustomNavigationBar",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. [FOOThing alloc]. It is recommended to use self instead (e.g. [self alloc] or [[self class] alloc]) so that the concrete class would receive the message, and subclassing behavior would not be impeded.",
      "ruleName": "Hardcoded self class reference",
      "ruleShortName": "HardcodedSelfClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "CHCAppointmentDetailsController",
      "extent": {
        "end": {
          "byteColumn": 61,
          "byteOffset": 356,
          "line": 13,
          "utf16Column": 60,
          "utf16Offset": 356
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 296,
          "line": 13,
          "utf16Column": 0,
          "utf16Offset": 296
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCAppointmentDetailsController.h",
      "fileSnippet": "@property (strong, nonatomic) NSDictionary *outputDictionary",
      "html": {
        "info": "The <code>outputDictionary</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The outputDictionary property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Ambiguous view: <code class=\"fauxpas-objcclass\">UIView</code> (id <code class=\"fauxpas-string\">Uwx-fS-CI8</code>) — the position and size of this view are ambiguous.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIView (id Uwx-fS-CI8)",
      "impact": "Maintainability",
      "info": "Ambiguous view: UIView (id Uwx-fS-CI8) — the position and size of this view are ambiguous.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": "getCurrentLocation",
      "extent": {
        "end": {
          "byteColumn": 36,
          "byteOffset": 2983,
          "line": 96,
          "utf16Column": 35,
          "utf16Offset": 2982
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 2952,
          "line": 96,
          "utf16Column": 4,
          "utf16Offset": 2951
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/SearchDoctorController.m",
      "fileSnippet": "locationManager.delegate = self",
      "html": {
        "info": "SearchDoctorController attaches itself as a <code class=\"fauxpas-objcclass\">CLLocationManager</code> delegate, but does not detach in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>.",
        "ruleDescription": "When an object sets itself as the delegate or data source of one of its members, it must detach that reference in its <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code> method.",
        "ruleName": "Undetached delegate or data source",
        "ruleShortName": "UndetachedDelegate",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "SearchDoctorController attaches itself as a CLLocationManager delegate, but does not detach in -[NSObject dealloc].",
      "ruleDescription": "When an object sets itself as the delegate or data source of one of its members, it must detach that reference in its -[NSObject dealloc] method.",
      "ruleName": "Undetached delegate or data source",
      "ruleShortName": "UndetachedDelegate",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Ambiguous view: <code class=\"fauxpas-objcclass\">UIView</code> (id <code class=\"fauxpas-string\">aq4-6X-dwI</code>) — the position and size of this view are ambiguous.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIView (id aq4-6X-dwI)",
      "impact": "Maintainability",
      "info": "Ambiguous view: UIView (id aq4-6X-dwI) — the position and size of this view are ambiguous.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Ambiguous view: <code class=\"fauxpas-objcclass\">UIView</code> (id <code class=\"fauxpas-string\">ndP-Z0-eCX</code>) — the position and size of this view are ambiguous.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIView (id ndP-Z0-eCX)",
      "impact": "Maintainability",
      "info": "Ambiguous view: UIView (id ndP-Z0-eCX) — the position and size of this view are ambiguous.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Ambiguous view: <code class=\"fauxpas-objcclass\">UIView</code> (id <code class=\"fauxpas-string\">iYn-VO-vT0</code>) — the position and size of this view are ambiguous.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIView (id iYn-VO-vT0)",
      "impact": "Maintainability",
      "info": "Ambiguous view: UIView (id iYn-VO-vT0) — the position and size of this view are ambiguous.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Ambiguous view: <code class=\"fauxpas-objcclass\">UIView</code> (id <code class=\"fauxpas-string\">ksd-Da-hbT</code>) — the position and size of this view are ambiguous.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIView (id ksd-Da-hbT)",
      "impact": "Maintainability",
      "info": "Ambiguous view: UIView (id ksd-Da-hbT) — the position and size of this view are ambiguous.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Ambiguous view: <code class=\"fauxpas-objcclass\">UIView</code> (id <code class=\"fauxpas-string\">04L-Fe-Bok</code>) — the position and size of this view are ambiguous.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIView (id 04L-Fe-Bok)",
      "impact": "Maintainability",
      "info": "Ambiguous view: UIView (id 04L-Fe-Bok) — the position and size of this view are ambiguous.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "init",
      "extent": {
        "end": {
          "byteColumn": 158,
          "byteOffset": 1193,
          "line": 44,
          "utf16Column": 157,
          "utf16Offset": 1193
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 1044,
          "line": 44,
          "utf16Column": 8,
          "utf16Offset": 1044
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/APIModel/ConnectionManager.m",
      "fileSnippet": "[[NSNotificationCenter defaultCenter] addObserver: self selector: @selector(reachabilityChanged:) name: kReachabilityChangedNotification object: nil]",
      "html": {
        "info": null,
        "ruleDescription": "<p>You must invoke <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:]</code> or <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:name:object:]</code> before the observer object is deallocated.</p> <p>This rule only considers cases where the observer reference is <code>self</code>, or an instance variable or an Objective-C property in <code>self</code>.</p> <p>This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).</p>",
        "ruleName": "Missing <code class=\"fauxpas-objcclass\">NSNotificationCenter</code> observer detachment",
        "ruleShortName": "MissingNotificationCenterDetachment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "You must invoke -[NSNotificationCenter removeObserver:] or -[NSNotificationCenter removeObserver:name:object:] before the observer object is deallocated. This rule only considers cases where the observer reference is self, or an instance variable or an Objective-C property in self. This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).",
      "ruleName": "Missing NSNotificationCenter observer detachment",
      "ruleShortName": "MissingNotificationCenterDetachment",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/ScheduleAppointmentView.xib",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> <code class=\"fauxpas-string\">Or</code> (id <code class=\"fauxpas-string\">aSV-it-mCE</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel Or (id aSV-it-mCE)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel Or (id aSV-it-mCE) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "IQToolbarAddition",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 8600,
          "line": 219,
          "utf16Column": 108,
          "utf16Offset": 8600
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 8492,
          "line": 218,
          "utf16Column": 0,
          "utf16Offset": 8492
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/IQToolbar/IQUIView+IQKeyboardToolbar.m",
      "fileSnippet": "-(void)addDoneOnKeyboardWithTarget:(id)target action:(SEL)action shouldShowPlaceholder:(BOOL)showPlaceholder",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "-[UIView addDoneOnKeyboardWithTarget:action:shouldShowPlaceholder:]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Images.xcassets/LaunchScreens/splash_1.imageset",
      "fileSnippet": null,
      "html": {
        "info": "Asset catalog ‘Images’, set ‘splash_1’: The ‘x3 scale, Universal’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "Asset catalog ‘Images’, set ‘splash_1’: The ‘x3 scale, Universal’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Images.xcassets/LaunchScreens/splash_1.imageset",
      "fileSnippet": null,
      "html": {
        "info": "Asset catalog ‘Images’, set ‘splash_1’: The ‘x2 scale, Universal’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "Asset catalog ‘Images’, set ‘splash_1’: The ‘x2 scale, Universal’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 41,
          "byteOffset": 3273,
          "line": 76,
          "utf16Column": 40,
          "utf16Offset": 3273
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 3237,
          "line": 76,
          "utf16Column": 4,
          "utf16Offset": 3237
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCRequestAppointmentController.m",
      "fileSnippet": "self.locationManager.delegate = self",
      "html": {
        "info": "CHCRequestAppointmentController attaches itself as a <code class=\"fauxpas-objcclass\">CLLocationManager</code> delegate, but does not detach in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>.",
        "ruleDescription": "When an object sets itself as the delegate or data source of one of its members, it must detach that reference in its <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code> method.",
        "ruleName": "Undetached delegate or data source",
        "ruleShortName": "UndetachedDelegate",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "CHCRequestAppointmentController attaches itself as a CLLocationManager delegate, but does not detach in -[NSObject dealloc].",
      "ruleDescription": "When an object sets itself as the delegate or data source of one of its members, it must detach that reference in its -[NSObject dealloc] method.",
      "ruleName": "Undetached delegate or data source",
      "ruleShortName": "UndetachedDelegate",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Images.xcassets/LaunchScreens/splash_2.imageset",
      "fileSnippet": null,
      "html": {
        "info": "Asset catalog ‘Images’, set ‘splash_2’: The ‘x3 scale, Universal’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "Asset catalog ‘Images’, set ‘splash_2’: The ‘x3 scale, Universal’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Images.xcassets/LaunchScreens/splash_2.imageset",
      "fileSnippet": null,
      "html": {
        "info": "Asset catalog ‘Images’, set ‘splash_2’: The ‘x2 scale, Universal’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "Asset catalog ‘Images’, set ‘splash_2’: The ‘x2 scale, Universal’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Images.xcassets/LaunchScreens/splash_3.imageset",
      "fileSnippet": null,
      "html": {
        "info": "Asset catalog ‘Images’, set ‘splash_3’: The ‘x3 scale, Universal’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "Asset catalog ‘Images’, set ‘splash_3’: The ‘x3 scale, Universal’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Images.xcassets/LaunchScreens/splash_3.imageset",
      "fileSnippet": null,
      "html": {
        "info": "Asset catalog ‘Images’, set ‘splash_3’: The ‘x2 scale, Universal’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "Asset catalog ‘Images’, set ‘splash_3’: The ‘x2 scale, Universal’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Images.xcassets/LaunchScreens/splash_4.imageset",
      "fileSnippet": null,
      "html": {
        "info": "Asset catalog ‘Images’, set ‘splash_4’: The ‘x3 scale, Universal’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "Asset catalog ‘Images’, set ‘splash_4’: The ‘x3 scale, Universal’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCHome.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> <code class=\"fauxpas-string\">Edit your personal information</code> (id <code class=\"fauxpas-string\">gIR-i5-aOU</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel Edit your personal information (id gIR-i5-aOU)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel Edit your personal information (id gIR-i5-aOU) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Images.xcassets/LaunchScreens/splash_4.imageset",
      "fileSnippet": null,
      "html": {
        "info": "Asset catalog ‘Images’, set ‘splash_4’: The ‘x2 scale, Universal’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "Asset catalog ‘Images’, set ‘splash_4’: The ‘x2 scale, Universal’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 61,
          "byteOffset": 3586,
          "line": 90,
          "utf16Column": 60,
          "utf16Offset": 3586
        },
        "start": {
          "byteColumn": 47,
          "byteOffset": 3572,
          "line": 90,
          "utf16Column": 46,
          "utf16Offset": 3572
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCHomeController.m",
      "fileSnippet": "@\"inputRadius\"",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns when literal strings are used to specify key paths.</p> <p>Something like <code>NSStringFromSelector(@selector(foo))</code> is safer because it makes the compiler aware of the selector being specified — this helps find typos at compile time and allows automatic refactoring tools to make appropriate changes.</p>",
        "ruleName": "Literal string for key path",
        "ruleShortName": "LiteralStringKeyPath",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when literal strings are used to specify key paths. Something like NSStringFromSelector(@selector(foo)) is safer because it makes the compiler aware of the selector being specified — this helps find typos at compile time and allows automatic refactoring tools to make appropriate changes.",
      "ruleName": "Literal string for key path",
      "ruleShortName": "LiteralStringKeyPath",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Images.xcassets/LaunchScreens/splash_5.imageset",
      "fileSnippet": null,
      "html": {
        "info": "Asset catalog ‘Images’, set ‘splash_5’: The ‘x3 scale, Universal’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "Asset catalog ‘Images’, set ‘splash_5’: The ‘x3 scale, Universal’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Images.xcassets/LaunchScreens/splash_5.imageset",
      "fileSnippet": null,
      "html": {
        "info": "Asset catalog ‘Images’, set ‘splash_5’: The ‘x2 scale, Universal’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "Asset catalog ‘Images’, set ‘splash_5’: The ‘x2 scale, Universal’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Images.xcassets/LaunchScreens/splash_6.imageset",
      "fileSnippet": null,
      "html": {
        "info": "Asset catalog ‘Images’, set ‘splash_6’: The ‘x3 scale, Universal’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "Asset catalog ‘Images’, set ‘splash_6’: The ‘x3 scale, Universal’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Images.xcassets/LaunchScreens/splash_6.imageset",
      "fileSnippet": null,
      "html": {
        "info": "Asset catalog ‘Images’, set ‘splash_6’: The ‘x2 scale, Universal’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "Asset catalog ‘Images’, set ‘splash_6’: The ‘x2 scale, Universal’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 40,
          "byteOffset": 1998,
          "line": 57,
          "utf16Column": 39,
          "utf16Offset": 1998
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 1959,
          "line": 57,
          "utf16Column": 0,
          "utf16Offset": 1959
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCSurveyScreen/CHCSurveyController.m",
      "fileSnippet": "@property (nonatomic) NSInteger orderid",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">orderid</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "orderid",
      "impact": "Style",
      "info": "The word orderid may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "CHCHealthSurveyCell",
      "extent": {
        "end": {
          "byteColumn": 56,
          "byteOffset": 459,
          "line": 15,
          "utf16Column": 55,
          "utf16Offset": 459
        },
        "start": {
          "byteColumn": 49,
          "byteOffset": 452,
          "line": 15,
          "utf16Column": 48,
          "utf16Offset": 452
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/HomeScreenContentViews/CHCHealthSurveyCell.h",
      "fileSnippet": "snipset",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">Snipset</code> in the symbol name <code class=\"fauxpas-codesymbol\">setSnipset:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "Snipset",
      "impact": "Style",
      "info": "The word Snipset in the symbol name setSnipset: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 61,
          "byteOffset": 899,
          "line": 25,
          "utf16Column": 60,
          "utf16Offset": 899
        },
        "start": {
          "byteColumn": 49,
          "byteOffset": 887,
          "line": 25,
          "utf16Column": 48,
          "utf16Offset": 887
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCArticleArchiveController.m",
      "fileSnippet": "choicepoints",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">choicepoints</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "choicepoints",
      "impact": "Style",
      "info": "The word choicepoints may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "IQToolbarAddition",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 3897,
          "line": 102,
          "utf16Column": 35,
          "utf16Offset": 3897
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 3862,
          "line": 101,
          "utf16Column": 0,
          "utf16Offset": 3862
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/IQToolbar/IQUIView+IQKeyboardToolbar.m",
      "fileSnippet": "-(NSInvocation *)previousInvocation",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "-[UIView previousInvocation]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initWithCoder:",
      "extent": {
        "end": {
          "byteColumn": 84,
          "byteOffset": 3586,
          "line": 84,
          "utf16Column": 83,
          "utf16Offset": 3585
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 3507,
          "line": 84,
          "utf16Column": 4,
          "utf16Offset": 3506
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/UserModel.m",
      "fileSnippet": "self.badgeSurveyCount       = [aDecoder decodeObjectForKey:@\"badgeSurveyCount\"]",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "badgeSurveyCount",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/buttoncopy.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/buttoncopy.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initWithCoder:",
      "extent": {
        "end": {
          "byteColumn": 70,
          "byteOffset": 2342,
          "line": 63,
          "utf16Column": 69,
          "utf16Offset": 2341
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 2277,
          "line": 63,
          "utf16Column": 4,
          "utf16Offset": 2276
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/UserModel.m",
      "fileSnippet": "self.userId             = [aDecoder decodeObjectForKey:@\"userId\"]",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "userId",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Images.xcassets/Dashboard/Check-icon.imageset/Choice Points App_Design_02-15-16-06 check-2x.png",
      "fileSnippet": null,
      "html": {
        "info": "Asset catalog ‘Images’, set ‘Check-icon’: <div class=\"fauxpas-filename\">Choice Points App_Design_02-15-16-06 check-2x.png</div> (x2 scale) resolution (287 x 271) should be 288 x 272.",
        "ruleDescription": "The retina (‘@2x’ or ‘@3x’) version of an image resource must be exactly double or triple the size of the corresponding low-resolution image (assuming the point size of the presentation context remains the same regardless of screen resolution). Otherwise the effective resolution of the image will not match the effective resolution of its presentation context, which will lead to a blurry image, empty space at the edges, or overflow.",
        "ruleName": "Unexpected retina image resolution",
        "ruleShortName": "RetinaImagesResolution",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "Asset catalog ‘Images’, set ‘Check-icon’: Choice Points App_Design_02-15-16-06 check-2x.png (x2 scale) resolution (287 x 271) should be 288 x 272.",
      "ruleDescription": "The retina (‘@2x’ or ‘@3x’) version of an image resource must be exactly double or triple the size of the corresponding low-resolution image (assuming the point size of the presentation context remains the same regardless of screen resolution). Otherwise the effective resolution of the image will not match the effective resolution of its presentation context, which will lead to a blurry image, empty space at the edges, or overflow.",
      "ruleName": "Unexpected retina image resolution",
      "ruleShortName": "RetinaImagesResolution",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Info.plist",
      "fileSnippet": null,
      "html": {
        "info": "<p>The <code class=\"fauxpas-string\">NSLocationUsageDescription</code> Info.plist key is strongly recommended but missing.</p> <p>This key is needed due to the usage of the following code symbols:</p><ul><li><code class=\"fauxpas-objcclass\">CLLocationManager</code></li></ul>",
        "ruleDescription": "Some APIs (that access e.g. contacts or calendars) require a usage description (“purpose string”) in the application metadata. This will be shown to the user when the system asks them to allow the application access to the related user data or system resource. This rule warns when some such APIs are used, but the associated usage description is missing.",
        "ruleName": "Missing API usage description",
        "ruleShortName": "MissingAPIUsageDescription",
        "ruleWarning": null
      },
      "identifier": "NSLocationUsageDescription",
      "impact": "Functionality",
      "info": "The NSLocationUsageDescription Info.plist key is strongly recommended but missing. This key is needed due to the usage of the following code symbols:CLLocationManager",
      "ruleDescription": "Some APIs (that access e.g. contacts or calendars) require a usage description (“purpose string”) in the application metadata. This will be shown to the user when the system asks them to allow the application access to the related user data or system resource. This rule warns when some such APIs are used, but the associated usage description is missing.",
      "ruleName": "Missing API usage description",
      "ruleShortName": "MissingAPIUsageDescription",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 56,
          "byteOffset": 242,
          "line": 11,
          "utf16Column": 56,
          "utf16Offset": 241
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 186,
          "line": 11,
          "utf16Column": 0,
          "utf16Offset": 185
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/MyAppointmentsController.h",
      "fileSnippet": "@interface MyAppointmentsController : BaseViewController",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "MyAppointmentsController",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/UserModel.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 55,
          "byteOffset": 240,
          "line": 11,
          "utf16Column": 55,
          "utf16Offset": 239
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 185,
          "line": 11,
          "utf16Column": 0,
          "utf16Offset": 184
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyMedicationsController/MyMedicationsController.h",
      "fileSnippet": "@interface MyMedicationsController : BaseViewController",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "MyMedicationsController",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 53,
          "byteOffset": 1279,
          "line": 49,
          "utf16Column": 52,
          "utf16Offset": 1279
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 1179,
          "line": 48,
          "utf16Column": 0,
          "utf16Offset": 1179
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/CZPickerView.h",
      "fileSnippet": "- (void)czpickerView:(CZPickerView *)pickerView\n          didConfirmWithItemsAtRows:(NSArray *)rows;",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">czpicker</code> in the symbol name <code class=\"fauxpas-codesymbol\">czpickerView:didConfirmWithItemsAtRows:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "czpicker",
      "impact": "Style",
      "info": "The word czpicker in the symbol name czpickerView:didConfirmWithItemsAtRows: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Utils/Utils.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 81,
          "byteOffset": 834,
          "line": 31,
          "utf16Column": 80,
          "utf16Offset": 834
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 754,
          "line": 31,
          "utf16Column": 0,
          "utf16Offset": 754
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/CZPickerView.h",
      "fileSnippet": "- (UIImage *)czpickerView:(CZPickerView *)pickerView imageForRow:(NSInteger)row;",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">czpicker</code> in the symbol name <code class=\"fauxpas-codesymbol\">czpickerView:imageForRow:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "czpicker",
      "impact": "Style",
      "info": "The word czpicker in the symbol name czpickerView:imageForRow: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ChildDetails",
      "extent": {
        "end": {
          "byteColumn": 47,
          "byteOffset": 311,
          "line": 13,
          "utf16Column": 46,
          "utf16Offset": 311
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 265,
          "line": 13,
          "utf16Column": 0,
          "utf16Offset": 265
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCSurveyScreen/ChildDetails.h",
      "fileSnippet": "@property (strong, nonatomic) NSString *gender",
      "html": {
        "info": "The <code>gender</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The gender property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initWithCoder:",
      "extent": {
        "end": {
          "byteColumn": 81,
          "byteOffset": 2576,
          "line": 66,
          "utf16Column": 80,
          "utf16Offset": 2575
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 2500,
          "line": 66,
          "utf16Column": 4,
          "utf16Offset": 2499
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/UserModel.m",
      "fileSnippet": "self.sessionExpiration  = [aDecoder decodeObjectForKey:@\"sessionExpiration\"]",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "sessionExpiration",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": "setPerformBlock:",
      "extent": {
        "end": {
          "byteColumn": 38,
          "byteOffset": 14644,
          "line": 271,
          "utf16Column": 37,
          "utf16Offset": 14644
        },
        "start": {
          "byteColumn": 26,
          "byteOffset": 14632,
          "line": 271,
          "utf16Column": 25,
          "utf16Offset": 14632
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/SWRevealViewController.h",
      "fileSnippet": "performBlock",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended that typedef be used for all block-typed declarations, for readability.",
        "ruleName": "Block-typed declaration without typedef",
        "ruleShortName": "NonTypedefBlockDeclaration",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": null,
      "ruleDescription": "It is recommended that typedef be used for all block-typed declarations, for readability.",
      "ruleName": "Block-typed declaration without typedef",
      "ruleShortName": "NonTypedefBlockDeclaration",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 98,
          "byteOffset": 4180,
          "line": 134,
          "utf16Column": 97,
          "utf16Offset": 4180
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 4083,
          "line": 134,
          "utf16Column": 0,
          "utf16Offset": 4083
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/SWRevealViewController.m",
      "fileSnippet": "- (void)_getBounceBack:(BOOL*)pBounceBack pStableDrag:(BOOL*)pStableDrag forSymetry:(int)symetry;",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">Symetry</code> in the symbol name <code class=\"fauxpas-codesymbol\">_getBounceBack:pStableDrag:forSymetry:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "Symetry",
      "impact": "Style",
      "info": "The word Symetry in the symbol name _getBounceBack:pStableDrag:forSymetry: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/menu-icon1.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/menu-icon1.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "instructionButtonClicked:",
      "extent": {
        "end": {
          "byteColumn": 157,
          "byteOffset": 1217,
          "line": 41,
          "utf16Column": 156,
          "utf16Offset": 1216
        },
        "start": {
          "byteColumn": 46,
          "byteOffset": 1106,
          "line": 41,
          "utf16Column": 45,
          "utf16Offset": 1105
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/SearchDoctorController.m",
      "fileSnippet": "[[InstructionsViewController alloc] initWithNibName:@\"InstructionsViewController\" bundle:[NSBundle mainBundle]]",
      "html": {
        "info": "Instantiating <code class=\"fauxpas-objcclass\">InstructionsViewController</code> outside its implementation with literal NIB name <code class=\"fauxpas-string\">InstructionsViewController</code>",
        "ruleDescription": "It is not advisable to use <code class=\"fauxpas-objcmethod\">-[UIViewController initWithNibName:bundle:]</code> to instantiate <code class=\"fauxpas-objcclass\">UIViewController</code> subclasses outside of the subclass implementation itself. This breaks encapsulation (the subclass should be the one to decide which NIB to use) and makes it more likely that a typo in the NIB name string will crash the app during runtime.",
        "ruleName": "Using <code class=\"fauxpas-objcmethod\">-[UIViewController initWithNibName:bundle:]</code> outside the <code class=\"fauxpas-objcclass\">UIViewController</code> implementation",
        "ruleShortName": "ViewControllerInitWithNibName",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": "Instantiating InstructionsViewController outside its implementation with literal NIB name InstructionsViewController",
      "ruleDescription": "It is not advisable to use -[UIViewController initWithNibName:bundle:] to instantiate UIViewController subclasses outside of the subclass implementation itself. This breaks encapsulation (the subclass should be the one to decide which NIB to use) and makes it more likely that a typo in the NIB name string will crash the app during runtime.",
      "ruleName": "Using -[UIViewController initWithNibName:bundle:] outside the UIViewController implementation",
      "ruleShortName": "ViewControllerInitWithNibName",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 31,
          "byteOffset": 3679,
          "line": 119,
          "utf16Column": 31,
          "utf16Offset": 3679
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 3648,
          "line": 119,
          "utf16Column": 0,
          "utf16Offset": 3648
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/SWRevealViewController.m",
      "fileSnippet": "@interface SWRevealView: UIView",
      "html": {
        "info": "The <code class=\"fauxpas-string\">SW</code> prefix is used. Two-character prefixes are reserved for Apple’s system frameworks. The prefixes in your own (or third-party) code should be at least three characters long.",
        "ruleDescription": "Two-character prefixes (such as <code>NS</code>) are reserved for Apple’s system frameworks. Your own code should use prefixes that are three characters long.",
        "ruleName": "Reserved symbol prefix",
        "ruleShortName": "ReservedPrefix",
        "ruleWarning": null
      },
      "identifier": "SW",
      "impact": "Maintainability",
      "info": "The SW prefix is used. Two-character prefixes are reserved for Apple’s system frameworks. The prefixes in your own (or third-party) code should be at least three characters long.",
      "ruleDescription": "Two-character prefixes (such as NS) are reserved for Apple’s system frameworks. Your own code should use prefixes that are three characters long.",
      "ruleName": "Reserved symbol prefix",
      "ruleShortName": "ReservedPrefix",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/HEDISViewController/HEDISSubCell.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 98,
          "byteOffset": 1230,
          "line": 36,
          "utf16Column": 97,
          "utf16Offset": 1230
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 1133,
          "line": 36,
          "utf16Column": 0,
          "utf16Offset": 1133
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCHealthLogScreen/HorizontalTableView/PTEHorizontalTableView.h",
      "fileSnippet": "- (NSUInteger)numberOfSectionsInhorizontalTableView:(PTEHorizontalTableView*)horizontalTableView;",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">Inhorizontal</code> in the symbol name <code class=\"fauxpas-codesymbol\">numberOfSectionsInhorizontalTableView:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "Inhorizontal",
      "impact": "Style",
      "info": "The word Inhorizontal in the symbol name numberOfSectionsInhorizontalTableView: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyMessagesController/MyMessageCell.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initWithHeaderTitle:cancelButtonTitle:confirmButtonTitle:",
      "extent": {
        "end": {
          "byteColumn": 121,
          "byteOffset": 2446,
          "line": 64,
          "utf16Column": 120,
          "utf16Offset": 2446
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 2334,
          "line": 64,
          "utf16Column": 8,
          "utf16Offset": 2334
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/CZPickerView.m",
      "fileSnippet": "self.confirmButtonBackgroundColor = [UIColor colorWithRed:40/255.0 green:165.0/255.0 blue:220.0/255.0 alpha:1.0]",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "confirmButtonBackgroundColor",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 61,
          "byteOffset": 10828,
          "line": 235,
          "utf16Column": 60,
          "utf16Offset": 10828
        },
        "start": {
          "byteColumn": 47,
          "byteOffset": 10814,
          "line": 235,
          "utf16Column": 46,
          "utf16Offset": 10814
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCHealthLogScreen/CHCHealthLogNewController.m",
      "fileSnippet": "@\"inputRadius\"",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns when literal strings are used to specify key paths.</p> <p>Something like <code>NSStringFromSelector(@selector(foo))</code> is safer because it makes the compiler aware of the selector being specified — this helps find typos at compile time and allows automatic refactoring tools to make appropriate changes.</p>",
        "ruleName": "Literal string for key path",
        "ruleShortName": "LiteralStringKeyPath",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when literal strings are used to specify key paths. Something like NSStringFromSelector(@selector(foo)) is safer because it makes the compiler aware of the selector being specified — this helps find typos at compile time and allows automatic refactoring tools to make appropriate changes.",
      "ruleName": "Literal string for key path",
      "ruleShortName": "LiteralStringKeyPath",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> (id <code class=\"fauxpas-string\">G5y-XM-uvB</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel (id G5y-XM-uvB)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel (id G5y-XM-uvB) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> (id <code class=\"fauxpas-string\">lkY-N2-iun</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel (id lkY-N2-iun)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel (id lkY-N2-iun) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> (id <code class=\"fauxpas-string\">wqw-ms-92f</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel (id wqw-ms-92f)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel (id wqw-ms-92f) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> (id <code class=\"fauxpas-string\">JYc-t8-eRn</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel (id JYc-t8-eRn)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel (id JYc-t8-eRn) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> (id <code class=\"fauxpas-string\">Mnn-YZ-Bpu</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel (id Mnn-YZ-Bpu)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel (id Mnn-YZ-Bpu) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> (id <code class=\"fauxpas-string\">Wyg-FQ-c6w</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel (id Wyg-FQ-c6w)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel (id Wyg-FQ-c6w) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> (id <code class=\"fauxpas-string\">8I1-aI-XJA</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel (id 8I1-aI-XJA)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel (id 8I1-aI-XJA) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> (id <code class=\"fauxpas-string\">bQS-2Y-wZL</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel (id bQS-2Y-wZL)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel (id bQS-2Y-wZL) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> (id <code class=\"fauxpas-string\">Xve-ih-ByQ</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel (id Xve-ih-ByQ)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel (id Xve-ih-ByQ) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 58,
          "byteOffset": 702,
          "line": 26,
          "utf16Column": 57,
          "utf16Offset": 701
        },
        "start": {
          "byteColumn": 51,
          "byteOffset": 695,
          "line": 26,
          "utf16Column": 50,
          "utf16Offset": 694
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyProfileViewController/MyProfileController.m",
      "fileSnippet": "lnameTF",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">lname</code> in the symbol name <code class=\"fauxpas-codesymbol\">lnameTF</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "lname",
      "impact": "Style",
      "info": "The word lname in the symbol name lnameTF may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ArticleModel",
      "extent": {
        "end": {
          "byteColumn": 51,
          "byteOffset": 364,
          "line": 15,
          "utf16Column": 50,
          "utf16Offset": 363
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 314,
          "line": 15,
          "utf16Column": 0,
          "utf16Offset": 313
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/ArticleModel.h",
      "fileSnippet": "@property (nonatomic, strong) NSString *articleUrl",
      "html": {
        "info": "The <code>articleUrl</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The articleUrl property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "doneButtonClick:",
      "extent": {
        "end": {
          "byteColumn": 41,
          "byteOffset": 8839,
          "line": 202,
          "utf16Column": 40,
          "utf16Offset": 8839
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 8803,
          "line": 202,
          "utf16Column": 4,
          "utf16Offset": 8803
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCSurveyScreen/CHCChildDetailsController.m",
      "fileSnippet": "formatter.dateFormat = @\"MM/dd/yyyy\"",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns when an <code class=\"fauxpas-objcclass\">NSDateFormatter</code> is used with fixed-format dates without using the invariant <code class=\"fauxpas-string\">en_US_POSIX</code> locale. If any other locale is used, the date format string may be overwritten, depending on system date and time settings.</p> <p>When working with user-visible dates, date and time styles should be used instead of setting a date format.</p>",
        "ruleName": "Fixed-format <code class=\"fauxpas-objcclass\">NSDateFormatter</code> not using invariant (POSIX) locale",
        "ruleShortName": "FixedFormatDateFormatter",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Warns when an NSDateFormatter is used with fixed-format dates without using the invariant en_US_POSIX locale. If any other locale is used, the date format string may be overwritten, depending on system date and time settings. When working with user-visible dates, date and time styles should be used instead of setting a date format.",
      "ruleName": "Fixed-format NSDateFormatter not using invariant (POSIX) locale",
      "ruleShortName": "FixedFormatDateFormatter",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">JVFloatLabeledTextField</code> (id <code class=\"fauxpas-string\">0ZP-vz-oe8</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "JVFloatLabeledTextField (id 0ZP-vz-oe8)",
      "impact": "Maintainability",
      "info": "Misplaced view: JVFloatLabeledTextField (id 0ZP-vz-oe8) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "DoctorModel",
      "extent": {
        "end": {
          "byteColumn": 49,
          "byteOffset": 401,
          "line": 15,
          "utf16Column": 48,
          "utf16Offset": 400
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 353,
          "line": 15,
          "utf16Column": 0,
          "utf16Offset": 352
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/DoctorModel.h",
      "fileSnippet": "@property (nonatomic, strong) NSString *provider",
      "html": {
        "info": "The <code>provider</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The provider property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "getImageName:withBGColor:andSize:",
      "extent": {
        "end": {
          "byteColumn": 56,
          "byteOffset": 956,
          "line": 32,
          "utf16Column": 55,
          "utf16Offset": 955
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 905,
          "line": 32,
          "utf16Column": 4,
          "utf16Offset": 904
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Category/UIImage+Extension.m",
      "fileSnippet": "color = color == nil ? [UIColor clearColor] : color",
      "html": {
        "info": null,
        "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
        "ruleName": "Modifying the value of an argument variable",
        "ruleShortName": "ArgumentModification",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
      "ruleName": "Modifying the value of an argument variable",
      "ruleShortName": "ArgumentModification",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 53,
          "byteOffset": 233,
          "line": 11,
          "utf16Column": 53,
          "utf16Offset": 233
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 180,
          "line": 11,
          "utf16Column": 0,
          "utf16Offset": 180
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreenNew/HomeScreenNewContentViews/HowItWorksNewController.h",
      "fileSnippet": "@interface HowItWorksNewController : UIViewController",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "HowItWorksNewController",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": "APIClass",
      "extent": {
        "end": {
          "byteColumn": 65,
          "byteOffset": 9501,
          "line": 262,
          "utf16Column": 64,
          "utf16Offset": 9501
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 9437,
          "line": 262,
          "utf16Column": 0,
          "utf16Offset": 9437
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/APIModel/APIClass.m",
      "fileSnippet": "- (void)connectionDidFinishLoading:(NSURLConnection *)connection",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns about Objective-C methods to which no references are found.</p> <p>This rule will not warn about <code class=\"fauxpas-codesymbol\">IBAction</code> methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form <code class=\"fauxpas-string\">*+Private.h</code>). It also won’t warn about unused getter methods whose setter is used, and vice versa.</p>",
        "ruleName": "Possibly unused Objective-C method",
        "ruleShortName": "UnusedMethod",
        "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool)."
      },
      "identifier": "-[APIClass connectionDidFinishLoading:]",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns about Objective-C methods to which no references are found. This rule will not warn about IBAction methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form *+Private.h). It also won’t warn about unused getter methods whose setter is used, and vice versa.",
      "ruleName": "Possibly unused Objective-C method",
      "ruleShortName": "UnusedMethod",
      "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool).",
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 58,
          "byteOffset": 267,
          "line": 12,
          "utf16Column": 58,
          "utf16Offset": 266
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 209,
          "line": 12,
          "utf16Column": 0,
          "utf16Offset": 208
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SurveysController/ListSurveysViewController.h",
      "fileSnippet": "@interface ListSurveysViewController : BaseViewController{",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "ListSurveysViewController",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Images.xcassets/clockcalendar.imageset",
      "fileSnippet": null,
      "html": {
        "info": "Asset catalog ‘Images’, set ‘clockcalendar’: The ‘x3 scale, Universal’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "Asset catalog ‘Images’, set ‘clockcalendar’: The ‘x3 scale, Universal’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Images.xcassets/clockcalendar.imageset",
      "fileSnippet": null,
      "html": {
        "info": "Asset catalog ‘Images’, set ‘clockcalendar’: The ‘x2 scale, Universal’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "Asset catalog ‘Images’, set ‘clockcalendar’: The ‘x2 scale, Universal’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "RegistrationSurveyController",
      "extent": {
        "end": {
          "byteColumn": 51,
          "byteOffset": 1044,
          "line": 28,
          "utf16Column": 50,
          "utf16Offset": 1043
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 994,
          "line": 28,
          "utf16Column": 0,
          "utf16Offset": 993
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SurveysController/RegistrationSurveyController.h",
      "fileSnippet": "@property (strong, nonatomic) NSString *userWeight",
      "html": {
        "info": "The <code>userWeight</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The userWeight property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 39,
          "byteOffset": 511,
          "line": 14,
          "utf16Column": 39,
          "utf16Offset": 511
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 472,
          "line": 14,
          "utf16Column": 0,
          "utf16Offset": 472
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/APIModel/ConnectionManager.h",
      "fileSnippet": "@interface ConnectionManager : NSObject",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "ConnectionManager",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIButton</code> (id <code class=\"fauxpas-string\">TEo-Bw-CjH</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIButton (id TEo-Bw-CjH)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIButton (id TEo-Bw-CjH) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIButton</code> (id <code class=\"fauxpas-string\">rd2-aA-D5S</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIButton (id rd2-aA-D5S)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIButton (id rd2-aA-D5S) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIButton</code> (id <code class=\"fauxpas-string\">rQb-yz-t4y</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIButton (id rQb-yz-t4y)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIButton (id rQb-yz-t4y) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIButton</code> (id <code class=\"fauxpas-string\">0dx-Xa-03W</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIButton (id 0dx-Xa-03W)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIButton (id 0dx-Xa-03W) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIButton</code> (id <code class=\"fauxpas-string\">sU3-BF-KGq</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIButton (id sU3-BF-KGq)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIButton (id sU3-BF-KGq) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIButton</code> (id <code class=\"fauxpas-string\">NTn-5I-bS2</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIButton (id NTn-5I-bS2)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIButton (id NTn-5I-bS2) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIButton</code> (id <code class=\"fauxpas-string\">M7x-ay-Kyg</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIButton (id M7x-ay-Kyg)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIButton (id M7x-ay-Kyg) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIButton</code> (id <code class=\"fauxpas-string\">qWr-6K-IPE</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIButton (id qWr-6K-IPE)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIButton (id qWr-6K-IPE) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIButton</code> (id <code class=\"fauxpas-string\">b03-qR-aib</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIButton (id b03-qR-aib)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIButton (id b03-qR-aib) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIButton</code> (id <code class=\"fauxpas-string\">1KP-X6-Fhl</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIButton (id 1KP-X6-Fhl)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIButton (id 1KP-X6-Fhl) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIButton</code> (id <code class=\"fauxpas-string\">4Nj-9M-CUD</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIButton (id 4Nj-9M-CUD)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIButton (id 4Nj-9M-CUD) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIButton</code> (id <code class=\"fauxpas-string\">p4j-DK-aAt</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIButton (id p4j-DK-aAt)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIButton (id p4j-DK-aAt) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIButton</code> (id <code class=\"fauxpas-string\">vzm-mq-svL</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIButton (id vzm-mq-svL)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIButton (id vzm-mq-svL) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "IQToolbarAddition",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 9207,
          "line": 233,
          "utf16Column": 226,
          "utf16Offset": 9207
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 8981,
          "line": 232,
          "utf16Column": 0,
          "utf16Offset": 8981
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/IQToolbar/IQUIView+IQKeyboardToolbar.m",
      "fileSnippet": "- (void)addLeftRightOnKeyboardWithTarget:(id)target leftButtonTitle:(NSString*)leftTitle rightButtonTitle:(NSString*)rightTitle leftButtonAction:(SEL)leftAction rightButtonAction:(SEL)rightAction titleText:(NSString*)titleText",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "-[UIView addLeftRightOnKeyboardWithTarget:leftButtonTitle:rightButtonTitle:leftButtonAction:rightButtonAction:titleText:]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIButton</code> (id <code class=\"fauxpas-string\">xDq-42-jSm</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIButton (id xDq-42-jSm)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIButton (id xDq-42-jSm) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UIButton</code> (id <code class=\"fauxpas-string\">LJ8-sh-bl0</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UIButton (id LJ8-sh-bl0)",
      "impact": "Maintainability",
      "info": "Misplaced view: UIButton (id LJ8-sh-bl0) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 40,
          "byteOffset": 1998,
          "line": 57,
          "utf16Column": 39,
          "utf16Offset": 1998
        },
        "start": {
          "byteColumn": 33,
          "byteOffset": 1991,
          "line": 57,
          "utf16Column": 32,
          "utf16Offset": 1991
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCSurveyScreen/CHCSurveyController.m",
      "fileSnippet": "orderid",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">orderid</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "orderid",
      "impact": "Style",
      "info": "The word orderid may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "IQActionSheetPickerView",
      "extent": {
        "end": {
          "byteColumn": 58,
          "byteOffset": 5580,
          "line": 153,
          "utf16Column": 57,
          "utf16Offset": 5580
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 5523,
          "line": 153,
          "utf16Column": 0,
          "utf16Offset": 5523
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/IQActionSheetPickerView.h",
      "fileSnippet": "@property(nonatomic, strong) NSArray *titlesForComponents",
      "html": {
        "info": "The <code>titlesForComponents</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The titlesForComponents property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": "getJSON:",
      "extent": {
        "end": {
          "byteColumn": 30,
          "byteOffset": 10367,
          "line": 295,
          "utf16Column": 29,
          "utf16Offset": 10367
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 10342,
          "line": 295,
          "utf16Column": 4,
          "utf16Offset": 10342
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/APIModel/APIClass.m",
      "fileSnippet": "NSError *writeError = nil",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns when <code class=\"fauxpas-objcclass\">NSError</code> or <code class=\"fauxpas-typedef\">CFErrorRef</code> variable values are never used.</p> <p>If you are not interested in the error return value of a method or function, pass <code class=\"fauxpas-codesymbol\">NULL</code> for the error argument.</p>",
        "ruleName": "Unused error value",
        "ruleShortName": "UnusedErrorValue",
        "ruleWarning": null
      },
      "identifier": "writeError",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Warns when NSError or CFErrorRef variable values are never used. If you are not interested in the error return value of a method or function, pass NULL for the error argument.",
      "ruleName": "Unused error value",
      "ruleShortName": "UnusedErrorValue",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "dragFrontViewToXLocation:",
      "extent": {
        "end": {
          "byteColumn": 66,
          "byteOffset": 8133,
          "line": 261,
          "utf16Column": 65,
          "utf16Offset": 8133
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 8072,
          "line": 261,
          "utf16Column": 4,
          "utf16Offset": 8072
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/SWRevealViewController.m",
      "fileSnippet": "xLocation = [self _adjustedDragLocationForLocation:xLocation]",
      "html": {
        "info": null,
        "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
        "ruleName": "Modifying the value of an argument variable",
        "ruleShortName": "ArgumentModification",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
      "ruleName": "Modifying the value of an argument variable",
      "ruleShortName": "ArgumentModification",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "IQ_UIView_Hierarchy",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 5933,
          "line": 180,
          "utf16Column": 30,
          "utf16Offset": 5933
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 5903,
          "line": 179,
          "utf16Column": 0,
          "utf16Offset": 5903
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/Categories/IQUIView+Hierarchy.m",
      "fileSnippet": "- (NSArray*)deepResponderViews",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "-[UIView deepResponderViews]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 112,
          "byteOffset": 348,
          "line": 15,
          "utf16Column": 111,
          "utf16Offset": 347
        },
        "start": {
          "byteColumn": 100,
          "byteOffset": 336,
          "line": 15,
          "utf16Column": 99,
          "utf16Offset": 335
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Utils/UIUtils.m",
      "fileSnippet": "@\"statusBar\"",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns when literal strings are used to specify key paths.</p> <p>Something like <code>NSStringFromSelector(@selector(foo))</code> is safer because it makes the compiler aware of the selector being specified — this helps find typos at compile time and allows automatic refactoring tools to make appropriate changes.</p>",
        "ruleName": "Literal string for key path",
        "ruleShortName": "LiteralStringKeyPath",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when literal strings are used to specify key paths. Something like NSStringFromSelector(@selector(foo)) is safer because it makes the compiler aware of the selector being specified — this helps find typos at compile time and allows automatic refactoring tools to make appropriate changes.",
      "ruleName": "Literal string for key path",
      "ruleShortName": "LiteralStringKeyPath",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "AppUserData",
      "extent": {
        "end": {
          "byteColumn": 49,
          "byteOffset": 349,
          "line": 16,
          "utf16Column": 48,
          "utf16Offset": 348
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 301,
          "line": 16,
          "utf16Column": 0,
          "utf16Offset": 300
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/AppUserData/AppUserData.h",
      "fileSnippet": "@property (nonatomic, strong) NSString *lastName",
      "html": {
        "info": "The <code>lastName</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The lastName property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": "application:didReceiveRemoteNotification:fetchCompletionHandler:",
      "extent": {
        "end": {
          "byteColumn": 179,
          "byteOffset": 4481,
          "line": 114,
          "utf16Column": 178,
          "utf16Offset": 4481
        },
        "start": {
          "byteColumn": 128,
          "byteOffset": 4430,
          "line": 114,
          "utf16Column": 127,
          "utf16Offset": 4430
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ApplicationSupport/AppDelegate.m",
      "fileSnippet": "void (^)(UIBackgroundFetchResult))completionHandler",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended that typedef be used for all block-typed declarations, for readability.",
        "ruleName": "Block-typed declaration without typedef",
        "ruleShortName": "NonTypedefBlockDeclaration",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": null,
      "ruleDescription": "It is recommended that typedef be used for all block-typed declarations, for readability.",
      "ruleName": "Block-typed declaration without typedef",
      "ruleShortName": "NonTypedefBlockDeclaration",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 31,
          "byteOffset": 83,
          "line": 8,
          "utf16Column": 30,
          "utf16Offset": 83
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 61,
          "line": 8,
          "utf16Column": 8,
          "utf16Offset": 61
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/CZPickerView.m",
      "fileSnippet": "CZP_FOOTER_HEIGHT 44.0",
      "html": {
        "info": null,
        "ruleDescription": "<p>Instead of using a macro definition for a literal value that is used as a constant, define it as an actual constant.</p> <p>This makes the scope of the constant more explicit (it’s not available in all imported files until undefined) and it cannot be redefined or undefined in some later part of the code. Macro definitions are also not available in the debugger.</p>",
        "ruleName": "Macro definition for literal value",
        "ruleShortName": "MacroLiteral",
        "ruleWarning": null
      },
      "identifier": "CZP_FOOTER_HEIGHT",
      "impact": "Style",
      "info": null,
      "ruleDescription": "Instead of using a macro definition for a literal value that is used as a constant, define it as an actual constant. This makes the scope of the constant more explicit (it’s not available in all imported files until undefined) and it cannot be redefined or undefined in some later part of the code. Macro definitions are also not available in the debugger.",
      "ruleName": "Macro definition for literal value",
      "ruleShortName": "MacroLiteral",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": "SurveysViewController",
      "extent": {
        "end": {
          "byteColumn": 66,
          "byteOffset": 1753,
          "line": 51,
          "utf16Column": 65,
          "utf16Offset": 1752
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 1688,
          "line": 51,
          "utf16Column": 0,
          "utf16Offset": 1687
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SurveysController/SurveysViewController.m",
      "fileSnippet": "- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns about Objective-C methods to which no references are found.</p> <p>This rule will not warn about <code class=\"fauxpas-codesymbol\">IBAction</code> methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form <code class=\"fauxpas-string\">*+Private.h</code>). It also won’t warn about unused getter methods whose setter is used, and vice versa.</p>",
        "ruleName": "Possibly unused Objective-C method",
        "ruleShortName": "UnusedMethod",
        "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool)."
      },
      "identifier": "-[SurveysViewController numberOfSectionsInTableView:]",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns about Objective-C methods to which no references are found. This rule will not warn about IBAction methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form *+Private.h). It also won’t warn about unused getter methods whose setter is used, and vice versa.",
      "ruleName": "Possibly unused Objective-C method",
      "ruleShortName": "UnusedMethod",
      "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool).",
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 41,
          "byteOffset": 4136,
          "line": 94,
          "utf16Column": 40,
          "utf16Offset": 4136
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 4100,
          "line": 94,
          "utf16Column": 4,
          "utf16Offset": 4100
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCRequestAppointmentNewController.m",
      "fileSnippet": "self.locationManager.delegate = self",
      "html": {
        "info": "CHCRequestAppointmentNewController attaches itself as a <code class=\"fauxpas-objcclass\">CLLocationManager</code> delegate, but does not detach in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>.",
        "ruleDescription": "When an object sets itself as the delegate or data source of one of its members, it must detach that reference in its <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code> method.",
        "ruleName": "Undetached delegate or data source",
        "ruleShortName": "UndetachedDelegate",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "CHCRequestAppointmentNewController attaches itself as a CLLocationManager delegate, but does not detach in -[NSObject dealloc].",
      "ruleDescription": "When an object sets itself as the delegate or data source of one of its members, it must detach that reference in its -[NSObject dealloc] method.",
      "ruleName": "Undetached delegate or data source",
      "ruleShortName": "UndetachedDelegate",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "SearchDoctorController",
      "extent": {
        "end": {
          "byteColumn": 68,
          "byteOffset": 9781,
          "line": 286,
          "utf16Column": 67,
          "utf16Offset": 9780
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 9714,
          "line": 286,
          "utf16Column": 0,
          "utf16Offset": 9713
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/SearchDoctorController.m",
      "fileSnippet": "- (void)czpickerViewDidClickCancelButton:(CZPickerView *)pickerView",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">czpicker</code> in the symbol name <code class=\"fauxpas-codesymbol\">czpickerViewDidClickCancelButton:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "czpicker",
      "impact": "Style",
      "info": "The word czpicker in the symbol name czpickerViewDidClickCancelButton: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": null,
      "fileSnippet": null,
      "html": {
        "info": "The ‘Class Prefix’ project setting field has no value.",
        "ruleDescription": "The ‘Organization’ and ‘Class Prefix’ settings should always be set. The expected values for other settings are configurable.",
        "ruleName": "Recommended project settings",
        "ruleShortName": "BasicProjectSettings",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": "The ‘Class Prefix’ project setting field has no value.",
      "ruleDescription": "The ‘Organization’ and ‘Class Prefix’ settings should always be set. The expected values for other settings are configurable.",
      "ruleName": "Recommended project settings",
      "ruleShortName": "BasicProjectSettings",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "instructionButtonClicked:",
      "extent": {
        "end": {
          "byteColumn": 157,
          "byteOffset": 1153,
          "line": 41,
          "utf16Column": 156,
          "utf16Offset": 1152
        },
        "start": {
          "byteColumn": 46,
          "byteOffset": 1042,
          "line": 41,
          "utf16Column": 45,
          "utf16Offset": 1041
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SurveysController/SurveysViewController.m",
      "fileSnippet": "[[InstructionsViewController alloc] initWithNibName:@\"InstructionsViewController\" bundle:[NSBundle mainBundle]]",
      "html": {
        "info": "Instantiating <code class=\"fauxpas-objcclass\">InstructionsViewController</code> outside its implementation with literal NIB name <code class=\"fauxpas-string\">InstructionsViewController</code>",
        "ruleDescription": "It is not advisable to use <code class=\"fauxpas-objcmethod\">-[UIViewController initWithNibName:bundle:]</code> to instantiate <code class=\"fauxpas-objcclass\">UIViewController</code> subclasses outside of the subclass implementation itself. This breaks encapsulation (the subclass should be the one to decide which NIB to use) and makes it more likely that a typo in the NIB name string will crash the app during runtime.",
        "ruleName": "Using <code class=\"fauxpas-objcmethod\">-[UIViewController initWithNibName:bundle:]</code> outside the <code class=\"fauxpas-objcclass\">UIViewController</code> implementation",
        "ruleShortName": "ViewControllerInitWithNibName",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": "Instantiating InstructionsViewController outside its implementation with literal NIB name InstructionsViewController",
      "ruleDescription": "It is not advisable to use -[UIViewController initWithNibName:bundle:] to instantiate UIViewController subclasses outside of the subclass implementation itself. This breaks encapsulation (the subclass should be the one to decide which NIB to use) and makes it more likely that a typo in the NIB name string will crash the app during runtime.",
      "ruleName": "Using -[UIViewController initWithNibName:bundle:] outside the UIViewController implementation",
      "ruleShortName": "ViewControllerInitWithNibName",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreenNew/HomeScreenNewContentViews/HowItWorksNewController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/checkbox-pressed.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/checkbox-pressed.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "AppUserData",
      "extent": {
        "end": {
          "byteColumn": 50,
          "byteOffset": 299,
          "line": 15,
          "utf16Column": 49,
          "utf16Offset": 298
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 250,
          "line": 15,
          "utf16Column": 0,
          "utf16Offset": 249
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/AppUserData/AppUserData.h",
      "fileSnippet": "@property (nonatomic, strong) NSString *firstName",
      "html": {
        "info": "The <code>firstName</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The firstName property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 79,
          "byteOffset": 10765,
          "line": 234,
          "utf16Column": 78,
          "utf16Offset": 10765
        },
        "start": {
          "byteColumn": 66,
          "byteOffset": 10752,
          "line": 234,
          "utf16Column": 65,
          "utf16Offset": 10752
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCHealthLogScreen/CHCHealthLogNewController.m",
      "fileSnippet": "@\"inputImage\"",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns when literal strings are used to specify key paths.</p> <p>Something like <code>NSStringFromSelector(@selector(foo))</code> is safer because it makes the compiler aware of the selector being specified — this helps find typos at compile time and allows automatic refactoring tools to make appropriate changes.</p>",
        "ruleName": "Literal string for key path",
        "ruleShortName": "LiteralStringKeyPath",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when literal strings are used to specify key paths. Something like NSStringFromSelector(@selector(foo)) is safer because it makes the compiler aware of the selector being specified — this helps find typos at compile time and allows automatic refactoring tools to make appropriate changes.",
      "ruleName": "Literal string for key path",
      "ruleShortName": "LiteralStringKeyPath",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 37,
          "byteOffset": 223,
          "line": 12,
          "utf16Column": 37,
          "utf16Offset": 222
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 186,
          "line": 12,
          "utf16Column": 0,
          "utf16Offset": 185
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/ActivityDashboardController/ActivityScaleView.h",
      "fileSnippet": "@interface ActivityScaleView : UIView",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "ActivityScaleView",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/ScheduleAppointmentController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/DoctorSearchResultsController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCArticleScreen/CHCArticleController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 101,
          "byteOffset": 5311,
          "line": 178,
          "utf16Column": 100,
          "utf16Offset": 5310
        },
        "start": {
          "byteColumn": 88,
          "byteOffset": 5298,
          "line": 178,
          "utf16Column": 87,
          "utf16Offset": 5297
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SignUpController/CHCSignUpController.m",
      "fileSnippet": "@\"tokenValue\"",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns when literal strings are used to specify key paths.</p> <p>Something like <code>NSStringFromSelector(@selector(foo))</code> is safer because it makes the compiler aware of the selector being specified — this helps find typos at compile time and allows automatic refactoring tools to make appropriate changes.</p>",
        "ruleName": "Literal string for key path",
        "ruleShortName": "LiteralStringKeyPath",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when literal strings are used to specify key paths. Something like NSStringFromSelector(@selector(foo)) is safer because it makes the compiler aware of the selector being specified — this helps find typos at compile time and allows automatic refactoring tools to make appropriate changes.",
      "ruleName": "Literal string for key path",
      "ruleShortName": "LiteralStringKeyPath",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/amazonGiftCoupan-1.jpg",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/amazonGiftCoupan-1.jpg",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/SecurityPinController/SecurityPinController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/RevealViewController/RevealViewController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": "showWithCompletion:",
      "extent": {
        "end": {
          "byteColumn": 53,
          "byteOffset": 4494,
          "line": 122,
          "utf16Column": 52,
          "utf16Offset": 4494
        },
        "start": {
          "byteColumn": 28,
          "byteOffset": 4469,
          "line": 122,
          "utf16Column": 27,
          "utf16Offset": 4469
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/IQActionSheetPickerView.h",
      "fileSnippet": "void (^)(void))completion",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended that typedef be used for all block-typed declarations, for readability.",
        "ruleName": "Block-typed declaration without typedef",
        "ruleShortName": "NonTypedefBlockDeclaration",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": null,
      "ruleDescription": "It is recommended that typedef be used for all block-typed declarations, for readability.",
      "ruleName": "Block-typed declaration without typedef",
      "ruleShortName": "NonTypedefBlockDeclaration",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "instructionButtonClicked:",
      "extent": {
        "end": {
          "byteColumn": 157,
          "byteOffset": 1842,
          "line": 69,
          "utf16Column": 156,
          "utf16Offset": 1841
        },
        "start": {
          "byteColumn": 46,
          "byteOffset": 1731,
          "line": 69,
          "utf16Column": 45,
          "utf16Offset": 1730
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/ArticlesViewController/ArticlesViewController.m",
      "fileSnippet": "[[InstructionsViewController alloc] initWithNibName:@\"InstructionsViewController\" bundle:[NSBundle mainBundle]]",
      "html": {
        "info": "Instantiating <code class=\"fauxpas-objcclass\">InstructionsViewController</code> outside its implementation with literal NIB name <code class=\"fauxpas-string\">InstructionsViewController</code>",
        "ruleDescription": "It is not advisable to use <code class=\"fauxpas-objcmethod\">-[UIViewController initWithNibName:bundle:]</code> to instantiate <code class=\"fauxpas-objcclass\">UIViewController</code> subclasses outside of the subclass implementation itself. This breaks encapsulation (the subclass should be the one to decide which NIB to use) and makes it more likely that a typo in the NIB name string will crash the app during runtime.",
        "ruleName": "Using <code class=\"fauxpas-objcmethod\">-[UIViewController initWithNibName:bundle:]</code> outside the <code class=\"fauxpas-objcclass\">UIViewController</code> implementation",
        "ruleShortName": "ViewControllerInitWithNibName",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": "Instantiating InstructionsViewController outside its implementation with literal NIB name InstructionsViewController",
      "ruleDescription": "It is not advisable to use -[UIViewController initWithNibName:bundle:] to instantiate UIViewController subclasses outside of the subclass implementation itself. This breaks encapsulation (the subclass should be the one to decide which NIB to use) and makes it more likely that a typo in the NIB name string will crash the app during runtime.",
      "ruleName": "Using -[UIViewController initWithNibName:bundle:] outside the UIViewController implementation",
      "ruleShortName": "ViewControllerInitWithNibName",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "RegistrationSurveyController",
      "extent": {
        "end": {
          "byteColumn": 48,
          "byteOffset": 1201,
          "line": 31,
          "utf16Column": 47,
          "utf16Offset": 1200
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 1154,
          "line": 31,
          "utf16Column": 0,
          "utf16Offset": 1153
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SurveysController/RegistrationSurveyController.h",
      "fileSnippet": "@property (strong, nonatomic) NSString *raceQId",
      "html": {
        "info": "The <code>raceQId</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The raceQId property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "UserModel",
      "extent": {
        "end": {
          "byteColumn": 52,
          "byteOffset": 1027,
          "line": 34,
          "utf16Column": 51,
          "utf16Offset": 1026
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 976,
          "line": 34,
          "utf16Column": 0,
          "utf16Offset": 975
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/UserModel.h",
      "fileSnippet": "@property (nonatomic, strong) NSString* deviceToken",
      "html": {
        "info": "The <code>deviceToken</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The deviceToken property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/Categories/IQUIViewController+Additions.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ChildDetails",
      "extent": {
        "end": {
          "byteColumn": 50,
          "byteOffset": 263,
          "line": 12,
          "utf16Column": 49,
          "utf16Offset": 263
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 214,
          "line": 12,
          "utf16Column": 0,
          "utf16Offset": 214
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCSurveyScreen/ChildDetails.h",
      "fileSnippet": "@property (strong, nonatomic) NSString *childName",
      "html": {
        "info": "The <code>childName</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The childName property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": "getDict:",
      "extent": {
        "end": {
          "byteColumn": 25,
          "byteOffset": 10700,
          "line": 304,
          "utf16Column": 24,
          "utf16Offset": 10700
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 10680,
          "line": 304,
          "utf16Column": 4,
          "utf16Offset": 10680
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/APIModel/APIClass.m",
      "fileSnippet": "NSError *error = nil",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns when <code class=\"fauxpas-objcclass\">NSError</code> or <code class=\"fauxpas-typedef\">CFErrorRef</code> variable values are never used.</p> <p>If you are not interested in the error return value of a method or function, pass <code class=\"fauxpas-codesymbol\">NULL</code> for the error argument.</p>",
        "ruleName": "Unused error value",
        "ruleShortName": "UnusedErrorValue",
        "ruleWarning": null
      },
      "identifier": "error",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Warns when NSError or CFErrorRef variable values are never used. If you are not interested in the error return value of a method or function, pass NULL for the error argument.",
      "ruleName": "Unused error value",
      "ruleShortName": "UnusedErrorValue",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "CZPickerView",
      "extent": {
        "end": {
          "byteColumn": 44,
          "byteOffset": 2613,
          "line": 94,
          "utf16Column": 43,
          "utf16Offset": 2613
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 2570,
          "line": 94,
          "utf16Column": 0,
          "utf16Offset": 2570
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/CZPickerView.h",
      "fileSnippet": "@property id<CZPickerViewDelegate> delegate",
      "html": {
        "info": "This property is <code class=\"fauxpas-codesymbol\">strong</code> by default.",
        "ruleDescription": "To avoid retain cycles, delegate setter methods should not retain or copy the delegate object.",
        "ruleName": "Retaining or copying delegate",
        "ruleShortName": "StrongDelegate",
        "ruleWarning": null
      },
      "identifier": "delegate",
      "impact": "Functionality",
      "info": "This property is strong by default.",
      "ruleDescription": "To avoid retain cycles, delegate setter methods should not retain or copy the delegate object.",
      "ruleName": "Retaining or copying delegate",
      "ruleShortName": "StrongDelegate",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "IQ_UIWindow_Hierarchy",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 1693,
          "line": 41,
          "utf16Column": 43,
          "utf16Offset": 1693
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 1650,
          "line": 40,
          "utf16Column": 0,
          "utf16Offset": 1650
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/Categories/IQUIWindow+Hierarchy.m",
      "fileSnippet": "- (UIViewController*)currentViewController;",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "-[UIWindow currentViewController]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": "SurveysViewController",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 2002,
          "line": 62,
          "utf16Column": 88,
          "utf16Offset": 2001
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 1914,
          "line": 61,
          "utf16Column": 0,
          "utf16Offset": 1913
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SurveysController/SurveysViewController.m",
      "fileSnippet": "-(CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns about Objective-C methods to which no references are found.</p> <p>This rule will not warn about <code class=\"fauxpas-codesymbol\">IBAction</code> methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form <code class=\"fauxpas-string\">*+Private.h</code>). It also won’t warn about unused getter methods whose setter is used, and vice versa.</p>",
        "ruleName": "Possibly unused Objective-C method",
        "ruleShortName": "UnusedMethod",
        "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool)."
      },
      "identifier": "-[SurveysViewController tableView:heightForHeaderInSection:]",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns about Objective-C methods to which no references are found. This rule will not warn about IBAction methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form *+Private.h). It also won’t warn about unused getter methods whose setter is used, and vice versa.",
      "ruleName": "Possibly unused Objective-C method",
      "ruleShortName": "UnusedMethod",
      "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool).",
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 37,
          "byteOffset": 1281,
          "line": 25,
          "utf16Column": 36,
          "utf16Offset": 1281
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 1253,
          "line": 25,
          "utf16Column": 8,
          "utf16Offset": 1253
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/Constants/IQKeyboardManagerConstants.h",
      "fileSnippet": "IQKeyboardManagerConstants_h",
      "html": {
        "info": null,
        "ruleDescription": "Simplify the header by replacing the macro definition check -based include guard with the ‘once’ pragma.",
        "ruleName": "Macro-based include guard",
        "ruleShortName": "MacroBasedIncludeGuard",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": null,
      "ruleDescription": "Simplify the header by replacing the macro definition check -based include guard with the ‘once’ pragma.",
      "ruleName": "Macro-based include guard",
      "ruleShortName": "MacroBasedIncludeGuard",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCMedicationReminderController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCAppointRequestSentController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCAppointmentDetailsController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCRequestAppointmentController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "IQ_Logging",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 9736,
          "line": 321,
          "utf16Column": 27,
          "utf16Offset": 9736
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 9709,
          "line": 320,
          "utf16Column": 0,
          "utf16Offset": 9709
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/Categories/IQUIView+Hierarchy.m",
      "fileSnippet": "-(NSString *)_IQDescription",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "-[NSObject _IQDescription]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 48,
          "byteOffset": 2122,
          "line": 44,
          "utf16Column": 48,
          "utf16Offset": 2122
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 2074,
          "line": 44,
          "utf16Column": 0,
          "utf16Offset": 2074
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SignUpController/JVFloatLabeledTextField.h",
      "fileSnippet": "@interface JVFloatLabeledTextField : UITextField",
      "html": {
        "info": "The <code class=\"fauxpas-string\">JV</code> prefix is used. Two-character prefixes are reserved for Apple’s system frameworks. The prefixes in your own (or third-party) code should be at least three characters long.",
        "ruleDescription": "Two-character prefixes (such as <code>NS</code>) are reserved for Apple’s system frameworks. Your own code should use prefixes that are three characters long.",
        "ruleName": "Reserved symbol prefix",
        "ruleShortName": "ReservedPrefix",
        "ruleWarning": null
      },
      "identifier": "JV",
      "impact": "Maintainability",
      "info": "The JV prefix is used. Two-character prefixes are reserved for Apple’s system frameworks. The prefixes in your own (or third-party) code should be at least three characters long.",
      "ruleDescription": "Two-character prefixes (such as NS) are reserved for Apple’s system frameworks. Your own code should use prefixes that are three characters long.",
      "ruleName": "Reserved symbol prefix",
      "ruleShortName": "ReservedPrefix",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "instructionButtonClicked:",
      "extent": {
        "end": {
          "byteColumn": 157,
          "byteOffset": 1835,
          "line": 59,
          "utf16Column": 156,
          "utf16Offset": 1834
        },
        "start": {
          "byteColumn": 46,
          "byteOffset": 1724,
          "line": 59,
          "utf16Column": 45,
          "utf16Offset": 1723
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/PointsRewardsController/PointsRewardsController.m",
      "fileSnippet": "[[InstructionsViewController alloc] initWithNibName:@\"InstructionsViewController\" bundle:[NSBundle mainBundle]]",
      "html": {
        "info": "Instantiating <code class=\"fauxpas-objcclass\">InstructionsViewController</code> outside its implementation with literal NIB name <code class=\"fauxpas-string\">InstructionsViewController</code>",
        "ruleDescription": "It is not advisable to use <code class=\"fauxpas-objcmethod\">-[UIViewController initWithNibName:bundle:]</code> to instantiate <code class=\"fauxpas-objcclass\">UIViewController</code> subclasses outside of the subclass implementation itself. This breaks encapsulation (the subclass should be the one to decide which NIB to use) and makes it more likely that a typo in the NIB name string will crash the app during runtime.",
        "ruleName": "Using <code class=\"fauxpas-objcmethod\">-[UIViewController initWithNibName:bundle:]</code> outside the <code class=\"fauxpas-objcclass\">UIViewController</code> implementation",
        "ruleShortName": "ViewControllerInitWithNibName",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": "Instantiating InstructionsViewController outside its implementation with literal NIB name InstructionsViewController",
      "ruleDescription": "It is not advisable to use -[UIViewController initWithNibName:bundle:] to instantiate UIViewController subclasses outside of the subclass implementation itself. This breaks encapsulation (the subclass should be the one to decide which NIB to use) and makes it more likely that a typo in the NIB name string will crash the app during runtime.",
      "ruleName": "Using -[UIViewController initWithNibName:bundle:] outside the UIViewController implementation",
      "ruleShortName": "ViewControllerInitWithNibName",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "CHCAppointRequestSentController",
      "extent": {
        "end": {
          "byteColumn": 46,
          "byteOffset": 295,
          "line": 12,
          "utf16Column": 45,
          "utf16Offset": 295
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 250,
          "line": 12,
          "utf16Column": 0,
          "utf16Offset": 250
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCAppointRequestSentController.h",
      "fileSnippet": "@property (strong, nonatomic) NSString *docID",
      "html": {
        "info": "The <code>docID</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The docID property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 57,
          "byteOffset": 256,
          "line": 12,
          "utf16Column": 57,
          "utf16Offset": 255
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 199,
          "line": 12,
          "utf16Column": 0,
          "utf16Offset": 198
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/ScheduleAppointmentNew.h",
      "fileSnippet": "@interface ScheduleAppointmentNew : UITableViewController",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "ScheduleAppointmentNew",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initWithHeaderTitle:cancelButtonTitle:confirmButtonTitle:",
      "extent": {
        "end": {
          "byteColumn": 107,
          "byteOffset": 1954,
          "line": 58,
          "utf16Column": 106,
          "utf16Offset": 1954
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 1856,
          "line": 58,
          "utf16Column": 8,
          "utf16Offset": 1856
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/CZPickerView.m",
      "fileSnippet": "self.cancelButtonNormalColor = [UIColor colorWithRed:59.0/255 green:72/255.0 blue:5.0/255 alpha:1]",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "cancelButtonNormalColor",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 49,
          "byteOffset": 227,
          "line": 11,
          "utf16Column": 49,
          "utf16Offset": 226
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 178,
          "line": 11,
          "utf16Column": 0,
          "utf16Offset": 177
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/MyAppointmentsController/ScheduleAppointmentView.h",
      "fileSnippet": "@interface ScheduleAppointmentView : UIScrollView",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "ScheduleAppointmentView",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCDoctorsListTableViewCell.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 33,
          "byteOffset": 215,
          "line": 11,
          "utf16Column": 33,
          "utf16Offset": 214
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 182,
          "line": 11,
          "utf16Column": 0,
          "utf16Offset": 181
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/AppUserData/AppUserData.h",
      "fileSnippet": "@interface AppUserData : NSObject",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "AppUserData",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 82,
          "byteOffset": 3081,
          "line": 81,
          "utf16Column": 81,
          "utf16Offset": 3081
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 2867,
          "line": 79,
          "utf16Column": 4,
          "utf16Offset": 2867
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCSurveyScreen/CHCSurveyController.m",
      "fileSnippet": "[[NSNotificationCenter defaultCenter] addObserver:self\n                                             selector:@selector(doTheReload:)\n                                                 name:@\"childListSent\"object:nil]",
      "html": {
        "info": null,
        "ruleDescription": "<p>You must invoke <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:]</code> or <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:name:object:]</code> before the observer object is deallocated.</p> <p>This rule only considers cases where the observer reference is <code>self</code>, or an instance variable or an Objective-C property in <code>self</code>.</p> <p>This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).</p>",
        "ruleName": "Missing <code class=\"fauxpas-objcclass\">NSNotificationCenter</code> observer detachment",
        "ruleShortName": "MissingNotificationCenterDetachment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "You must invoke -[NSNotificationCenter removeObserver:] or -[NSNotificationCenter removeObserver:name:object:] before the observer object is deallocated. This rule only considers cases where the observer reference is self, or an instance variable or an Objective-C property in self. This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).",
      "ruleName": "Missing NSNotificationCenter observer detachment",
      "ruleShortName": "MissingNotificationCenterDetachment",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/interface - arrow right copy 2.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/interface - arrow right copy 2.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UISegmentedControl</code> (id <code class=\"fauxpas-string\">ZwD-qk-HJu</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UISegmentedControl (id ZwD-qk-HJu)",
      "impact": "Maintainability",
      "info": "Misplaced view: UISegmentedControl (id ZwD-qk-HJu) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UISegmentedControl</code> (id <code class=\"fauxpas-string\">iDY-ho-Caz</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UISegmentedControl (id iDY-ho-Caz)",
      "impact": "Maintainability",
      "info": "Misplaced view: UISegmentedControl (id iDY-ho-Caz) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "UserModel",
      "extent": {
        "end": {
          "byteColumn": 52,
          "byteOffset": 552,
          "line": 20,
          "utf16Column": 51,
          "utf16Offset": 551
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 501,
          "line": 20,
          "utf16Column": 0,
          "utf16Offset": 500
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/UserModel.h",
      "fileSnippet": "@property (nonatomic, strong) NSString* phoneNumber",
      "html": {
        "info": "The <code>phoneNumber</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The phoneNumber property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "HealthDashbooardViewController",
      "extent": {
        "end": {
          "byteColumn": 52,
          "byteOffset": 3790,
          "line": 92,
          "utf16Column": 51,
          "utf16Offset": 3789
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 3739,
          "line": 92,
          "utf16Column": 0,
          "utf16Offset": 3738
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/HealthDashboardViewController/HealthDashbooardViewController.m",
      "fileSnippet": "- (IBAction)hedisMilestonesButtonClicked:(id)sender",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">hedis</code> in the symbol name <code class=\"fauxpas-codesymbol\">hedisMilestonesButtonClicked:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "hedis",
      "impact": "Style",
      "info": "The word hedis in the symbol name hedisMilestonesButtonClicked: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": "ListSurveysViewController",
      "extent": {
        "end": {
          "byteColumn": 95,
          "byteOffset": 2302,
          "line": 78,
          "utf16Column": 94,
          "utf16Offset": 2301
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 2208,
          "line": 78,
          "utf16Column": 0,
          "utf16Offset": 2207
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SurveysController/ListSurveysViewController.m",
      "fileSnippet": "- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns about Objective-C methods to which no references are found.</p> <p>This rule will not warn about <code class=\"fauxpas-codesymbol\">IBAction</code> methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form <code class=\"fauxpas-string\">*+Private.h</code>). It also won’t warn about unused getter methods whose setter is used, and vice versa.</p>",
        "ruleName": "Possibly unused Objective-C method",
        "ruleShortName": "UnusedMethod",
        "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool)."
      },
      "identifier": "-[ListSurveysViewController tableView:heightForRowAtIndexPath:]",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns about Objective-C methods to which no references are found. This rule will not warn about IBAction methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form *+Private.h). It also won’t warn about unused getter methods whose setter is used, and vice versa.",
      "ruleName": "Possibly unused Objective-C method",
      "ruleShortName": "UnusedMethod",
      "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool).",
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> <code class=\"fauxpas-string\">Questions to be asked?</code> (id <code class=\"fauxpas-string\">VKo-EM-gs4</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel Questions to be asked? (id VKo-EM-gs4)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel Questions to be asked? (id VKo-EM-gs4) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/ic_forward1.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/Images/ic_forward1.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 55,
          "byteOffset": 239,
          "line": 11,
          "utf16Column": 55,
          "utf16Offset": 239
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 184,
          "line": 11,
          "utf16Column": 0,
          "utf16Offset": 184
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCHealthLogScreen/LoggerDetailsTableViewCell.h",
      "fileSnippet": "@interface LoggerDetailsTableViewCell : UITableViewCell",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "LoggerDetailsTableViewCell",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/SignUpController/JVFloatLabeledTextField.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Ambiguous view: <code class=\"fauxpas-objcclass\">JVFloatLabeledTextField</code> (id <code class=\"fauxpas-string\">omc-18-uoF</code>) — the position and size of this view are ambiguous.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "JVFloatLabeledTextField (id omc-18-uoF)",
      "impact": "Maintainability",
      "info": "Ambiguous view: JVFloatLabeledTextField (id omc-18-uoF) — the position and size of this view are ambiguous.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Ambiguous view: <code class=\"fauxpas-objcclass\">JVFloatLabeledTextField</code> (id <code class=\"fauxpas-string\">LW6-eb-GN9</code>) — the position and size of this view are ambiguous.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "JVFloatLabeledTextField (id LW6-eb-GN9)",
      "impact": "Maintainability",
      "info": "Ambiguous view: JVFloatLabeledTextField (id LW6-eb-GN9) — the position and size of this view are ambiguous.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Ambiguous view: <code class=\"fauxpas-objcclass\">JVFloatLabeledTextField</code> (id <code class=\"fauxpas-string\">qMi-ET-gQt</code>) — the position and size of this view are ambiguous.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "JVFloatLabeledTextField (id qMi-ET-gQt)",
      "impact": "Maintainability",
      "info": "Ambiguous view: JVFloatLabeledTextField (id qMi-ET-gQt) — the position and size of this view are ambiguous.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Ambiguous view: <code class=\"fauxpas-objcclass\">JVFloatLabeledTextField</code> (id <code class=\"fauxpas-string\">4Ko-S0-xLg</code>) — the position and size of this view are ambiguous.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "JVFloatLabeledTextField (id 4Ko-S0-xLg)",
      "impact": "Maintainability",
      "info": "Ambiguous view: JVFloatLabeledTextField (id 4Ko-S0-xLg) — the position and size of this view are ambiguous.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Ambiguous view: <code class=\"fauxpas-objcclass\">JVFloatLabeledTextField</code> (id <code class=\"fauxpas-string\">1hs-43-tXR</code>) — the position and size of this view are ambiguous.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "JVFloatLabeledTextField (id 1hs-43-tXR)",
      "impact": "Maintainability",
      "info": "Ambiguous view: JVFloatLabeledTextField (id 1hs-43-tXR) — the position and size of this view are ambiguous.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Ambiguous view: <code class=\"fauxpas-objcclass\">JVFloatLabeledTextField</code> (id <code class=\"fauxpas-string\">bjm-26-AkK</code>) — the position and size of this view are ambiguous.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "JVFloatLabeledTextField (id bjm-26-AkK)",
      "impact": "Maintainability",
      "info": "Ambiguous view: JVFloatLabeledTextField (id bjm-26-AkK) — the position and size of this view are ambiguous.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Ambiguous view: <code class=\"fauxpas-objcclass\">JVFloatLabeledTextField</code> (id <code class=\"fauxpas-string\">0ZP-vz-oe8</code>) — the position and size of this view are ambiguous.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "JVFloatLabeledTextField (id 0ZP-vz-oe8)",
      "impact": "Maintainability",
      "info": "Ambiguous view: JVFloatLabeledTextField (id 0ZP-vz-oe8) — the position and size of this view are ambiguous.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Ambiguous view: <code class=\"fauxpas-objcclass\">JVFloatLabeledTextField</code> (id <code class=\"fauxpas-string\">Cyh-Pb-5nc</code>) — the position and size of this view are ambiguous.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "JVFloatLabeledTextField (id Cyh-Pb-5nc)",
      "impact": "Maintainability",
      "info": "Ambiguous view: JVFloatLabeledTextField (id Cyh-Pb-5nc) — the position and size of this view are ambiguous.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Ambiguous view: <code class=\"fauxpas-objcclass\">JVFloatLabeledTextField</code> (id <code class=\"fauxpas-string\">73G-NH-oVc</code>) — the position and size of this view are ambiguous.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "JVFloatLabeledTextField (id 73G-NH-oVc)",
      "impact": "Maintainability",
      "info": "Ambiguous view: JVFloatLabeledTextField (id 73G-NH-oVc) — the position and size of this view are ambiguous.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Ambiguous view: <code class=\"fauxpas-objcclass\">JVFloatLabeledTextField</code> (id <code class=\"fauxpas-string\">xGv-KJ-JyD</code>) — the position and size of this view are ambiguous.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "JVFloatLabeledTextField (id xGv-KJ-JyD)",
      "impact": "Maintainability",
      "info": "Ambiguous view: JVFloatLabeledTextField (id xGv-KJ-JyD) — the position and size of this view are ambiguous.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Ambiguous view: <code class=\"fauxpas-objcclass\">JVFloatLabeledTextField</code> (id <code class=\"fauxpas-string\">dLJ-z0-dYZ</code>) — the position and size of this view are ambiguous.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "JVFloatLabeledTextField (id dLJ-z0-dYZ)",
      "impact": "Maintainability",
      "info": "Ambiguous view: JVFloatLabeledTextField (id dLJ-z0-dYZ) — the position and size of this view are ambiguous.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Ambiguous view: <code class=\"fauxpas-objcclass\">JVFloatLabeledTextField</code> (id <code class=\"fauxpas-string\">hgj-GQ-tlT</code>) — the position and size of this view are ambiguous.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "JVFloatLabeledTextField (id hgj-GQ-tlT)",
      "impact": "Maintainability",
      "info": "Ambiguous view: JVFloatLabeledTextField (id hgj-GQ-tlT) — the position and size of this view are ambiguous.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Home.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Misplaced view: <code class=\"fauxpas-objcclass\">UILabel</code> <code class=\"fauxpas-string\">REDEEM NOW</code> (id <code class=\"fauxpas-string\">DBn-C1-Oye</code>) — the frame of this view will be different at runtime.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "UILabel REDEEM NOW (id DBn-C1-Oye)",
      "impact": "Maintainability",
      "info": "Misplaced view: UILabel REDEEM NOW (id DBn-C1-Oye) — the frame of this view will be different at runtime.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initWithCoder:",
      "extent": {
        "end": {
          "byteColumn": 79,
          "byteOffset": 2737,
          "line": 69,
          "utf16Column": 78,
          "utf16Offset": 2736
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 2663,
          "line": 69,
          "utf16Column": 4,
          "utf16Offset": 2662
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/Models/UserModel.m",
      "fileSnippet": "self.register_survey    = [aDecoder decodeObjectForKey:@\"register_survey\"]",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "register_survey",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "IQToolbarAddition",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 20898,
          "line": 471,
          "utf16Column": 238,
          "utf16Offset": 20898
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 20660,
          "line": 470,
          "utf16Column": 0,
          "utf16Offset": 20660
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/IQToolbar/IQUIView+IQKeyboardToolbar.m",
      "fileSnippet": "- (void)addPreviousNextRightOnKeyboardWithTarget:(id)target rightButtonTitle:(NSString*)rightButtonTitle previousAction:(SEL)previousAction nextAction:(SEL)nextAction rightButtonAction:(SEL)rightButtonAction titleText:(NSString*)titleText",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "-[UIView addPreviousNextRightOnKeyboardWithTarget:rightButtonTitle:previousAction:nextAction:rightButtonAction:titleText:]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/drawable/btn_appointment_selector.xml",
      "fileSnippet": null,
      "html": {
        "info": "This file is equal to the file <div class=\"fauxpas-filepath\">/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/drawable/button_selector.xml</div>.",
        "ruleDescription": "Warns if two resource files are equal.",
        "ruleName": "Duplicate resource",
        "ruleShortName": "DuplicateResource",
        "ruleWarning": null
      },
      "identifier": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/drawable/button_selector.xml",
      "impact": "Maintainability",
      "info": "This file is equal to the file /Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Resource/drawable/button_selector.xml.",
      "ruleDescription": "Warns if two resource files are equal.",
      "ruleName": "Duplicate resource",
      "ruleShortName": "DuplicateResource",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Base.lproj/Main.storyboard",
      "fileSnippet": null,
      "html": {
        "info": "Ambiguous view: <code class=\"fauxpas-objcclass\">JVFloatLabeledTextField</code> (id <code class=\"fauxpas-string\">dVP-Xs-vEf</code>) — the position and size of this view are ambiguous.",
        "ruleDescription": "<p>Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout.</p> <p>This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.</p>",
        "ruleName": "Erroneous view layout in XIB",
        "ruleShortName": "ViewLayoutInXIB",
        "ruleWarning": null
      },
      "identifier": "JVFloatLabeledTextField (id dVP-Xs-vEf)",
      "impact": "Maintainability",
      "info": "Ambiguous view: JVFloatLabeledTextField (id dVP-Xs-vEf) — the position and size of this view are ambiguous.",
      "ruleDescription": "Warns about views that are marked as ‘misplaced’ or ‘ambiguous’ in XIBs or storyboards that use autolayout. This rule relies on XIB annotations added by Xcode, which means that no diagnostics will be emitted for misplaced or ambiguous views that have not (yet) been annotated by Xcode.",
      "ruleName": "Erroneous view layout in XIB",
      "ruleShortName": "ViewLayoutInXIB",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Images.xcassets/check-sign.imageset",
      "fileSnippet": null,
      "html": {
        "info": "Asset catalog ‘Images’, set ‘check-sign’: The ‘x3 scale, Universal’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "Asset catalog ‘Images’, set ‘check-sign’: The ‘x3 scale, Universal’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Images.xcassets/check-sign.imageset",
      "fileSnippet": null,
      "html": {
        "info": "Asset catalog ‘Images’, set ‘check-sign’: The ‘x2 scale, Universal’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "Asset catalog ‘Images’, set ‘check-sign’: The ‘x2 scale, Universal’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 18,
          "byteOffset": 21,
          "line": 2,
          "utf16Column": 18,
          "utf16Offset": 21
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 3,
          "line": 2,
          "utf16Column": 0,
          "utf16Offset": 3
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/CZPickerView.m",
      "fileSnippet": "//  CZPickerView.h",
      "html": {
        "info": "The file name in the source file header comment (<code class=\"fauxpas-string\">CZPickerView.h</code>) does not match the actual file name (<code class=\"fauxpas-string\">CZPickerView.m</code>).",
        "ruleDescription": "Warns about errors in source file header comments (that are formatted using the default Xcode template), for example if the file name in the comment does not match the actual file name, or if the placeholder <code class=\"fauxpas-string\">__MyCompanyName__</code> is present.",
        "ruleName": "Source file header comment format",
        "ruleShortName": "SourceFileHeaderComment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": "The file name in the source file header comment (CZPickerView.h) does not match the actual file name (CZPickerView.m).",
      "ruleDescription": "Warns about errors in source file header comments (that are formatted using the default Xcode template), for example if the file name in the comment does not match the actual file name, or if the placeholder __MyCompanyName__ is present.",
      "ruleName": "Source file header comment format",
      "ruleShortName": "SourceFileHeaderComment",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/ThirdPartyLibs/IQKeyBoardManager/IQKeyboardReturnKeyHandler.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "locationManager:didUpdateLocations:",
      "extent": {
        "end": {
          "byteColumn": 31,
          "byteOffset": 6888,
          "line": 184,
          "utf16Column": 30,
          "utf16Offset": 6888
        },
        "start": {
          "byteColumn": 17,
          "byteOffset": 6874,
          "line": 184,
          "utf16Column": 16,
          "utf16Offset": 6874
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/LocationManager.m",
      "fileSnippet": "notified = YES",
      "html": {
        "info": null,
        "ruleDescription": "<p>Writing to static variables (which is essentially global state) in instance methods is generally considered bad practice, because it easily leads to undesireable behavior when multiple instances are being manipulated.</p> <p>Warnings are suppressed for assignments occurring inside <code class=\"fauxpas-cfunction\">dispatch_once()</code> blocks.</p>",
        "ruleName": "Instance method writes to static variable",
        "ruleShortName": "InstanceMethodWritesToStaticVariable",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Writing to static variables (which is essentially global state) in instance methods is generally considered bad practice, because it easily leads to undesireable behavior when multiple instances are being manipulated. Warnings are suppressed for assignments occurring inside dispatch_once() blocks.",
      "ruleName": "Instance method writes to static variable",
      "ruleShortName": "InstanceMethodWritesToStaticVariable",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": "APIClass",
      "extent": {
        "end": {
          "byteColumn": 94,
          "byteOffset": 8906,
          "line": 241,
          "utf16Column": 93,
          "utf16Offset": 8906
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 8813,
          "line": 241,
          "utf16Column": 0,
          "utf16Offset": 8813
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/APIModel/APIClass.m",
      "fileSnippet": "- (void)connection:(NSURLConnection *)connection didReceiveResponse:(NSURLResponse *)response",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns about Objective-C methods to which no references are found.</p> <p>This rule will not warn about <code class=\"fauxpas-codesymbol\">IBAction</code> methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form <code class=\"fauxpas-string\">*+Private.h</code>). It also won’t warn about unused getter methods whose setter is used, and vice versa.</p>",
        "ruleName": "Possibly unused Objective-C method",
        "ruleShortName": "UnusedMethod",
        "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool)."
      },
      "identifier": "-[APIClass connection:didReceiveResponse:]",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns about Objective-C methods to which no references are found. This rule will not warn about IBAction methods, initializer methods, or public methods (methods with a declaration in a header file, excluding header files named in the form *+Private.h). It also won’t warn about unused getter methods whose setter is used, and vice versa.",
      "ruleName": "Possibly unused Objective-C method",
      "ruleShortName": "UnusedMethod",
      "ruleWarning": "Please ensure that each method you remove from your code is in fact unused — in some cases this rule may flag methods that are not actually unused (for example some that are referenced from code that has not been checked by this tool).",
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 58,
          "byteOffset": 246,
          "line": 11,
          "utf16Column": 58,
          "utf16Offset": 245
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 188,
          "line": 11,
          "utf16Column": 0,
          "utf16Offset": 187
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/InstructionsViewController/InstructionsViewController.h",
      "fileSnippet": "@interface InstructionsViewController : BaseViewController",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "InstructionsViewController",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Images.xcassets/Earn Points/book-blue.imageset",
      "fileSnippet": null,
      "html": {
        "info": "Asset catalog ‘Images’, set ‘book-blue’: The ‘x3 scale, Universal’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "Asset catalog ‘Images’, set ‘book-blue’: The ‘x3 scale, Universal’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "CHCAppointmentDetailsController",
      "extent": {
        "end": {
          "byteColumn": 46,
          "byteOffset": 294,
          "line": 12,
          "utf16Column": 45,
          "utf16Offset": 294
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 249,
          "line": 12,
          "utf16Column": 0,
          "utf16Offset": 249
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/CHCControllers/CHCHomeScreen/CHCRevealViewScreen/CHCRevealListControllers/CHCAppointmentDetailsController.h",
      "fileSnippet": "@property (strong, nonatomic) NSString *docID",
      "html": {
        "info": "The <code>docID</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The docID property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Images.xcassets/Earn Points/book-blue.imageset",
      "fileSnippet": null,
      "html": {
        "info": "Asset catalog ‘Images’, set ‘book-blue’: The ‘x2 scale, Universal’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "Asset catalog ‘Images’, set ‘book-blue’: The ‘x2 scale, Universal’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initWithReachabilityRef:",
      "extent": {
        "end": {
          "byteColumn": 35,
          "byteOffset": 5582,
          "line": 168,
          "utf16Column": 34,
          "utf16Offset": 5582
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 5556,
          "line": 168,
          "utf16Column": 8,
          "utf16Offset": 5556
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/APIModel/Reachability.m",
      "fileSnippet": "self.reachabilityRef = ref",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "reachabilityRef",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "_rightViewDeploymentForNewFrontViewPosition:",
      "extent": {
        "end": {
          "byteColumn": 44,
          "byteOffset": 43878,
          "line": 1284,
          "utf16Column": 43,
          "utf16Offset": 43878
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 43843,
          "line": 1284,
          "utf16Column": 8,
          "utf16Offset": 43843
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/SWRevealViewController.m",
      "fileSnippet": "newPosition = FrontViewPositionLeft",
      "html": {
        "info": null,
        "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
        "ruleName": "Modifying the value of an argument variable",
        "ruleShortName": "ArgumentModification",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
      "ruleName": "Modifying the value of an argument variable",
      "ruleShortName": "ArgumentModification",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Controllers/ProfileDashBoardController/ProfileDashboardViewController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "SWRevealViewController",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 25184,
          "line": 788,
          "utf16Column": 111,
          "utf16Offset": 25184
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 25073,
          "line": 787,
          "utf16Column": 0,
          "utf16Offset": 25073
        }
      },
      "file": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare/Utilities/SWRevealViewController.m",
      "fileSnippet": "- (void)_getRevealWidth:(CGFloat*)pRevealWidth revealOverDraw:(CGFloat*)pRevealOverdraw forSymetry:(int)symetry",
      "html": {
        "info": "The word <code class=\"fauxpas-string\">Symetry</code> in the symbol name <code class=\"fauxpas-codesymbol\">_getRevealWidth:revealOverDraw:forSymetry:</code> may be misspelled.",
        "ruleDescription": "<p>Warns if some words in code symbol names are spelled incorrectly.</p> <p>This rule expects code symbol names to be in English (US and/or GB).</p>",
        "ruleName": "Spelling error",
        "ruleShortName": "Spelling",
        "ruleWarning": null
      },
      "identifier": "Symetry",
      "impact": "Style",
      "info": "The word Symetry in the symbol name _getRevealWidth:revealOverDraw:forSymetry: may be misspelled.",
      "ruleDescription": "Warns if some words in code symbol names are spelled incorrectly. This rule expects code symbol names to be in English (US and/or GB).",
      "ruleName": "Spelling error",
      "ruleShortName": "Spelling",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    }
  ],
  "fauxPasVersion": "1.7.1",
  "projectIconBase64PNG": "",
  "projectName": "ChoiceHealthCare",
  "projectPath": "/Users/bigFrat15/Desktop/ChoiceIOS-master/ChoiceHealthCare.xcodeproj",
  "targetBundleVersion": "21",
  "targetName": "ChoiceHealthCare",
  "timeStamp": 1491937992,
  "versionControlRevision": "",
  "versionControlSystemName": "Git"
}